<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[遗传算法与多目标组合优化论文]]></title>
    <url>%2F2020%2F02%2F29%2FMOEA_review.html</url>
    <content type="text"><![CDATA[test test]]></content>
      <categories>
        <category>Quant</category>
      </categories>
      <tags>
        <tag>Portfolio Optimisation</tag>
        <tag>MOOP</tag>
        <tag>Evolutionary Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019总结——加快节奏]]></title>
    <url>%2F2019%2F12%2F30%2F2020_plan.html</url>
    <content type="text"><![CDATA[时间真的是飞逝，2019年居然已经结束了。我都干了什么了？ 2019回看2018年总结，感觉对2019年的预言都实现了。 换工作人生第一次跳槽，是无奈，是运气，是机会。换了地方，才发现原来的工作是有多轻松。真是非常感谢前老板们，给了我5年不求业绩，自我发掘的时间。大概也只有在大国企才有这种好事吧。 现在的工作，每天都感觉在赛狗。几乎没有时间可以停下来，想一想该往哪里跑。写年终考核的时候才发现，原来半年里我做了这么多项目。 小赚一笔正如去年总结，当时的转债黄金坑，在19年被迅速的填上了，节奏太快了。这一年，开了期货户，转债、海外、期货，都做赚了些小钱。全年整体收益大概24%吧。最高的时候应该差不多50%了，还是心态不好，经验不足啊。 20202020，感觉要做的事情还有很多。 工作上，还是继续加油跑吧。充实工作的每一天也是很快乐的。投资上，注意心态，放慢频率，可以做的更好。生活上，珍惜每天睡前与儿子们的尬聊时光。 希望2020年总结的时候，也会是满满当当的一年。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>个人</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[进化算法下组合优化的限制条件设置]]></title>
    <url>%2F2019%2F10%2F13%2FPortfolio_Optimisation_with_EA.html</url>
    <content type="text"><![CDATA[在用进化算法求解多目标组合优化时，一旦出现3个或以上目标，并存在一定限制条件的情况下，标准的进化算法（NSGA2、NSGA3、SPEA2）的收敛效果都不好，感觉是收敛到某个非最优解后没法再跳到其他可行域。看到Deb就NSGA2的算法在组合优化的应用，应该可以解决目前的问题。 Deb原文 测试完再更新]]></content>
      <categories>
        <category>Quant</category>
      </categories>
      <tags>
        <tag>Portfolio Optimisation</tag>
        <tag>MOOP</tag>
        <tag>NSGA</tag>
        <tag>Evolutionary Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019-04-26市场笔记]]></title>
    <url>%2F2019%2F04%2F26%2FDiary.html</url>
    <content type="text"><![CDATA[4月初申请离职以来，度过了无心工作的一个月。也是我向往的生活：用自己的钱验证自己的研究。俗称：炒股票的韭菜 赎回个股数量不断累积景旺04-23赎回登记日；常熟转债也触发赎回； 巨化EB发行失败主要有几方面原因： 票面利率最低0.1%，约等于没息，太自信了吧？ 浙商没有包销，只能说债承的各方面实力还是不够啊（不去看来是选对了哈） 申购资格限制，非3A散户不能参与]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019-03-29市场笔记]]></title>
    <url>%2F2019%2F03%2F29%2FDiary.html</url>
    <content type="text"><![CDATA[康泰强赎03-22晚，康泰公告触发强赎。赎回价100.13元/张赎回登记日2019-05-06赎回日（停止交易和转股）2019-05-07发行人资金到账日2019-05-10投资者赎回款到账日2019-05-14 时达转债下修议案03-26，新时达公告董事会提议下修转债转股价，04-11召开股东大会投票。 众信转债下修议案03-28，众信旅游公告董事会提议下修转债转股价，04-16召开股东大会投票。 蓝思转债未下修到底03-29，蓝思科技股东大会表决下修议案通过。这已经是蓝思的第三次下修议案了。转股价格由16.08元/股调整为10.46元/股。而前20日、前1日、净资产分别为8.97、8.4、6.36元/股，未下修到底。2018-06-08的第一次下修被否，普遍解读为股东大会上大股东不作为。2018-07-26的第二次下修，也没有下修到底。 12月7日，蓝思科技在路演中表示“大股东将积极认购”，不过到了12月8日申购，第一大股东因资金无法及时到位，社会公众投资者“接盘”了36.08亿元的优先配售。这也使得中小投资者的申购额达到41.5亿，占到发行总量的86.46%，网上中签率0.33%，这样的中签率也创下了信用申购开启后的新高。 有这样的大股东，转债投资人还真是挺累心的。不过，也足以体现大股东股权融资的心思。有3必有4，要我到期赎回？那是不可能的。 海印转债下修到底03-29，海印股份股东大会表决下修议案通过，本次为海印的第二次下修。转股价有3.5元/股调整为3.03元/股，下修到底。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019-03-23市场笔记]]></title>
    <url>%2F2019%2F03%2F23%2FDiary.html</url>
    <content type="text"><![CDATA[已经有不少转债开始退市计数，未来发行和退市应该都是常态了。 海印转债第二次下修三一转债退市03-19最后交易日 常熟转债强赎公告03-18，常熟触发强赎条款，但是第一大股东交通银行的转股事宜需获中国银保监的批准，具体赎回时间待定。 横河转债接近3000万阈值博世转债下修议案03-20公告，04-08开股东大会投票。 网下申购政策有变03-20，窗口指导招商公路承销商不允许一个机构多账户申购，以及申购金额与资产规模的匹配度。亨通转债发行结果公告也延迟公布了。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019-03-08市场笔记]]></title>
    <url>%2F2019%2F03%2F08%2FDiary.html</url>
    <content type="text"><![CDATA[牛市来了？ 疯狂转债利欧转债还清楚记得18年底，人人骂利欧20多亿买公众号公司，转债价格一路跌到考虑信用风险。才几个月，就成了香饽饽了。 三一强赎三一重工3月4日公告，转债将于2019-03-19进行赎回。赎回价格：100.304元/张发放日：2019-03-26 岭南转债提议下修岭南股份03-05公告，董事会提议下修议案，03-21召开临时股东大会投票。岭南转债3、4日的涨幅应该已经隐含了消息泄露的价值。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019-02-22市场笔记]]></title>
    <url>%2F2019%2F02%2F22%2FDiary.html</url>
    <content type="text"><![CDATA[春节休个假，完美踏空了。 三一再次进入强赎计数平银转债上市114元远超申购时预期，也反应了市场目前的火热情绪。有利于其他大票转债发行，预计其他几大银行转债会赶在3月年报出来前完成发行。平银转债短期可以作为交易的好品种，但114元已经充分反映了平银的价值，在1200亿新银行转债上市压力下，投资价值有限。 蓝标转债回售02-14蓝标转债回售结束，最后一天收盘价100.6元，全天价格超过回售价格100.18元。 最终仅2500万参与回售，蓝标转债成功躲避回售压力。 与之前的分析基本一致，在形势较明确以后，100元附近买入蓝标，也有很不错的收益。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019-01-25市场笔记]]></title>
    <url>%2F2019%2F01%2F25%2FDiary.html</url>
    <content type="text"><![CDATA[特麻辣粉来了！ 天马转债，2019第一只下修1-15，天马科技公告下修议案，1月31日召开股东大会表决。 平安银行转债发行市场对平安银行的转债发行情绪高涨，预计中签率会很低。网上打新的中签及收益会很低。对于小资金的机构来说，顶格参与网下，收益可能还不错。 央行投放TMLF1月23日，央行首次开展2575亿元TMLF，期限1年，利率3.15%。 到期可续作2次（3年期），利率比MLF低15BP。 盛路转债开始转股1月23日，盛路转债进入转股期，之前的大幅折价明显收敛。可以根据盘中情况参与日内低价博弈，“套”套利者的利。收盘折价近3%，近期5G依旧是热点，股价弹性会比较大，可以参与转股。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019-01-11市场笔记]]></title>
    <url>%2F2019%2F01%2F11%2FDiary.html</url>
    <content type="text"><![CDATA[放水放水放水，坚决不搞大水漫灌！ 全面降准1月4日中午，新闻公告李克强考察三大银行普惠金融部，并在银保监会主持召开座谈会：进一步采取减税降费措施，运用好全面降准、定向降准工具。 收盘后，央行公告全面降准1%。其中1月15日，25日分别下调0.5%。同时一季度到期的MLF不再续作。总计释放资金1.5万亿，净释放8000亿左右。 刺激政策 发改委副主任宁吉喆称，今年将出台鼓励汽车、家电消费新政。 汽车产业链长，出政策利好可以影响的产业上下游范围广。现在的问题是2018年国内乘用车市场下滑明显，什么样的刺激政策可以促进消费者买新车？ 车子便宜，更多无车人购买 汽车优化，有车族改善型需求 工资收入提高，有钱买车了 转债市场的汽车相关标的很多，可以根据刺激政策分上下游不同影响。 央行买股票中证网刊评，央行持有本国股票资产大有可为。（由东兴证券首席经济学家张岸元撰写） 因为这个消息股市大涨半天，有点扯淡。 久其软件回购计划久其转债拟回购0.6-1.2亿元公司股票。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蓝标转债，是坑吗]]></title>
    <url>%2F2019%2F01%2F04%2FSZ123001_note.html</url>
    <content type="text"><![CDATA[最早写于2018-08-22更新于2019-01-19 蓝色光标2018-08-21公告称董事会提议下修转债转股价。目前蓝标转债价格90.5元左右，到期收益率近7%，回售收益率11%，是一个值得关注的转债个券。 基本情况2015-12-18发行，14亿规模，6年期，票息（0.5, 0.7, 1, 1.5, 1.8, 2），到期含息补偿8%；2016-06-27进入转股期， 初始转股价15.3元/股；赎回：2016-06-27， 15/30， 130%；回售：2019-12-18， 30/30， 70%；下修：10/20， 85% 公司及债券评级保持AA，转债余额接近14亿。 事件2017年6月，公司下调转股价至10元/股（未下修到底，前20日7.79，前一日7.42，每股净资产2.71）。 2017年8月，公司董事会会议，审议通过使用不超过5亿元闲置转债募集资金暂时补充流动资金，使用期限不超过12个月。 2017年9月，收到证监会北京监管局警示函：转债募集资金投资项目实际投资进度与投资计划存在差异，公司未解释具体原因并进行披露。 2017年10月，公司回复：存在改变募集资金使用用途的可能。将于未来6个月内择机尽快履行变更募投项目的程序。 2018年4月，公司公告：尚未确定变更后的募投，将于2018年12月31日前择机尽快履行程序。 2018年4月-5月，公司因转债、年报等多次收到证监会问询函。 2018年8月21日，公司公告董事会提议下修转股价（第二次下修）。 2018年9月7日，蓝色光标临时股东大会通过下修议案，9月11日起下调转股价至5.29元/股（下修到底，前20日5.29，前一日5.25，净资产2.82）。 16蓝标债2016年发行了4亿规模，3+2Y的公司债，票面利率3.99%，2019-01-19将触发回售。 18年8月底报价在91元左右，回售收益年化26%。根据目前的市场情况，明年1月这4亿债券大概率将被要求回售。 分析从公司角度来看，到期（2021年）前拿出钱来还款肯定是不愿意的。作为一家非常精明的公关公司，主动违约的风险暂时不考虑。 明年1月的4亿公司债大概率需要筹钱以备回售； 如果现在公告有新投资项目（公司实施变更募投回售），那么转债也将最晚在明年1月进入回售，公司同时偿还18亿现金的可能极小。 目前转债有5.5亿闲置资金补充流动资金至18年底，如果转债今年不被回售，公司应该可以偿还16公司债。 所以，我认为蓝标今年不会因为变更募投而主动触发回售： 继续拖延回售程序。目前舆论对蓝标公司的商誉、信用、公司治理等方面评价均偏负面，市场普遍认为这种情况的概率最高。那么公司股价大概率继续下跌，债底价值将决定转债价格。需要考虑的因素包括2019年底的回售收益率，2021年到期低评级民企信用债的到期收益率。 年底前完成大部分转债转股。这是最理想的情况，需要各方面配合。转债下修到底是第一步，还需要利好刺激股价、市场环境改善等。 更新2018-09-07晚下修议案通过09-07，15:00股东大会，现场+网络投票 现场：18人，689077325股，31.58%；网络：82人，160458916股，7.35%；合计：100人，849536241股，38.93%；其中，中小投资者93人，71795909股，3.29%；其余为5%以上股东或公司董监高。 下修议案通过：同意833223802股，98.0798%反对16312439股，1.9202%反对票全都来自中小投资者。 还有一个《向股东大会申请授权董事会全权办理调整“蓝标转债”转股价相关事宜的议案》也通过审议。 2018-09-10晚公司公告蓝标转债转股价下修到底，至5.29元/股（前20日），09-11生效 另外公告，实控人赵文权就2013-2017年间并购博杰广告的事宜，自愿补偿上市公司1亿元，作为补充资本金。公告日后6个月内支付5千万，12个月内再支付5千万。 近期证监会宣传鼓励的是股票回购，为什么大股东要”白送”1个亿，不做回购？实控人有很高的股票质押比例，拿什么钱给公司？ 2018-09-11开盘蓝标转债报96.3，涨近3%；蓝色光标昨收5.09开盘，小幅震荡；蓝标转债在96元附近就出现负溢价。9:50开始正股大幅跳水，最低触及跌停；转债回吐全部涨幅。 集思路网友脑补蓝标出路@luoyoucun:蓝标董事会年底发布公告，宣布改变募集资金用途，触发回售，但由于资金不足，回售违约。董事会表示我们已经尽最大努力下修转股价了。转债持有者纷纷抛售，造成转债负溢价，套利党趁机搬砖。蓝标转债成功实现面值以下完成转股。 脑洞够大，大股东不要脸的话可以考虑一下。 2019-1-212月28日晚，蓝色光标公告，1月30日召开临时股东大会、转债持有人大会，审议《关于变更部分可转换公司债券募集资金投资项目的议案》，将原“电商综合服务平台”项目及“蓝色天幕全球机场联播媒体网络模块”项目变更为“永久补充流动资金”项目，原项目剩余募集资金及存款利息共5.36亿元。 须经出席会议的代表过半数本期未偿还债券面值总额的债券持有人（或债券持有人代理人）同意方能形成有效决议。投票只能通过现场参会、传真或邮寄方式，没有网上投票通道。是不是可能会存在人为因素干扰投票结果？ 2019-1-31月3日晚，蓝标再发公告，债券持有人大会增加议程，审议《关于不要求北京蓝色光标数据科技股份有限公司提前清偿“蓝标转债”之债务或提供相应担保事项的议案》。如果议案未获得半数以上投票通过，则与变更募集资金用途的回售同时进行。 2019-1-4分析目前的情况来看，主要有以下几种可能： 会议审议通过，转债触发回售：– 蓝标公司如期回售交割– 蓝标公司回售违约 会议审议不通过，不触发回售条款，董事会继续研究其他变更项目。 蓝标回售交割：根据回售条款设计，一切顺利的情况下，持有人在2月底收到资金的概率较大（100.18元），目前绝对收益近3%。但是对于蓝标来说，5.36亿元刚变成永久补充流动资金，但是要偿还14亿转债？蓝标回售违约：转债价格大幅下跌，可能引发市场债性估值连锁反应，砸坑。不通过：好像对蓝标没什么坏处？ 还是看不到参与转债博弈的逻辑。 如果触发回售不可避免，而蓝标又没钱还债，那么可以通过拉股价/下修转股价等手段让转债交易价格高于回售价格，避免债权人选择回售。 2019-01-12 信托计划增持转债1月11日晚，蓝色光标公告一专项信托计划增持转债超20%。2018年12月18日，北京市盈润汇民基金管理中心联合中国民生银行，委托国通信托成立专项计划，在1月8日至11日期间，购买蓝标转债2800001张（&gt;2.8亿元），同时承诺本次不行使附加回售权。 最近几天，蓝标转债有非常明显的买盘，应该就是这个信托计划了。 第一反应是蓝标又在玩花样了。自己不行使回售权是一部分，作为20%的债权人在债权人大会上投反对票的话，对表决结果影响很大。网上分析称北京市盈润汇民基金管理中心属于北京市朝阳区国资委下属基金，同时入股了东方园林，应该属于北京市纾解基金。 2019-01-17 提议下修1月17日晚，蓝色光标董事会提议下修转股价，1月30日股东大会表决。 蓝标不打算回售还钱的意图非常明显了。现在看在100元以下参与的风险应该不大了，大股东把转债价格控制在100.18以上的可能性很大。蓝标目前的操作手法符合转债发行人传统，对于其他“垃圾”转债是个利好。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>策略</tag>
        <tag>个券研究</tag>
        <tag>蓝色光标</tag>
        <tag>蓝标转债</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019年计划]]></title>
    <url>%2F2018%2F12%2F31%2F2018-12-31-2019-plan.html</url>
    <content type="text"><![CDATA[日子过得真快，一年又过去了。2018虽没有什么值得一提的成绩，但感觉长了不少见识，以前的自己真的太天真了。 我的2018工作记得一年前进部门的时候，领导说在上海，没有束缚，一切从零开始，争取一炮而红。一年来，见到了各式各样的奇葩，在上海另起炉灶的决定是多么明智。但是，这哪是从零开始，分明是预先挖了个大坑啊！从坑底往上爬的时候还不停往下拽。这大概就是大国企的死海效应吧。只能感叹老领导对我们实在太好了。 投研学习今年的个人投资应该分两部分，上半年做的顺风顺水，一点小钱在Tesla，黄金，USDCNH上收获颇丰，交易频率比较低，半年差不多有120%。下半年学到了个亏钱的技能：港股股指期货。基本把上半年所有盈利全抹去了。总结下来主要原因在于交易纪律： 仓位太重。经常日内做着做着就满仓满杠杆了。稍有波动就会对账户有巨大影响。 心态及交易纪律。原计划3天、一周的持仓，常会因为日内的获利、T0失误而提早平仓/反向开仓。 年终最后一个交易日，个人小资金收益率12%。 研究方面，今年巨量转债发行使每天的日常跟踪工作量剧增，想要做细做精每只转债难度非常大。去年年底总结判断2018年会被砸出个大坑，现在看来应该已经实现一半了。但是，在转债的天量供给及有限需求下，以往的转债交易模式也出现了很大的变化。 来年20192019年，工作上一定得做出点业绩来了。不然明年年底总结上就该另谋出路去了。决不能成为大国企里的小白兔。 2019年，转债随股票进一步砸坑。但愿如周金涛所说，2019年会迎来80后的第一次赚钱机会。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>个人</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-12-28市场笔记]]></title>
    <url>%2F2018%2F12%2F28%2FDiary.html</url>
    <content type="text"><![CDATA[2018最后一周了。 万达信息再发转债万信转债2018年1月上市，8月完成强赎退市。21日公告公司新转债发行申请获审核通过。真是转债成功的范例。 1200亿银行转债核准发行27日盘后，中信400亿、交行600亿、江苏200亿的转债获证监会核准发行。 转债募集资金可回购股份]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-12-21市场笔记]]></title>
    <url>%2F2018%2F12%2F21%2FDiary.html</url>
    <content type="text"><![CDATA[债券还能涨多久？ 30年国债期货12月12日，中金所公告启动30年期国债期货TL仿真交易测试。TS合约上市至今成交清淡，但TL合约久期非常高，波动会很大，未来可能会是博弈方向的好品种。同时有利于机构对冲超长期利率债，如果配合保险、银行入市，则将有利于超长利率债的供给增加，有利于扩大财政赤字，加大财政投放。 期债大幅调整12月17日，央行重启暂停了36个工作日的OMO操作，投放7天期1600亿元。 下午2点半左右，彭博消息称19年地方债额度提前至1月。债市利率开始大幅上升，180210上涨8BP。 一天4家银行再融资审核通过12月17日周一收盘，4家银行公告定增或转债申请审核通过。 兴业银行：非公开发行优先股募资不超300亿申请获审核通过 平安银行：发行不超260亿元可转债申请获审核通过 中信银行：可转债发行申请获审核通过 华夏银行：定增申请获审核通过 央行创设TMLF12月19日晚，央行发布公告称，为加大对小微企业、民营企业的金融支持力度，决定创设定向中期借贷便利（Targeted Medium-term Lending Facility，TMLF），根据金融机构对小微企业、民营企业贷款增长情况，向其提供长期稳定资金来源。支持实体经济力度大、符合宏观审慎要求的大型商业银行、股份制商业银行和大型城市商业银行，可向中国人民银行提出申请。定向中期借贷便利资金可使用三年，操作利率比中期借贷便利（MLF）利率优惠15个基点，目前为3.15%。同时，根据中小金融机构使用再贷款和再贴现支持小微企业、民营企业的情况，决定再增加再贷款和再贴现额度1000亿元。 央行公告时间比较特别，当晚有美联储议息会议公告（加息25BP+鸽派评论），与全球多个市场“同步”加息的路径反向操作。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-11-23市场笔记]]></title>
    <url>%2F2018%2F11%2F23%2FDiary.html</url>
    <content type="text"><![CDATA[电气提议下修降息？11月19日，华泰李超宏观电话会议里，判断19年三季度下调政策利率。 11月20日看到国君宏观的华长春喊出非对称降息（降贷款，不降存款），预计在一季度下半旬到二季度上半旬。 上周社融数据后，中信明明提出降息概率较大。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-11-16市场笔记]]></title>
    <url>%2F2018%2F11%2F16%2FDiary.html</url>
    <content type="text"><![CDATA[10月金融数据大幅低于预期 10月金融数据11-13晚，央行公布10月中国金融数据：（华尔街见闻）10月新增人民币贷款6970亿，预期9045亿，前值13800亿；10月社会融资规模增量7288亿，预期13000亿，前值22054亿；10月M2货币供应同比8%，预期8.4%，前值8.3%。 10月份的数据因为国庆等因素，往年普遍都会较其他月份低不少。市场对经济下行的预期是比较一致的，但在近期不断喊话的背景下，应该很多人都没想到数据会是这个样子吧。 14早，中信明明发文，降息可期。 利欧下修到底11月13日，利欧召开股东大会审议下修议案。盘中转债价格不断抬升，根据走势来看应该是下修到底的消息提前被得知。根据转债下修规则，转债下修到底价格为1.72元/股（前一日均价),显著低于13日的日内价格。预计下修后转债价格将回到100元以上。 收盘后，利欧公告下修议案通过，转股价下修到底1.72元/股。 14日，转债高开在100.5元，折价超过5%，开启转股之路。当日未转股余额从21.97亿降至17.66亿，转股4.3亿。15日，转股1.57亿。 利率大幅下行受到金融数据及超长债火爆一级带动，利率债二级市场情绪火热，180210收益率下降19BP。 偏债型转债普涨11月14日，受隔夜金融数据大幅不及预期影响，债券收益率大幅下行，偏债型转债跟涨。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-11-09市场笔记]]></title>
    <url>%2F2018%2F11%2F09%2FDiary.html</url>
    <content type="text"><![CDATA[转债发行重启，本周有4只转债申购，为保转债顺利发行，申购方式也出现了更多花样。 定向可转债11月1日，证监会发文：”… …上市公司在并购重组中定向发行可转换债券作为支付工具，有利于增加并购交易谈判弹性，为交易提供更为灵活的利益博弈机制，有利于有效缓解上市公司现金压力及大股东股权稀释风险，丰富并购重组融资渠道。… …“ 11月2日，《苏州赛腾精密电子股份有限公司拟定向发行可转债及股份购买资产并配套融资》 出处定向可转债的唯一出处在《上市公司重大资产重组管理办法》第50条，“上市公司可以向特定对象发行可转换为股票的公司债券、定向权证用于购买资产或者与其他公司合并”。 价值定向可转债是发行股份购买资产的另一种选择。定增（发行股票）通过打折的方式给予持有人安全垫，但以往一般都会有类似兜底等对赌协议同时存在。17年监管趋严后，定增项目很难操作。如果上市公司向被收购方发行定向转债，被收购方有权选择在转股期内转股或者干脆拿回现金，且转债本身条款可调整余地较大，可以看作更阳光、灵活的定增。 参与根据中金的观点，定向转债作为支付工具，发行对象是被收购、合并的公司，而不是向其他机构投资者募资后，再现金收购资产。所以对一般投资者来说，操作可能性很小，不会有什么影响。 第一单：赛腾股份11月8日（周四晚），《苏州赛腾精密电子股份有限公司发行可转换债券、股份及支付现金购买资产并募集配套资金预案》 赛腾股份拟通过发行可转换债券、股份及支付现金的方式购买张玺、陈雪兴、邵聪持有的菱欧科技100%的股权。交易各方初步商定标的资产的交易金额为2.1亿元。其中以发行可转换债券的方式支付交易对价的60%（12600万元）；以发行股份的方式支付交易对价的10%（2100万元）；以现金方式支付交易对价的30%（6300万元）。同时，赛腾股份拟通过询价方式向其他不超过10名特定投资者发行股份募集配套资金，募集配套资金总额不超过14000万元。 核心条款 发行规模： 本次拟发行定向可转债1.26亿元，不超过公司最近一期期末净资产的40%即2.83亿元。 初始转股价格 参照本次发行股份购买资产部分的定价标准，确定为19.30元/股（对应6528495股），即不低于定价基准日前60个交易日公司股票交易均价的90%（19.29元/股）。 转股股份来源 公司发行的股份或公司因回购股份形成的库存股。 存续期限 与交易对方业绩承诺期相关。本次定向可转换债券的存续期限自发行之日起，至标的公司最后一期《专项审核报告》及《减值测试报告》出具日与补偿实施完毕日孰晚后30个交易日止 锁定期 12个月内不转让或转股，12个月后，分3年根据业绩承诺分批解锁（30-30-40%） 票面利率 票面利率0.01%/年。 下修条款 在本次发行的可转换债券存续期间，当公司股票在任意连续30个交易日中至少有15个交易日的收盘价低于当期转股价格的90%时，公司董事会有权提出转股价格向下修正方案并提交公司股东大会审议表决，修正后的转股价格不得低于董事会决议公告日前20个交易日、60个交易日或者120个交易日交易均价的90%、最近一期经审计的每股净资产值和股票面值。方案须经出席会议的股东所持表决权的三分之二以上通过。 上修条款 在本次发行的可转换债券存续期间，当交易对方提交转股申请日前二十日赛腾股份股票交易均价不低于当期转股价格150%时，则当次转股时应按照当期转股价的130%进行转股，但当次转股价格最高不超过初始转股价格的130%。 强赎条款 在本次发行的可转换债券存续期间，如公司股票连续30个交易日的收盘价格不低于当期转股价格的130%时，上市公司董事会有权提出强制转股方案，并提交股东大会表决，该方案须经出席股东大会的股东所持表决权的三分之二以上通过方可实施，股东大会进行表决时，持有本次发行的可转换债券的股东应当回避。通过上述程序后， 上市公司有权行使强制转股权，将满足解锁条件的可转换债券按照当时有效的转股价格强制转化为赛腾股份普通股股票。 回售条款 当交易对方所持可转换债券满足解锁条件后，如公司股票连续30个交易日的收盘价格均低于当期转股价格的80%，则交易对方有权行使提前回售权，将满足解锁条件的可转换债券的全部或部分以面值加当期应计利息的金额回售给上市公司。 在各年度首次达到提前回售权行使条件时起，交易对方的提前回售权进入行权期，行权期长度为10个交易日（含达到提前回售权行使条件的当天），如交易对方在行权期内未行使提前回售权，则交易对方至下一考核期审计报告出具前不应再行使提前回售权。 行权期满后， 交易对方所持满足解锁条件的可转换债券中未回售的部分，自行权期满后第一日起，按照0.6%年利率计算利息。 条款设计比传统增发灵活，有利于交易各方。估计未来会有大量定向可转债的收购交易。 水晶下修到16块水晶光电现价10元左右，调整转股价到16元（原始22.9元）。 这么下调的意义在哪？ 东音提议下修东音股份董事会提议下修，11月20日开临时股东大会。 新转债发行本周4只转债发行，预计四季度发行速度将超过去年同期，都采取了网上+网下的打新模式。其中长久转债的到期利息补偿有15%，算是在利率方面的让步吧。但从历史来看，到期偿还本息的转债屈指可数，对新上市的转债定价影响很小。 周三晚公告，张家港行转债发行25亿，网下申购分为A类（基金、证券、信托、财务、保险、合格境外机构）和B类（子公司及其他类型机构）。根据实际申购情况，调整最终配售数量和比例：A&gt;B，A网上。这种发行方式是保荐机构的自我保护，毕竟A类投资者的弃购违约概率较低。但同时也会影响机构参与转债申购的积极性，尤其是资质评级较低的转债。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-11-02市场笔记]]></title>
    <url>%2F2018%2F11%2F02%2FDiary.html</url>
    <content type="text"><![CDATA[利欧建议下修10-29，周末公告董事会建议下修，印证了周五异动的原因。利欧股份过去20日均价1.68元左右。考虑到11月12日股东大会，到时候前20日均价估计在1.62-1.63元。除非股价继续大跌，否则转股价下修极限=max（前一日价格，1.62）利欧周五收盘83元，周一开盘86.5元。公司总股本55.59亿，总市值90.6亿元左右，日均成交额近6千万元。利欧转债的原转股价2.75元，总规模近22亿元。如果下修到底（按1.62计算），总转股数达13.56亿，稀释率超24%，转债价值回到100元。如果以87元买入的转债（相当于1.41元买的股票），预计会出现大量转股，股票抛压巨大。 政治局会议新华社：10-31日，中共中央政治局召开会议，会议指出，当前经济稳中有变，经济下行压力有所加大，部分企业经营困难较多，长期积累的风险隐患有所暴露。对此要高度重视，增强预见性，及时采取对策。 印花税由国务院定上周末，黄奇帆曾公开放过风，提出可以取消印花税。11月1日上午，财政部公告，证券印花税不变，但调整的权限交给了国务院。传言算是落地了一半，印花税还收着，但给了股市想象的空间。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-10-26市场笔记]]></title>
    <url>%2F2018%2F10%2F26%2FDiary.html</url>
    <content type="text"><![CDATA[城商行涨停10月24日盘中，银行股大涨，有趣的是发行了转债的4个城商行都触及涨停。常熟转债最高到118元左右，溢价0.5%，在股票涨停后转债并没有出现追涨现象，可以日中可以做个回转。无锡银行收盘涨6.76%，转债收盘反而下跌0.08%(97.4)，转股溢价率18.01%。转债价格已经隐含了下修期权价值，或者说隐含波动率太高。 一汽获万亿授信10月24日晚，中国一汽公告拿到16家银行10150亿意向性授信。 在汽车销售增速放缓的前提下，车企要这么多钱干嘛呢？ 利欧转债大涨周五利欧转债在正股跌的情况下大涨，预计是要下修了。收盘前可买点博弈一下。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-10-19市场笔记]]></title>
    <url>%2F2018%2F10%2F19%2FDiary.html</url>
    <content type="text"><![CDATA[水晶光电提议下修10月16日盘后，水晶光电公告董事会提议下修，11月2日召开临时股东大会。 东方雨虹控股股东鼓励兜底增持10月17日，东方雨虹董事长倡议全体员工买入公司股票，持有12个月以上，亏损由其全额补偿。 新泉拟回购0.4-1亿元盛路通信股东减持计划占11.11%的股东计划减持不超过3%；占5.03%的股东计划减持不超过1.2%。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-10-15市场笔记]]></title>
    <url>%2F2018%2F10%2F15%2FDiary.html</url>
    <content type="text"><![CDATA[易纲行长周末讲话货币政策还有很大空间 光大固收四季度观点 控制回撤应为当前择券的首要考量，包括流动性、绝对价位、纯债溢价率等指标，重点关注弹性与流动性兼顾的中平价转债，如吴银、中油EB、宝武EB、中化EB、九州等； 在大股东减持兑现及规避回售压力的动机下，四季度下修博弈预计热度不减，难得的个券alpha机会建议关注； 对于转债波段操作机会不应错过，有反弹应尽早参与，但需降低预期收益率，避免成为最后买单者，如安井、航电、艾华、常熟等； 板块及行业选择，低估值蓝筹股、计算机、军工、医药等逆周期品种。 利欧放弃购买公众号公司利欧在10月12日公告决定终止对苏州梦嘉的收购：“鉴于近期证券市场的巨大变动。协议各方对标的公司估值存在较大差异。”利欧在回复9月17日浙江证监局厨具问询函：苏州梦嘉股东张地雨与万圣伟业的关系。张地雨（90后）2014年7-11月期间担任万圣伟业的法定代表人，期间在运营岗位任职。张地雨和万圣伟业的前实际控制人张晓燕丈夫徐先明系表兄弟关系。2015年利欧完成对万圣伟业的收购。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-09-29市场笔记]]></title>
    <url>%2F2018%2F09%2F29%2FDiary.html</url>
    <content type="text"><![CDATA[盛路收购5.85亿收购成都创新达。次日开盘股票最高近7%，但转债涨幅明显小于正股，收盘仅小幅上涨。 国祯下修通过股东大会下修议案通过。 利欧回复交易所就20亿收购公众号公司回复交易所问询函。集思路上有篇分析公众号的内容，4千+的公众号基本可以说是垃圾。 辉丰复产宁行转股宁行转债又被转股5亿元。 8月底《中国银保监关于废止和修改部分规章的决定》删除了“关于单个境外金融机构及其关联方作为发起人或战略投资者向单个中资商业银行、农村商业银行以及作为战略投资者向单个金融资产管理公司的投资入股比例不得超过20%、多个境外金融自购及其关联方投资上述机构入股比例合计不得超过25%”的规定。 而宁波银行的前十大股东里，之前按照上限持有的华侨银行有可能增加持股比例。而大股东为了保持其份额而选择转股就是比较合理的行为了。 2018三季报（2018-11-08更新）]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-09-14市场笔记]]></title>
    <url>%2F2018%2F09%2F14%2FDiary.html</url>
    <content type="text"><![CDATA[宁行大股东溢价转股09-07的行情数据显示宁波转债余额减少了20亿。转股数量19999080，与大股东持有的转债数量一致。宁行转债9月5-7日的价格在111元左右，转股价值90元附近。大股东当初顶格配售的转债（100元成本），溢价10%转股，持股比例提高近2%。转债转股提高了宁波银行的核心资本充足率，有助于改善财务报表，对上市公司而言属于利好？ 利欧23亿买自媒体运营商9月11日晚，利欧股份公告称拟以现金23.4亿元收购自媒体公司苏州梦嘉传媒有限公司75%股权。标的公司的整体估值预计为其2018年承诺净利润的12倍，即整体预估值为31.20亿元。要求其3年必须完成税后净利润累计10.7亿元，其中2018年完成2.6亿元（相当于平均每天最少净赚71万元）。 12日当天，利欧股份股价涨停，收于2.01元。 9月12日晚，深交所下发关注函，要求利欧股份披露苏州梦嘉所拥有的公众号、生产方式、编辑数量和客户等情况。 9月14日利欧股份跌2.54%，报1.92元/股。 假设公众号们能活3年~假设公众号们能每天赚70+万~公司也才收回了10亿元净利润~想到蓝标大股东要拿1亿元赔偿公司~呵呵 再对比上面那倒贴转股的宁波银行，还是国企好哈！ 蓝标下修股东大会议案通过，下修到底。大股东计划拿1亿元现金补偿公司。 星源回售60张]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-09-07市场笔记]]></title>
    <url>%2F2018%2F09%2F07%2FDiary.html</url>
    <content type="text"><![CDATA[星源回售08-29，星源材质发布回售公告，原因是改变募集资金用途。星源转债价格111-115元左右，回售价格100元++利息，预计不会有持有人回售。同日，公司公告实控人二级市场增持公司股份316560股（0.1649%） 格力回售结果格力回售结果公告，申报的回售面值5.5亿元（发行9.8亿），占60%，还剩4亿多。格力转债每个计息年度回售一次，11月25日派息后如果满足条件，将再次触发回售。 新泉、小康下修到底09-05，小康、新泉开股东大会，通过下修议案，分别将转股价下修到底。 兄弟建议下修09-05，兄弟科技公告董事会建议转债下修，转债目前转股溢价率近100%。同日，公告一年内回购公司股份，价格不超过10元/股，1000万股（1亿元），须股东大会批准。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-27市场笔记]]></title>
    <url>%2F2018%2F08%2F27%2FDiary.html</url>
    <content type="text"><![CDATA[市场A股全天大涨，周五晚间央行重启人民币汇率“逆周期因子”，人民币汇率大幅反弹，A50期货随即大涨。 利率债收益率震荡上行。 江银转债股东大会，下修到底至5.67元（20日5.656，前一日5.663，净资产5.18）参加股东大会的总共43人参加投票，其中网络投票仅12人。而就转债议案的投票人数还要少50%。下修后，转债理论上将与正股同步涨跌，维持低溢价。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-23市场笔记]]></title>
    <url>%2F2018%2F08%2F23%2FDiary.html</url>
    <content type="text"><![CDATA[市场A股开盘上涨，主板缓慢下跌，创业板10点前保持涨势，10点后全线下跌。13:20左右开始拉升。全天成交量依旧低迷。 利率债因隔夜利率下行，上午高开后维持震荡，中午左右开始利率抬升，可能由于中美贸易战的160亿落地的利多出尽、以及股票下午的拉升。尾盘现券收益率大幅下行，传言央行将进行MLF。 T收盘以后现券走势奇特： 205开盘4.25，上午维持4.245-4.255之间；午后最高4.26，收盘4.225。 常熟银行23日盘后公告，下修议案通过，下调到底5.76元（20日均价5.76，前一日5.61，净资产4.71）预计明天开盘会小幅上涨，溢价应该将会是银行转债中最低的之一了（还有吴银）。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-21市场笔记]]></title>
    <url>%2F2018%2F08%2F21%2FDiary.html</url>
    <content type="text"><![CDATA[市场A股开盘分化，蓝筹领涨，创业板未跟；10点后创业板发力，全天各指数上涨近2%。 利率债先跌后涨，205最高到4.3，收盘4.285 蓝标21日收盘后公告称董事会提议下修，当日收盘价89.149元。从最近的下修公告来看，预计明日开盘涨幅有限。不过蓝标转债本身争议较大，又临近回售，值得研究。2018-09-07开股东大会 盛路随正股反弹，转债重回100+，但折价依然很高，短期是否会有申购的套牢盘退出？]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-20市场笔记]]></title>
    <url>%2F2018%2F08%2F20%2FDiary.html</url>
    <content type="text"><![CDATA[市场A股开盘上涨，新闻消息称证监会请卖方策略/宏观研究员开会；随后照惯例下跌，下午2点开始反弹。收盘后有消息称“国家队”买入操作 利率债震荡，205最高到4.3 桐昆EB周末公告，大股东放弃行使赎回权。桐昆EB还有5.3亿元（53%左右）未转股EB的转股股份为大股东质押的股份，达到赎回条件后： 大股东在期初已经收到100元/张的现金流，EB转股可以实现“大股东减持”。 短时间大量转股，股票流通盘增大，压制股价。 不行使赎回权，EB转股压力小，对大股东没有坏处； 桐昆转债已过会，缓慢转股利于股价；大股东质押股票有配售权。 横河20日新上市，全天价格90-91元附近，溢价率3.5%，ytm4.4%。 盛路盛路转债上涨至98.4，但折价继续拉大至5%。 小康/新泉董事会提议下修小康大股东6月底已大宗减持转债，09-05投票通过应该不是问题。 感想最近的新转债上市价格溢价极低： 供给量大增，机构配置需求跟不上 机构普遍认为股市还要继续跌，没有配置价值打新上市先亏10%的情况下，打新策略不值得参与，预计后续转债发行需要调整发行条款，否则券商报销会出现较大亏损。 整体来看，全市场低于90的转债并不多，且多数溢价率非常高，或有信用风险考量。90多的新转债下行空间很小，但上行delta很大，跟涨不跟跌的概率很高。可以上市初期分批买入，分散只数，再通过IC对冲。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-15市场笔记]]></title>
    <url>%2F2018%2F08%2F15%2FDiary.html</url>
    <content type="text"><![CDATA[市场央行超额续作MLF，到期，开展 A股大幅下跌，毫无反弹。 利率债收益率再次上行，昨晚财政部发文，预期短期内地方债供给将增加，会影响利率债总供给。 格力今年第二支因价格而触发回售的转债，今天收盘价格102.85回售期：2018-08-23至2018-08-29资金发放日：2018-09-03回收价格：103元/张（含当期利息） 万信万信转债因余额小于3000万，今天起停牌，8月20日将强赎退市。（停牌可继续转股，不能交易）万信是今年第二支强赎的转债，下一个预计可能会是康泰、17桐昆EB。 盛路盛路转债上市第二日，转债价格继续下跌，最低95.632元。折价维持在2%左右，到期收益率近3.4%。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-14市场笔记]]></title>
    <url>%2F2018%2F08%2F14%2FDiary.html</url>
    <content type="text"><![CDATA[数据今天公布的工业增加值及固定投资等数据，普遍不及预期。 市场A股震荡下跌，10点后短暂翻红，继续下跌，14点开始反弹。 利率债收益率大幅下行，市场开始担忧通胀预期：205开盘4.225，最低4.17，最高4.24，收盘4.1775 新上市破发今天有3只转债上市，博世、盛路、德尔，全天价格均在96-98元，基本与转股平价相同，盛路折价2.3%。转债投资人认为市场未来将继续下跌？ 提醒| 日期 | 事件 | 转债代码 | 股票名称 | 股票代码 | 转股价 | 今日股价 | 转股价值 |]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-13市场笔记]]></title>
    <url>%2F2018%2F08%2F13%2FDiary.html</url>
    <content type="text"><![CDATA[数据央行公布7月金融统计数据，7月新增社融1.04万亿元，同比少增约1200亿元；M2增速回升到8.5%；7月金融机构贷款增加1.45万亿，同比多增约6000亿。 市场A股低开低走，午后指数反弹，创业板连续3天上涨。但是交易量仍然很低。 利率债上午大幅下跌，中午T跌幅近-0.4%： 威帝转债今天威帝转债上市，交易价格在99-100，盘中出现转股折价，创上市折溢价率历史新低。 辉丰辉丰股份被ST，需要考虑退市风险对转债的影响 艾华转股价由27.53调至21.73，转债大涨4.86%。股东配售70%，且没有减持公告，下修后应该会有抛压。如果不放量，可能有促转股意愿。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-08-09市场笔记]]></title>
    <url>%2F2018%2F08%2F09%2FDiary.html</url>
    <content type="text"><![CDATA[市场A股低开，日内大幅反弹，上午走势强劲。 利率债整体下行，市场开始担忧通胀预期：205开盘4.17，最低4.1575，最高4.2250，收盘4.2050 T1809最大跌幅-0.37%，收盘-0.27% 海印下修议案通过，从5.25元调至3.5元，收盘价2.72元。未下修到底，与市场预期基本一致，海印转债今天92元左右。 提醒明天08-10有艾华和三力转债的下修会议，市场价格反应的预期并不高。 | 日期 | 事件 | 转债代码 | 股票名称 | 股票代码 | 转股价 | 今日股价 | 转股价值 || 2018-08-10 | 下修会议 | | 艾华 | | | | || 2018-08-10 | 下修会议 | | 三力士 | | | | || 2018-08-13 | 转债申购 | | 蓝盾股份 | | | | || 2018-08-13 | 转债上市 | | 威帝股份 | | | | || 2018-08-14 | 转债申购 | | 岭南转债 | | | | | 心得最近经常满仓做港股期货，杠杆高，满仓波动非常大。止盈容易，做错方向必须及时止损。]]></content>
      <categories>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>Market</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018年计划]]></title>
    <url>%2F2017%2F12%2F31%2F2017-12-31-2018-plan.html</url>
    <content type="text"><![CDATA[2017年就这么结束了2018，加油 2017工作非常感谢老领导，如此信任我们。新部门，新环境，一切都在从无到有。 研究宏观方面看的更多了，但也更懵了。离融会贯通、体系框架还远得很。开发方面，今年基本都在用python，但进度缓慢；转债数据库还有很多需要完善的。 投资年初买白酒；8月买腾讯；12月买黄金事后看都选对了，但还是太嫩、太不坚定，都在大涨之前有小赚就走了。。。一年收益才13% 2018转债市场在巨量供给压力下，我预感18年会砸出一个大坑。争取尽早开发出属于自己的产品。 现在还对资产配置比较感兴趣，但涉及的知识量非常大，只能靠一点点积累了。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>个人</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记：操作系统目录和文件]]></title>
    <url>%2F2017%2F12%2F27%2FPython_os.html</url>
    <content type="text"><![CDATA[Python操作系统目录和文件的笔记 os模块Python的os模块封装了操作系统的目录和文件操作。这些函数有的在os模块中，有的在os.path模块中。 目录操作12345678910111213141516# -*- coding: utf-8 -*-import osprint(os.name)#输出操作系统类型，如果是posix，说明系统是Linux、Unix或Mac OS X，如果是nt，就是Windows。print(os.environ)#输出操作系统中定义的全部环境变量print(os.environ.get('PATH'))#要获取某个环境变量的值，可以调用os.environ.get('key')print(os.path.abspath('.'))#查看当前目录的绝对路径 在某个目录下创建一个新目录 123#把新目录的完整路径表示出来os.path.join('H:/', 'testdir')#在H盘创建了一个testdir文件夹。 把两个路径合成一个时，不要直接拼字符串，而要通过os.path.join()函数，这样可以正确处理不同操作系统的路径分隔符。 12#创建一个目录os.mkdir('H:/testdir') 拆分路径时，也不要直接去拆字符串，而要通过os.path.split()函数，这样可以把一个路径拆分为两部分，后一部分总是最后级别的目录或文件名。 12345678910print(os.path.split('H:/name.txt'))#输出('H:','name.txt')os.path.splitext()可以直接得到文件扩展名：```pythonprint(os.path.splitext('H:/name.py'))#输出('H:/name','.py') 注：这些合并、拆分路径的函数并不要求目录和文件要真实存在，它们只对字符串进行操作。 利用Python的特性来过滤文件： os.listdir()：返回指定的文件夹包含的文件或文件夹的名字的列表。os.path.isdir()：判断某一路径是否为目录 。os.path.isfile()：判断某一路径是否为文件 1234567891011#列出当前目录下的所有目录（即文件夹）file1=[x for x in os.listdir('.') if os.path.isdir(x)]print(file1)#列出当前目录下所有的.py文件file2=[x for x in os.listdir('.') if os.path.isfile(x) and os.path.splitext(x)[1]=='.py']print(file2)#输出['a.py', 'b.py', 'c.py'] 文件操作1，创建文件方法： 12f=open("D://111.cc",mode="w",encoding="UTF-8") f.close() 2，删除一个文件 12os.remove("D://222.ccc123") os.close() 3,创建一个目录或多个目录 12os.mkdir("E://bb") os.makedirs("D:\\a\\b") 4，删除依旧用remove方法或多级删除 12os.removedirs(path) os.remove() 5,拷贝，重命名，查看文件大小，打开文件 1234567import os import shutil #第一个参数是源文件，第二个拷贝文件 shutil.copyfile("D://111.CC","D://222.ccc") os.rename("D://222.ccc","D://222.ccc123") os.stat("D://abc.txt").st_size os.startfile("D://abc.txt") 6,查看某个目录下文件数量： 12345678def countDirs(dp): tt=tuple(os.walk(dp)) print("文件夹"+dp+"的信息:") print("文件夹的个数: ",len(tt[0][1]),"文件的个数: ",len(tt[0][2])) d1="D:\\tomcat7\\bin" countDirs(d1) 结果如下：文件夹D:\tomcat7\bin的信息:文件夹的个数: 0 文件的个数: 28Process finished with exit code 0 7，递归打印文件夹的方法： 12345def showAllDirs(dp): tt=os.walk(dp); for l in tt: for lf in l[1]: print("目录的路径是：",l[0]+"\\"+lf) 递归打印文件的方法： 12345def showAllDirsFiles(dirPath): tt=os.walk(dirPath); for l in tt: for ll in l[2]: print("文件的路径是：",l[0]+"\\"+ll) 8，读取文件的方法： 123456def readFile(): f=open(r"D:///bbb.txt",encoding="UTF-8") for line in f: #去除多余的换行符 print(line.strip()) f.close(); 批量载入读取： 1234567891011def readFile1(): f=open(r"D:///bbb.txt",encoding="UTF-8") while 1: #print("j") lines=f.readlines(10000); if not lines: #print("end") break; for line in lines: print(line.strip()) f.close() 写入文件例子： 12345678910111213def writeFile(): a=list(); a.append("a你好") a.append("b哈喽") a.append("c") #a追加模式w覆盖模式 f=open("D://pp.txt",mode='a',encoding="UTF-8") print("文件大小：",f) for c in a: f.write(c+"\n") f.close() print("写入成功!")]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>os</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[量化学习笔记]]></title>
    <url>%2F2017%2F12%2F01%2FQuant_notes.html</url>
    <content type="text"><![CDATA[量化只是手段，投资想法才是灵魂 相关书籍 Quantitative Equity Portfolio Management（QEPM）， Ludwig Chincarini Active Portfolio Management（APM）， Grinold &amp; Kahn Quantitative Equity Portfolio Management（QEPM）， Qian &amp; Hua &amp; Sorensen]]></content>
      <categories>
        <category>Quant</category>
      </categories>
      <tags>
        <tag>Quant</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记：Pandas的引用和复制]]></title>
    <url>%2F2017%2F12%2F01%2FPandas_reference_copy.html</url>
    <content type="text"><![CDATA[在python里有4种数据复制的方法比较容易搞混：’=’、切片、’copy()’、’deepcopy()’以下记录了自己写代码时碰到的坑。 列表‘=’ 赋址12345678910111213a = [1,2,3,[4,5]]b = aprint('Address of a: %s' % id(a))print('Address of b: %s' % id(b))a[0] = 111print(a)print(b)b[1] = 222print(a)print(b) 输出的结果为： 123456Address of a: 84485512Address of b: 84485512[111, 2, 3, [4, 5]][111, 2, 3, [4, 5]][111, 222, 3, [4, 5]][111, 222, 3, [4, 5]] 网上笔记在C/C++中，复制分为深复制和浅复制。它们的区别就在于复制对象的差别，浅复制只是实现对指针的拷贝，最后两个指针指向内存空间的同一个地址；深复制则不仅仅实现对指针的拷贝，还实现了对指针所指内容的拷贝，就是说，最后两个指针指向了内容空间的不同地址。由此看来，浅复制是不太可靠的，因为在实施浅复制后，如果一个指针改变了指向内容，那么其他指针指向的内容也会随之改变，他们本来就指向的同一个内容。 同样的，Python中也存在深复制与浅复制。 对于字符串，由于字符串是不可变对象，调用对象自身的任意方法，也不会改变该对象自身的内容。所以用=可以实现复制，这里的复制本质上是对原来对象的引用。 String = “abcd”String1 = StringString2 = String.strip(‘a’)print String, String1, String2但是对于列表和字典，他们是可变对象，调用对象自身的任意方法，会改变该对象自身的内容。所以用=只能实现引用。 用自身list[:]或dict.copy()方法实现浅复制，但是注意的是，虽然这两种办法能实现对象的复制，但是一旦对象包含的元素是可变的嵌套结构，如列表中嵌套列表，就会导致对这些元素的操作是引用而不是复制。也就是说，当我们改变原来对象某一元素里的数据时，其实经过这两种办法复制过来的对象也是随之改变的。 解决这种办法，需要实现真正的深复制，也就是说对象及其其中的元素都是彻彻底底的开辟新的内存空间进行复制。可以通过copy.deepcopy(list)或copy.deepcopy(dict)方法实现。 下面贴一段代码，加深对list和dict深复制和浅复制的理解： 12345678910111213141516171819202122232425262728293031323334353637383940#coding: utf-8import copy## 列表list复制print "*"*100List = [0, [1, 2], 3]List1 = List # 引用List2 = List[:] # 浅复制，对象复制；但其中元素是引用List3 = copy.copy(List) # 浅复制，对象复制；但其中元素是引用List4 = copy.deepcopy(List) # 深复制，对象及其中元素都是复制print "*"*50print List, List1print List2, List3print List4print '*'*50List[0] = 100print List, List1print List2, List3print List4print '*'*50List[1][1] = 100print List, List1print List2, List3print List4## 字典dict复制print "*"*100Dict = &#123;'a':0, 'b':[1, 2], 'c':3, 'd':4&#125;Dict1 = Dict # 引用Dict2 = Dict.copy() # 浅复制，对象复制；但其中元素是引用Dict3 = copy.copy(Dict) # 浅复制，对象复制；但其中元素是引用Dict4 = copy.deepcopy(Dict) # 深复制，对象及其中元素都是复制print "*"*50print Dict, Dict1print Dict2, Dict3print Dict4print "*"*50Dict['a'] = 100print Dict, Dict1print Dict2, Dict3print Dict4print "*"*50 列表对象的copy()方法返回列表的浅复制。所谓浅复制，是指生产一个新的列表，并且把原列表中所有元素的引用都复制到新列表中。如果原列表中只包含整数、实数、复数等基本类型或元组、字符串这样的不可变类型，一般是没有问题的。但是，如果原列表中包含列表之类的可变数据类型，由于浅复制时只是把子列表的引用复制到新列表中，这样修改任何一个都会影响另外一个。例如： 12345678910111213141516171819202122x = [1, 2, [3, 4]] #原列表中包含子列表y = x.copy() #浅复制x#[1, 2, [3, 4]]&gt;&gt;&gt; y #两个列表中的内容看起来完全一样[1, 2, [3, 4]]&gt;&gt;&gt; y[2].append(5) #为新列表中的子列表追加元素&gt;&gt;&gt; y[1, 2, [3, 4, 5]]&gt;&gt;&gt; x #原列表中的子列表也被修改了[1, 2, [3, 4, 5]]&gt;&gt;&gt; x[0] = 6 #整数、实数等不可变类型不受此影响&gt;&gt;&gt; x[6, 2, [3, 4, 5]]&gt;&gt;&gt; y[1, 2, [3, 4, 5]]&gt;&gt;&gt; y.append(6) #在新列表尾部追加元素&gt;&gt;&gt; y[1, 2, [3, 4, 5], 6]&gt;&gt;&gt; x #原列表不受影响[6, 2, [3, 4, 5]] 列表对象的copy()方法和切片操作与标准库copy中的copy()函数一样都是返回浅复制，如果想避免上面代码演示的问题，可以使用标准库copy中的deepcopy()函数实现深复制。所谓深复制，是指对原列表中的元素进行递归，把所有的值都复制到新列表中，对嵌套的子列表不仅仅是复制引用。这样一来，新列表和原列表是互相独立，修改任何一个都不会影响另外一个。 123456789101112131415&gt;&gt;&gt; import copy&gt;&gt;&gt; x = [1, 2, [3, 4]]&gt;&gt;&gt; y = copy.deepcopy(x) #深复制&gt;&gt;&gt; y[1, 2, [3, 4]]&gt;&gt;&gt; x[2].append(5) #为原列表中的子列表追加元素&gt;&gt;&gt; x[1, 2, [3, 4, 5]]&gt;&gt;&gt; y #新列表中的子列表不受影响[1, 2, [3, 4]]&gt;&gt;&gt; y.append(6) #在新列表尾部追加元素&gt;&gt;&gt; y[1, 2, [3, 4], 6]&gt;&gt;&gt; x #原列表不受影响[1, 2, [3, 4, 5]] 不管是浅复制还是深复制，与列表对象的直接复制都是不一样的情况，这一点是必须注意的。下面的代码把同一个列表赋值给两个不同的变量，这两个变量是互相独立的，修改任何一个都不会影响另外一个。 12345678&gt;&gt;&gt; x = [1, 2, [3, 4]]&gt;&gt;&gt; y = [1, 2, [3, 4]] #把同一个列表对象赋值给两个变量&gt;&gt;&gt; x.append(5)&gt;&gt;&gt; x[2].append(6)&gt;&gt;&gt; x[1, 2, [3, 4, 6], 5]&gt;&gt;&gt; y[1, 2, [3, 4]] 下面的代码演示的是另外一种情况，把一个列表变量赋值给另外一个变量，这样的话两个变量指向同一个列表对象，对其中一个做的任何修改都会立刻在另外一个变量得到体现。 123456789&gt;&gt;&gt; x = [1, 2, [3, 4]]&gt;&gt;&gt; y = x #两个变量指向同一个列表&gt;&gt;&gt; x[2].append(5)&gt;&gt;&gt; x.append(6)&gt;&gt;&gt; x[0] = 7&gt;&gt;&gt; x[7, 2, [3, 4, 5], 6]&gt;&gt;&gt; y #对x做的任何修改，y都会得到影响[7, 2, [3, 4, 5], 6] 123df = pd.DataFrame([[1, 2], [3, 4]], columns=['max', 'min'])t = df.iloc[:, 0]t[0] = 4444]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Digital Ocean + SS无法访问Google Scholar的解决方法]]></title>
    <url>%2F2017%2F11%2F30%2FGoogle_scholar_error.html</url>
    <content type="text"><![CDATA[在使用ss访问google scholar时提示： We’re sorry… but your computer or network may be sending automated queries. To protect our users, we can’t process your request right now. 在网上搜到的解决办法。 我的VPS是Digital Ocean新加坡节点，网上说是因为ipv4网段被封了，通过修改hosts强制VPS使用ipv6访问就行了。 具体操作是： 打开hosts文件 1sudo vim /etc/hosts 找谷歌的可用ipv6，可参考Github ipv6-hosts，复制到/etc/hosts的底部。 123456## Scholar 学术搜索2404:6800:4008:c06::be scholar.google.com2404:6800:4008:c06::be scholar.google.com.hk2404:6800:4008:c06::be scholar.google.com.tw2401:3800:4001:10::101f scholar.google.cn #www.google.cn2404:6800:4008:c06::be scholar.google.com.sg 保存hosts后，重启ss就可以了。 12ssserver -c /etc/shadowsocks.json -d stopssserver -c /etc/shadowsocks.json -d start]]></content>
      <categories>
        <category>计算机相关</category>
      </categories>
      <tags>
        <tag>shadowsocks</tag>
        <tag>DigitalOcean</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python矩阵运算]]></title>
    <url>%2F2017%2F07%2F12%2FPython_matrix_cal.html</url>
    <content type="text"><![CDATA[python的numpy库可以提供矩阵运算的功能 使用numpy12from numpy import *;#导入numpy的库函数import numpy as np; #这个方式使用numpy的函数时，需要以np.开头。 创建矩阵由一维或二维数据创建矩阵 123456789101112&gt;&gt;&gt; from numpy import *&gt;&gt;&gt; a1=array([1,2,3])&gt;&gt;&gt; a1array([1, 2, 3])&gt;&gt;&gt; a1=mat(a1)&gt;&gt;&gt; a1matrix([[1, 2, 3]])&gt;&gt;&gt; shape(a1)(1, 3)&gt;&gt;&gt; b=matrix([1,2,3])&gt;&gt;&gt; shape(b)(1, 3) 常见的矩阵： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546 #创建一个3*3的零矩阵，矩阵这里zeros函数的参数是一个tuple类型(3,3)&gt;&gt;&gt;data1=mat(zeros((3,3)))&gt;&gt;&gt; data1matrix([[ 0., 0., 0.], [ 0., 0., 0.], [ 0., 0., 0.]])#创建一个2*4的1矩阵，默认是浮点型的数据，如果需要时int类型，可以使用dtype=int&gt;&gt;&gt;data2=mat(ones((2,4)))&gt;&gt;&gt; data2matrix([[ 1., 1., 1., 1.], [ 1., 1., 1., 1.]])#这里的random模块使用的是numpy中的random模块，random.rand(2,2)创建的是一个二维数组，需要将其转换成#matrix&gt;&gt;&gt;data3=mat(random.rand(2,2))&gt;&gt;&gt; data3matrix([[ 0.57341802, 0.51016034], [ 0.56438599, 0.70515605]])#生成一个3*3的0-10之间的随机整数矩阵，如果需要指定下界则可以多加一个参数&gt;&gt;&gt;data4=mat(random.randint(10,size=(3,3)))&gt;&gt;&gt; data4matrix([[9, 5, 6], [3, 0, 4], [6, 0, 7]])#产生一个2-8之间的随机整数矩阵&gt;&gt;&gt;data5=mat(random.randint(2,8,size=(2,5)))&gt;&gt;&gt; data5matrix([[5, 4, 6, 3, 7], [5, 3, 3, 4, 6]])#产生一个2*2的对角矩阵&gt;&gt;&gt;data6=mat(eye(2,2,dtype=int))&gt;&gt;&gt; data6matrix([[1, 0], [0, 1]])a1=[1,2,3]#生成一个对角线为1、2、3的对角矩阵a2=mat(diag(a1))&gt;&gt;&gt; a2matrix([[1, 0, 0], [0, 2, 0], [0, 0, 3]]) 常用矩阵运算1. 矩阵相乘需要注意的是，矩阵相乘得到的还是矩阵（可能是1*1） 12345&gt;&gt;&gt;a1=mat([1,2]); &gt;&gt;&gt;a2=mat([[1],[2]]);&gt;&gt;&gt;a3=a1*a2 #1*2的矩阵乘以2*1的矩阵，得到1*1的矩阵&gt;&gt;&gt; a3matrix([[5]]) 2. 矩阵点乘矩阵对应元素相乘 12345&gt;&gt;&gt;a1=mat([1,1]);&gt;&gt;&gt;a2=mat([2,2]);&gt;&gt;&gt;a3=multiply(a1,a2)&gt;&gt;&gt; a3matrix([[2, 2]]) 矩阵点乘 1234&gt;&gt;&gt;a1=mat([2,2]);&gt;&gt;&gt;a2=a1*2&gt;&gt;&gt;a2matrix([[4, 4]]) 3.矩阵求逆，转置矩阵求逆 12345678&gt;&gt;&gt;a1=mat(eye(2,2)*0.5)&gt;&gt;&gt; a1matrix([[ 0.5, 0. ], [ 0. , 0.5]])&gt;&gt;&gt;a2=a1.I #求矩阵matrix([[0.5,0],[0,0.5]])的逆矩阵&gt;&gt;&gt; a2matrix([[ 2., 0.], [ 0., 2.]]) 矩阵转置 12345678&gt;&gt;&gt; a1=mat([[1,1],[0,0]])&gt;&gt;&gt; a1matrix([[1, 1], [0, 0]])&gt;&gt;&gt; a2=a1.T&gt;&gt;&gt; a2matrix([[1, 0], [1, 0]]) 4.计算矩阵对应行列的最大、最小值、和。123453&gt;&gt;&gt;a1=mat([[1,1],[2,3],[4,2]])&gt;&gt;&gt; a1matrix([[1, 1], [2, 3], [4, 2]]) 计算每一列、行的和 12345678910111213141516#列和，这里得到的是1*2的矩阵&gt;&gt;&gt;a2=a1.sum(axis=0)&gt;&gt;&gt; a2matrix([[7, 6]])#行和，这里得到的是3*1的矩阵&gt;&gt;&gt;a3=a1.sum(axis=1)&gt;&gt;&gt; a3matrix([[2], [5], [6]]) #计算第一行所有列的和，这里得到的是一个数值&gt;&gt;&gt;a4=sum(a1[1,:])&gt;&gt;&gt; a45 #第0行：1+1；第2行：2+3；第3行：4+2 计算最大、最小值和索引 123456789101112131415161718192021222324252627282930#计算a1矩阵中所有元素的最大值,这里得到的结果是一个数值&gt;&gt;&gt;a1.max() 4#计算第二列的最大值，这里得到的是一个1*1的矩阵&gt;&gt;&gt;a2=max(a1[:,1])&gt;&gt;&gt; a2matrix([[3]])#计算第二行的最大值，这里得到的是一个一个数值&gt;&gt;&gt;a1[1,:].max()3#计算所有列的最大值，这里使用的是numpy中的max函数&gt;&gt;&gt;np.max(a1,0)matrix([[4, 3]])#计算所有行的最大值，这里得到是一个矩阵&gt;&gt;&gt;np.max(a1,1)matrix([[1], [3], [4]])#计算所有列的最大值对应在该列中的索引&gt;&gt;&gt;np.argmax(a1,0)matrix([[2, 1]])#计算第二行中最大值对应在该行的索引&gt;&gt;&gt;np.argmax(a1[1,:])1 5.矩阵的分隔和合并矩阵的分隔，同列表和数组的分隔一致。 1234567891011&gt;&gt;&gt;a=mat(ones((3,3)))&gt;&gt;&gt; amatrix([[ 1., 1., 1.], [ 1., 1., 1.], [ 1., 1., 1.]])#分割出第二行以后的行和第二列以后的列的所有元素&gt;&gt;&gt;b=a[1:,1:]&gt;&gt;&gt; bmatrix([[ 1., 1.], [ 1., 1.]]) 矩阵的合并 123456789101112131415161718&gt;&gt;&gt;a=mat(ones((2,2)))&gt;&gt;&gt; amatrix([[ 1., 1.], [ 1., 1.]])&gt;&gt;&gt;b=mat(eye(2))&gt;&gt;&gt; bmatrix([[ 1., 0.], [ 0., 1.]])&gt;&gt;&gt;c=vstack((a,b)) #按列合并，即增加行数&gt;&gt;&gt; cmatrix([[ 1., 1.], [ 1., 1.], [ 1., 0.], [ 0., 1.]])&gt;&gt;&gt;d=hstack((a,b)) #按行合并，即行数不变，扩展列数&gt;&gt;&gt; dmatrix([[ 1., 1., 1., 0.], [ 1., 1., 0., 1.]]) 矩阵、列表、数组的转换列表可以修改，并且列表中元素可以使不同类型的数据，如下： l1=[[1],’hello’,3]; numpy中数组，同一个数组中所有元素必须为同一个类型，有几个常见的属性： 123456789101112131415161718&gt;&gt;&gt;a=array([[2],[1]])&gt;&gt;&gt; aarray([[2], [1]])&gt;&gt;&gt;dimension=a.ndim&gt;&gt;&gt; dimension2&gt;&gt;&gt;m,n=a.shape&gt;&gt;&gt; m2&gt;&gt;&gt; n1&gt;&gt;&gt;number=a.size #元素总个数&gt;&gt;&gt; number2&gt;&gt;&gt;str=a.dtype #元素的类型&gt;&gt;&gt; strdtype('int64') numpy中的矩阵也有与数组常见的几个属性。它们之间的转换： 1234567891011121314151617181920212223242526272829&gt;&gt;&gt;a1=[[1,2],[3,2],[5,2]] #列表&gt;&gt;&gt; a1[[1, 2], [3, 2], [5, 2]]&gt;&gt;&gt;a2=array(a1) #将列表转换成二维数组&gt;&gt;&gt; a2array([[1, 2], [3, 2], [5, 2]])&gt;&gt;&gt;a3=mat(a1) #将列表转化成矩阵&gt;&gt;&gt; a3matrix([[1, 2], [3, 2], [5, 2]])&gt;&gt;&gt;a4=array(a3) #将矩阵转换成数组&gt;&gt;&gt; a4array([[1, 2], [3, 2], [5, 2]])&gt;&gt;&gt;a41=a3.getA() #将矩阵转换成数组&gt;&gt;&gt;a41array([[1,2] [3,2] [5,2]])&gt;&gt;&gt;a5=a3.tolist() #将矩阵转换成列表&gt;&gt;&gt; a5[[1, 2], [3, 2], [5, 2]]&gt;&gt;&gt;a6=a2.tolist() #将数组转换成列表&gt;&gt;&gt; a6[[1, 2], [3, 2], [5, 2]] 这里可以发现三者之间的转换是非常简单的，这里需要注意的是，当列表是一维的时候，将它转换成数组和矩阵后，再通过tolist()转换成列表是不相同的，需要做一些小小的修改。如下： 12345678910111213141516171819&gt;&gt;&gt;a1=[1,2,3] #列表&gt;&gt;&gt;a2=array(a1)&gt;&gt;&gt; a2array([1, 2, 3])&gt;&gt;&gt;a3=mat(a1)&gt;&gt;&gt; a3matrix([[1, 2, 3]])&gt;&gt;&gt; a4=a2.tolist()&gt;&gt;&gt; a4[1, 2, 3]&gt;&gt;&gt; a5=a3.tolist()&gt;&gt;&gt; a5[[1, 2, 3]]&gt;&gt;&gt; a6=(a4==a5)&gt;&gt;&gt; a6False&gt;&gt;&gt; a7=(a4 is a5[0])&gt;&gt;&gt; a7True 矩阵转换成数值，存在以下一种情况： 1234&gt;&gt;&gt; dataMat=mat([1])&gt;&gt;&gt; val=dataMat[0,0] #这个时候获取的就是矩阵的元素的数值，而不再是矩阵的类型&gt;&gt;&gt; val1]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017年计划]]></title>
    <url>%2F2017%2F01%2F01%2F2017_plan.html</url>
    <content type="text"><![CDATA[2016过得好快，2017已经来了。 2016过去的2016年工作业务停滞，有了更多时间学习。每天的工作从盯盘转向研究。 一年下来看了不少研报，把常用的国内的宏观数据整理了一下，但依旧没有找到体系。 基本确定了我的发展方向，低风险的类固收研究。 20172017年，希望计划获批，工作上有所进展。 计划完成的项目： 可转债分析工具 分级基金的分析、套利 国债期货的监控 希望看的书：宏观经济、货币理论、资产配置 其实过去一年也在做这些事，但进展缓慢，总感觉缺少动力，日子一天天就这么过去了。今年计划按周记录一下进度，希望可以督促自己。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>个人</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github使用笔记]]></title>
    <url>%2F2016%2F11%2F24%2FGithub_notes.html</url>
    <content type="text"><![CDATA[版本控制系统对计算机开发、甚至日常电脑使用都有非常重要。Git可以说是世界上最先进的分布式版本控制系统。而Github可以看作一个远程仓库，为开源项目的保存、分享、协作开发提供了非常好的途径。 Git 教程廖雪峰的网站是一个非常易懂的教程。 Git参考手册包括了常用的命令的使用方法，方便使用过程中的快速查阅。 GithubFork如果你想参与一个开源项目，就可以用到fork功能。 操作流程： Fork他的仓库：这是GitHub操作，这个操作会复制他的仓库（包括文件，提交历史，issues，和其余一些东西）。复制后的仓库在你自己的GitHub帐号下。目前，你本地计算机对这个仓库没有任何操作。 Clone你的仓库：这是Git操作，现在这个仓库就会存储在你本地计算机上。 更新某些文件：现在，你可以在任何程序或者环境下更新仓库里的文件。 提交你的更改：这是Git操作。此操作只在你的本地计算机上完成。 将你的更改push到你的GitHub仓库。 给原项目发送一个pull request：如果你认为他会接受你的修改，你就可以给他发送一个pull request。这是GitHub操作，当然，接不接受完全取决于他自己。 如果他接受了你的pull request，他将把那些修改拉到自己的仓库。 当别人的项目出现变动（更新）时，可以如下操作： 从他的仓库中fetch：这是Git操作，把更新下载到本地分支中。 将这些修改合并到你自己的仓库（merge）：这是Git操作，使用该命令使得那些修改更新到你的本地计算机（那些修改暂时存放在一个”分支”中）。步骤1和2经常结合为一个命令使用，合并后的Git命令叫做”pull”。 将那些修改更新推送到你的GitHub仓库（可选）：记住，你本地计算机不会自动更新你的GitHub仓库。可以在步骤2完成后立即执行push，也可以等到你做了自己的一些修改，并已经本地提交后再执行推送操作。]]></content>
      <categories>
        <category>计算机相关</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[债市收益率影响因素：资金利率与短期流动性]]></title>
    <url>%2F2016%2F11%2F02%2FShort_term_liquidity.html</url>
    <content type="text"><![CDATA[从长期来看，债券市场收益率主要受经济基本面及预期影响。但是，宏观基本面在短期不会有太大变化，短期市场资金利率对于债券市场收益率的走势会有很大影响。而市场资金面主要由央行的货币政策所决定。目前市场上的资金利率主要可以分为两类，一类是货币市场利率，能够较快反映市场资金状况；另一类则是由央行控制的货币政策工具利率，如公开市场操作，SLO，MLF等。 货币市场利率质押式回购利率质押式回购是指交易双方以债券为权利质押所进行的短期资金融通业务。资金融入方（正回购方）将债券出质给资金融出方（逆回购方），融入资金，双方约定在将来某一日期由正回购方向逆回购方返还本金和按约定回购利率计算的利息，逆回购方向正回购方返还原出质债券。 按照交易场所的区别，可以分为银行间质押式回购和交易所质押式回购。 银行间：按期限分有隔夜、7天、14天、21天、1个月、2个月、3个月、4个月、6个月、9个月和1年期，共11个品种。 上交所：隔夜、2天、3天、4天、7天、14天、28天、91天和182天，共9个品种。 两个市场的质押回购交易主要集中于短期品种（隔夜和7天期），隔夜回购的成交量占比还在逐渐上升。从市场来看，银行间回购规模占主导（75%），而交易所的成交规模在逐渐增加（25%）。从参与者来看，银行间市场的资金融出方主要是商业银行，而交易所的参与者多为一般法人和自然人。 由于参与者区别较大，交易所回购利率隔夜波动明显大于银行间回购利率；但总体趋势有着较强的正相关性，较长期限利率如7天期走势则更为接近。 SHIBOR利率上海银行间同业拆放利率SHIBOR是由信用等级较高的银行组成报价团自主报出的人民币同业拆出利率计算确定的算数平均利率。SHIBOR是单利、无担保、批发性的利率。目前市场公布的品种有隔夜、7天、14天、1个月、3个月、6个月、9个月和1年，共8个品种。其中最重要的是SHIBOR 3M。 SHIBOR的推出主要是为金融产品定价提供基准，推进利率市场化。目前以SHIBOR为基准定价的产品包括浮息债、利率互换、远期利率协议等。 短期SHIBOR利率（隔夜、7天）与银行间回购利率（R001、R007）高度一致。3个月的较长期限品种上SHIBOR波动明显小于银行间回购利率，并存在一定滞后性。 同业存单发行利率2013年12月8日同业存单开始正式发行，期限包括1个月、3个月、6个月、9个月、1年、2年和3年，共7个品种。其中以3个月和6个月为主。 同业存单相比同业存款更透明，更标准化。同时同业存单具有流动性，还可作为质押回购标的物，发行利率比同业存款低。其发行规模不断上升。 央行政策工具利率基准利率准备金率公开市场操作新型货币政策工具短期流动性调节工具 SLO常备借贷便利 SLF中期借贷便利 MLF抵押补充贷款 PSL]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[央行资产负债表]]></title>
    <url>%2F2016%2F10%2F28%2FPBOC_balance_sheet.html</url>
    <content type="text"><![CDATA[要看懂央行货币政策，最值得研究的就是货币当局的资产负债表。因为央行不一定所有操作都是公开透明的，但是这些操作都会涵盖在资产负债表中。尽管这个表的公布不及时，央行操作对市场的影响可能已经过去，但从长期来看，可以帮助我们确认央行的意图。 央行资产负债表概览中国人民银行1994年开始公布货币当局资产负债表（年度），2000年开始按月公布数据。2002年央行对资产负债表进行了较大的调整。 央行的资产负债表与一般公司报表略有不同。因为央行是货币金融组织管理机构，没有股东，所以没有所有者权益一项。另外，央行是非盈利性机构，因此央行调控市场的资本全都来自它的印钱和负债。 中央银行资产负债表的负债方记录了中央银行的资金来源状况，包括基础货币、财政存款、央票发行、不计入储备货币的金融性公司存款、国外负债、自有资金、其他负债，共计7个项目。央行资产负债表的资产方记录了中央银行的资金运用状况，包括国外资产、对政府债权、对其他存款性公司债权对其他金融性公司债权、对非金融性部门债权、其他资产，共6项。 资产端国外资产国外资产项下包括外汇、货币黄金和其他国外资产。使用历史成本法和人民币计价。 外汇指的是央行口径的外汇占款，是央行从居民或商业银行手中购买外汇而对应投放的人民币。 货币黄金记录央行在国内外市场上购买黄金所投放的人民币（国外市场用外汇储备购买，换算成人民币）。 其他国外资产包括央行持有的国际货币基金组织头寸、SDR等。 对政府债权该项记录央行持有的政府发行证券，主要是特别国债。1995年《中国人民银行法》规定“中国人民银行不得对政府透支，不得直接认购、包销国债和其他政府债权”。 央行为中投注资导致2007年资产中“持有的政府债权 ”快速扩张。2007年，中国投资公司（中投公司）正式成立。为了给中投公司注入资本，财政部向市场发行了15500亿元的人民币债券（表现形式为特别国债），其中有13500亿元通过农业银行转手至人民银行（2000亿元人民币特别国债通过市场发行方式发行），因此到2007年底人民银行持有的国债数量大幅度增加至16000亿元左右。财政部向银行发行特殊国债，募集人民币，再向央行购买外汇，注入中投公司；央行将出售外汇所得人民币向银行购买特殊国债。基础货币规模不受影响。2017年财政部又续作了该部分到期的特别国债。 对其他存款性公司债权该项是指央行对商业银行、政策性银行等其他存款性公司的再贴现、再贷款、逆回购操作和结构性货币政策工具余额。 2002-2010：央行以再贷款和再贴现进行主动投放。 2011-2014：公开市场操作取代再贴现和再贷款。 2015~：公开市场操作以及其他货币政策工具（SLF、MLF、PSL等）。 对其他金融性公司债权主要记录了央行为了金融稳定而开展的再贷款。 1999-2000：为支持四大国有银行改革，处理银行不良资产剥离，对四家AMC进行再贷款。 2004-2007：再次对AMC提供专项再贷款，以支持处理工行、建行、中行改制过程中的可疑类再贷款。 2005，2015：股市下跌，为了维持金融体系稳定，对证券公司/证金公司开展再贷款。 对非金融性公司债权主要是央行为支持老少边穷地区经济开发所放的贷款，规模很小。 其他资产公开信息来源较少，可能与央行注资金融机构有关。 负债端基础货币又称储备货币、高能货币； $$基础货币 = 货币发行 + 其他存款性公司存款 + 非金融机构存款；货币发行 = 金融机构库存现金 + 流通中现金M0；其他存款性公司存款 = 法定存款准备金 + 超额存款准备金。非金融机构存款 = 支付机构的客户备付金存款$$ 其他存款性公司所谓其他存款性公司，指的是除中央银行以外的，主要进行吸收存款、发放贷款、办理（支票）转账结算等中介服务的存款性公司或准公司。主要包括商业银行（存款货币银行）、信用合作社以及专门把储蓄存款作为资金来源的储蓄机构等。可见，其他存款性公司只是存款性公司的一个组成部分，其他存款性公司与中央银行共同构成所谓的存款性公司。 在我国，其他存款性公司又被习惯地细分为存款货币公司和其他存款货币公司两部分。其中，所谓存款货币公司，指的是可以吸收活期存款、提供支票转账结算服务的金融公司。主要包括： 国有商业银行：中国工商银行、中国农业银行、中国银行、中国建设银行。 股份制商业银行：交通银行、中信实业银行、光大银行、华夏银行、广发银行、深圳发展银行、招商银行、浦东发展银行、兴业银行、民生银行、恒丰银行等。 城市商业银行和农村商业银行。 城市信用社和农村信用社。 外资银行。 中国农业发展银行。中国农业发展银行的运营资金来源长期以来主要依靠中国人民银行的再贷款，但从2005年开始加大了市场化筹资的力度。目前，中国农业发展银行可以办理业务范围内的企事业单位存款、协议存款、同业存款等业务，也可以办理开户企事业单位的结算业务。 所谓其他存款货币公司，指的是仅能接受一些在期限、金额或者来源上存在某种限制的存款的金融性公司。主要包括中资或外资企业集团财务公司以及国家开发银行、中国进出口银行这两家国家政策性银行等。 我国早期的财务公司可以在内部成员企业间开展结算业务。但到了上个世纪的九十年代末，最先由外资银行引入现金池业务。经由现金池业务，不论一个企业集团是否拥有财务公司、成员企业分布有多广，都可以对成员企业的资金进行集中管理，这就使得财务公司的结算业务丧失了竞争力。而没有了结算业务，也就谈不上清算业务了。于是大约在1998年前后，财务公司的清算号被人行取消。因此，目前在我国，企业集团财务公司的主要职能只是统筹管理企业集团的资金资源，并无结算业务和现金业务。 早在2007年初，当时的全国金融工作会议就决定推进国家开发银行、中国进出口银行和农业发展银行三大政策性银行的改革。亦即按照建立现代金融企业制度的要求，全面推行商业化运作，自主经营、自担风险、自负盈亏，主要从事中长期业务。但就我目前所掌握的信息，国家开发银行和中国进出口银行仍与企业集团财务公司相似，均无结算业务（由诸如工商行等商业银行代理）和现金业务。 不存在结算业务和现金业务，也就意味着这些金融机构的业务与（存款）货币的供给无关。因此在我国，目前并不是所有的其他存款性公司都参与了货币的供给过程。亦即只有存款货币公司的负债业务与中央银行的负债业务共同决定着我国的广义货币供给量。 不计入储备货币的金融性公司存款该项是金融机构除存款准备金外在央行的存款，主要包括金融机构业务往来清算支付所需的资金。 财政存款中国实行委托国库制度，《预算法》规定县级以上各级预算必须设立国库，具备条件的乡、民族乡、镇也应当设立国库。国库是办理预算收入的收纳、划分、留解和库款支拨的专门机构，分为中央国库和地方国库。央行经理国库包含了中央和地方国库两个层级。 财政存款有明显的季节性：1、4、5、7、10月明显上升；3、6、9、12月明显下降，12月下降幅度最大。原因在于每年4、5、10月为企业上缴企业所得税的集中时期，财政存款规模明显上升；而3、6、9、12月为财政支出集中时期。 发行债券央票发行时央行主动收缩货币供给的工具。2002-2011年双顺差积累外汇储备，基础货币总量猛增的背景下被广泛使用。 国外负债主要记录央行对非居民的负债，包括非居民部门在本国央行存款（境外金融机构央行存款，国际合作，资金清算）和央行在国外发行央票等。 自有资金央行资本金，由国家出资。变化幅度很小。 其他负债包括正回购余额、金融机构以外汇形式缴存法定存款准备金等。 参考： 《图解央行的资产负债表，各种混淆概念一贴辩清》链接 《信用扩张机制中的央行资产负债表解读系列(1)：庖丁解牛 央行资产负债表解构》，周君芝（广发证券），20170603]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
        <tag>货币</tag>
        <tag>央行</tag>
        <tag>资产负债表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL笔记：Key, Unique, Index等的区别]]></title>
    <url>%2F2016%2F10%2F21%2FMySQL_key_index.html</url>
    <content type="text"><![CDATA[MYSQL索引用来快速地寻找那些具有特定值的记录。如果没有索引，执行查询时MySQL必须从第一个记录开始扫描整个表的所有记录，直至找到符合要求的记录。表里面的记录数量越多，这个操作的代价就越高。如果作为搜索条件的列上已经创建了索引，MySQL无需扫描任何记录即可迅速得到目标记录所在的位置。 概念一本词典，数据就是书的正文内容，索引，则是书的目录。大多数情况下索引能大幅度提高查询效率，但： 数据的变更（增删改）都需要维护索引，因此更多的索引意味着更多的维护成本 更多的索引意味着也需要更多的空间 （一本100页的书，却有50页目录？） 过小的表，建索引可能会更慢（读个2页的宣传手册，先去找目录？） Key和Index的区别在网上看到不少类似解释，还是不太明白，有待继续学习： KEY通常是INDEX同义词。如果关键字属性PRIMARY KEY在列定义中已给定，则PRIMARY KEY也可以只指定为KEY。这么做的目的是与其它数据库系统兼容。PRIMARY KEY是一个唯一KEY，此时，所有的关键字列必须定义为NOT NULL。如果这些列没有被明确地定义为NOT NULL，MySQL应隐含地定义这些列。 KEY即键值，是关系模型理论中的一部份，比如有主键（PRIMARY KEY)，外键（Foreign KEY）等，用于数据完整性检否与唯一性约束等。而INDEX则处于实现层面，比如可以对表个的任意列建立索引，那么当建立索引的列处于SQL语句中的Where条件中时，就可以得到快速的数据定位，从而快速检索。至于UNIQUE INDEX，则只是属于INDEX中的一种而已，建立了UNIQUE INDEX表示此列数据不可重复，猜想MySQL对UNIQUE INDEX类型的索引可以做进一步特殊优化吧。 于是，在设计表的时候，KEY只是要处于模型层面的，而当需要进行查询优化，则对相关列建立索引即可。 KEYKEY是数据库的物理结构，包含两层含义，一是约束，偏重于约束和规范数据库的结构完整性，二是索引，辅助查询。 primary key 有两个作用，一是约束作用（constraint），用来规范一个存储主键和唯一性，但同时也在此key上建立了一个index；unique key 也有两个作用，一是约束作用（constraint），规范数据的唯一性，但同时也在这个key上建立了一个index；foreign key也有两个作用，一是约束作用（constraint），规范数据的引用完整性，但同时也在这个key上建立了一个index；可见，key是同时具有constraint和index的意义. INDEXINDEX也是数据库的物理结构，但他只有辅助查询作用，它会在创建时占用另外的空间。索引分为前缀索引、全文索引等。索引只是索引，不会去约束索引字段的行为。 PRIMARY KEY 和 UNIQUE KEY 的区别PRIMARY KEYs（主键）和UNIQUE KEYs（唯一键约束）是类似的， PRIMARY KEY通常是一列，也有可能多列，通常由他来决定一行数据(row)。 一张表只能有一个PRIMARY KEY，但可以有很多UNIQUE KEY。当给一列设置为UNIQUE KEY之后，不能有两行在该列上有相同的数据。 PRIMARY KEY不允许有 NULL值，但是UNIQUE KEY可以。 1ALTER TABLE table_name ADD PRIMARY KEY(column_name, …) 相同点：PRIMARY KEY和UNIQUE KEY都是用来保证列上数据的为原型；都可以在一列或者多列上加 差异点：同一张表PRIMARY KEY只能有一个， UNIQUE KEY可以有多个PRIMARY KEY不能有空值， UNIQUE KEY可以有。如果PRIMARY KEY 的1个或多个列为NULL，在增加PRIMARY KEY时，列自动更改为NOT NULL 。而UNIQUE KEY对列没有要求是通过参考索引实施的，如果插入的值均为NULL，则根据索引的原理，全NULL值不被记录在索引上，所以插入全NULL值时，可以有重复的，而其他的则不能插入重复值。 1alter table t add constraint uk_t_1 UNIQUE (a,b); insert into t (a ,b ) values (null,1); # 不能重复 insert into t (a ,b ) values (null,null);#可以重复 在MySQL中，对于一个PRIMARY KEY的列，MySQL已经自动对其建立了UNIQUE INDEX，无需重复再在上面建立索引了。 网上关于 PRIMARY KEY 和 UNIQUE INDEX 的一段解释： Note that “PRIMARY” is called PRIMARY KEY not INDEX.KEY is something on the logical level, describes your table and database design (i.e. enforces referential integrity …)INDEX is something on the physical level, helps improve access time for table operations.Behind every PK there is (usually) UNIQUE INDEX created (automatically). 创建索引使用说明普通索引这是最基本的索引类型，而且它没有唯一性之类的限制。 创建索引 1CREATE INDEX &lt;索引的名字&gt; ON tablename (列的列表); 修改表索引 1ALTER TABLE tablename ADD INDEX [索引的名字] (列的列表); 创建表的时候指定索引 1CREATE TABLE tablename ( […], INDEX [索引的名字] (列的列表) ); 唯一性索引这种索引和前面的“普通索引”基本相同，但有一个区别：索引列的所有值都只能出现一次，即必须唯一。但允许有空值。 MYSQL主键：MYSQL主键是一种唯一性索引，但它必须指定为“PRIMARY KEY”。每个表只能有一个主键。 1CREATE TABLE tablename ( […], PRIMARY KEY (列的列表) ); 但是，我们也可以通过修改表的方式加入主键： 1ALTER TABLE tablename ADD PRIMARY KEY (列的列表); 全文索引MySQL从3.23.23版开始支持全文索引和全文检索。在MySQL中，全文索引的索引类型为FULLTEXT。全文索引可以在VARCHAR或者TEXT类型的列上创建。它可以通过CREATE TABLE命令创建，也可以通过ALTER TABLE或CREATE INDEX命令创建。对于大规模的数据集，通过ALTER TABLE（或者CREATE INDEX）命令创建全文索引要比把记录插入带有全文索引的空表更快。 举个例子来说，比如你在为某商场做一个会员卡的系统。这个系统有一个会员表,有下列字段：会员编号 INT会员姓名 VARCHAR(10)会员身份证号码 VARCHAR(18)会员电话 VARCHAR(10)会员住址 VARCHAR(50)会员备注信息 TEXT那么这个 会员编号，作为主键，使用PRIMARY KEY;会员姓名，如果要建索引的话，那么就是普通的INDEX;会员身份证号码，如果要建索引的话，那么可以选择UNIQUE（唯一的，不允许重复）会员备注信息 ，如果需要建索引的话，可以选择FULLTEXT，全文搜索。不过FULLTEXT用于搜索很长一篇文章的时候，效果最好。用在比较短的文本，如果就一两行字的，普通的INDEX也可以。]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Excel的快捷操作笔记]]></title>
    <url>%2F2016%2F10%2F07%2FExcel_shortcuts.html</url>
    <content type="text"><![CDATA[快速求和：“alt” + “=” 改变数字格式：”ctrl” + “shift” + “数字”，3日期，4金额，5百分比，6科学计数 展现所有公式：”ctrl” + “`” 添加行/列：”ctrl” + “shift” + “=” 双击格式刷可以“刷”多个单元 切换不同工作表：”ctrl” + “pgUp”/“pgDown”]]></content>
      <categories>
        <category>IT skills</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国内债市杠杆监管政策]]></title>
    <url>%2F2016%2F09%2F09%2FChinese_bond_leverage_regulations.html</url>
    <content type="text"><![CDATA[银监会商业银行自营部门《商业银行流动性风险管理办法（试行）》 巴塞尔协议 商业银行的流动性覆盖率应当在2018年底前达到100%。在过渡期内，应当在2014年底、2015年底、2016年底及2017年底前分别达到60%、70%、80%，90%。 商业银行理财业务《商业银行理财业务监督管理办法（意见征求稿）》 商业银行每只理财产品的总资产不得超过该理财产品净资产的140%。 证监会证券公司《证券公司风险控制指标管理办法》 资本杠杆率不得低于8% 流动性覆盖率不得低于100% 净资产/负债不得低于10% 公募基金《公募基金运作管理办法（征求意见稿）》 公布基金场内回购融资形成的净杠杆不超过40%。 基金公司子公司《基金管理公司特定客户资产管理子公司风险控制指标管理暂行规定（征求意见稿）》 净资产不得低于负债的20%。 结构化资产管理计划《证券期货经营机构私募资产管理业务运作管理暂行规定》 固收类不超过3倍 结构化资产管理计划的总资产占净资产比例超过140% 非结构化集合资产管理计划（一对多）的总资产占净资产的比例超过200% 中证登质押券折算率《标准券折算率（值）管理办法》《质押式回购资格准入标准及标准券折扣系数取值业务指引》 质押率整体出现下调，但评级越低的债券，质押率被下调的幅度越大 上清所质押券折算率《债券交易净额清算业务质押式回购质押券管理规程》 A类主体不同剩余期限的质押券折扣率标准统一为95%，这普遍高于原规程中的折扣率 B类主体中，除AA-及以下评级品种外，不同是剩余期限的质押券折扣率标准则有所区别，折扣率标准随着期限延长而递减 AA-及以下评级品种折扣率标准则统一为90%。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>债券</tag>
        <tag>杠杆</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[宏观审慎评估体系]]></title>
    <url>%2F2016%2F08%2F02%2FMPA.html</url>
    <content type="text"><![CDATA[在实施MPA以前，监管主要盯住银行贷款。MPA之后转向关注广义信贷（包括贷款、债券投资、股权及其他投资、买入返售资产以及非银同业存放等）。 七大方面 14个指标 资本和杠杆情况 资本充足率（80分）、杠杆率（20分） 资产负债情况 广义信贷（60分）、委托贷款（15分）、同业负债（25分） 流动性 流动性覆盖率（40分）、净稳定资本比例（40分）、遵守准备金制度情况（20分） 定价行为 利率定价（100分） 资产质量 不良贷款率（50分）、拨备覆盖率（50分） 外债风险 外债风险加权余额（100分） 信贷政策执行 信贷执行情况（70分）、央行资金运用情况（30分） MPA每季度考核一次，结果分ABC三档。 如果7大方面得分均在90以上，则为A档，执行最优档激励。 如果资本和杠杆情况、定价行为二者任意一项低于60分，或其他五大方面中任意两项及以上低于60分，则为C档，给予适当约束。 其他情况为B档，执行正常激励。]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
        <tag>MPA</tag>
        <tag>央行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[宏观数据：PMI]]></title>
    <url>%2F2016%2F07%2F14%2FPMI.html</url>
    <content type="text"><![CDATA[基本概念采购经理人指数是根据被调查者（采购经理人）对不同方面经济前景的看法，综合计算的扩散指数。统计方法为通过询问样本企业采购经理人对生产、订单、库存、雇员、配送时间等看法，以上升、持平、下降分别赋予三类数值，再按各项目权重进行加总得到总体PMI。 PMI是经济重要的先导指标，本身是基于对未来看法综合的扩散指数，大于50显示经济处于扩张状态（乐观预期），小于50显示经济处于收缩状态（悲观预期）。 中国物流与采购联合会与统计局从2005年开始共同发布中国制造业采购经理指数（PMI），每月1日公布上月数据。中国PMI的另一来源是财新中国PMI（原名“汇丰中国PMI”），在下月初前一周公布当月PMI预览值，然后在下月1日左右公布当月PMI终值。 分项指数PMI分项指数各实体经济指标具有重要的先导意义。主要可以分为四部分： 需求：新订单与出口订单指数反映需求面，新订单是PMI子项中的领先指标。新出口订单是外需的先导指标。通过新订单与新出口订单指数之差可以估算国内订单指数变化情况。 生产：生产、从业人口指数，可以通过电力耗煤数据印证。 库存：原材料、产成品库存指数反映厂商对生产的信心。原材料库存指数反应企业主动调整库存意愿，上升显示对经济看法改善，指示意义比产成品库存指数更为重要，因为产成品库存指数反应被动调整库存意愿，上升反应对需求前景预期恶化导致库存上升。使用原材料库存与产成品库存指数差是更为有效的主动补库存先导指标。此指标往往与进口呈现较高的相关关系。 价格：原材料购进价格反映物价，该指数对PPI有显著的领先关系，经济疲弱情况下购进价格指数也较低。]]></content>
      <categories>
        <category>经济学</category>
      </categories>
      <tags>
        <tag>宏观</tag>
        <tag>PMI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[英国退欧的思考]]></title>
    <url>%2F2016%2F06%2F27%2FBrexit.html</url>
    <content type="text"><![CDATA[英国公投结果宣布退出欧盟，全球市场为之一震。对我这种没有经历过08年的新人来说，真是一场有趣的“危机”。 公投概述 2013年，卡梅伦在竞选期间提出，如果2015年当选将在2017年底前进行全民公投，决定是否退出欧盟。 2016年2月20日，卡梅伦宣布公投日期定在6月23日。 2016年6月23日，最终投票结果以退欧阵营51.9%的支持率胜出。公投结果公布后，卡梅伦宣布辞职。 赌盘 vs 民调民意调查数据显示，退欧与留欧的支持者比例一直比较焦灼（留欧略高于退欧），在公投前两周出现了退欧呼声更高的情况。 另一方面，博彩赌盘的盘口赔率显示，直至公投结束、结果公布之前，退欧赔率都远高出留欧赔率，或者说隐含的留欧概率更高。 有效市场假说在过去几次政治事件中（奥巴马当选、卡梅伦连任、苏格兰脱英公投），博彩盘口的赔率都较好的反应了市场预期，投票结果也都和赌盘接近。 这背后有一个非常重要的逻辑，就是EMH。在一个完全有效的市场，所有信息都已经反应在价格中。而博彩市场盘口数据是由真钱“堆”出来的，如果市场是有效的，那么博彩盘口更能反应市场真实偏好。在这次公投结束之前，包括我在内很多人都更愿意相信博彩赌盘的隐含概率。 到底谁错了？？？现在回想两个数据源，这一次似乎是民调数据赢了，但为什么这一次的博彩盘口会相差那么多呢？ 在ZeroHedge上看到了这两条twitter： 很有趣的一组数据：6月22日（公投前一天），在Ladbrokes下注者中，62%的人选择了押退欧。但是平均押注金额却相差很多（留欧376镑，退欧72镑）。 这似乎就能解释为什么赌盘隐含留欧概率如此高了：假如100人押注（38留，62走），押留欧的钱有（376*38=14288镑），而押退欧的钱有（72*62=4464镑），两边的押注金额比约3.2:1，与当时的盘口赔率是比较接近的。 下注者本身大概率也是公投的投票者，一个留欧支持者一般不会选择押注于对自己不利的另一边，除非有“对冲”小概率事件的需求。因此，如果单从押注人数上看，退欧的支持者的确高于留欧派，至少并没有盘口赔率显示得一边倒。 被“操纵”了？在过去几次的政治事件中，民调数据被质疑的一大原因在于调查样本质量和公司偏好。由于民调多基于电话、网络等方式，采访对象的分布可能使统计结果出现偏差。另外，民调公司作为非官方机构，难免会受到公司、个人利益的影响，“操纵”数据结果。 另一方面，还有一篇ZeroHedge文章提到的观点，博彩盘可以用很小的资金撬动金融市场。假如有对冲基金在公投前有大额做多英镑/美元的仓位，然后只花几万英镑在博彩公司押注留欧，影响其隐含留欧概率，把英镑/美元的汇率推高，出仓英镑获利。之后他们还可以再反压”退欧“，把之前几万英镑赌注也给对冲出去，还可能因为赔率的变化在赌局上也获利一把。 不得不承认这真是一个好策略，尤其是在民调数据持续偏向退欧，英镑贬值的时候使用，对于市场预期的影响非常有效。 太民主未必好事我一直认为这次公投主要是卡梅伦为了竞选而提出的“噱头”，“上层”精英阶层一定认为留欧会是必然的聪明选择，是有多相信国人的民智，才会放心的交给全民公投。 看到这幅投票结果图（还没完全公布时的），总有一种被乡下人玩拖了的感觉。。。 之前看到个段子：如果我们也搞个公投，要么是举手表决一致通过；要么就是某领导拍脑袋说55:45，助理发言时在后面加两个小数55.34:44.66。其实又有什么不好呢？ 70%多的投票率，51.9%的微弱优势，真的能够反映民众的真实意愿吗？这让大家以后还怎么在一个屋檐下好好生活了。。。 王国的命运、联盟的格局、全球的发展就这么草草得被改写了。未来是好是坏？Who knows. God Save the Queen！]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>宏观</tag>
        <tag>事件分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VPS上用Hexo搭建博客]]></title>
    <url>%2F2016%2F06%2F22%2FHexo_Blog_on_VPS.html</url>
    <content type="text"><![CDATA[这篇文章记录了自己折腾VPS搭建Hexo的过程。之前的博客是由Jekyll搭建并托管在Github上的，而VPS只是用来科学上网。总想着把VPS的作用发挥起来，其中之一就是搭建网站。当初建博客时在Jekyll和Hexo之间犹豫过，因为Github Pages原生支持Jekyll网站生成，所以就选择了它。在决定把博客移到VPS上时，想过用Django等更复杂的语言从头编写，但对于我来说学习成本较高，没有这个必要。目前来看Hexo的效率似乎是比Jekyll更高，如果只是想简单建个写东西的地方，主题设置也更简单些。 基础配置VPS我选择的DigitalOcean，每月5美金的VPS，申请过程可以参照我之前的一篇博文，网上教程也很多。 如果不想用付费VPS，也可以选择Github Pages或者其他免费的代理服务。但我觉得很多时候还是付费的东西用着安心。 域名这部分不是必须的，但作为VPS上博客的入口，有个像样的、个性化的域名还是很有必要的。不然每次都在浏览器输入IP地址。。。也不是不可以。我是在Godaddy上注册的域名，再通过DNSpod设置绑定到VPS服务器上。可以参考这篇中的进阶修改部分。 搭建过程搭建过程分为两部分，一部分在本地电脑上配置，另一部分则在服务器端进行，大致需要完成的工作是在本机安装Hexo和Git ，并在 VPS 上安装 Nginx 服务器、配置 Git Hooks 以实现更新。 本地配置安装Node.js在 Node.js 官网下载最新版，一路默认安装。 安装 Git下载Git for Windows ，一路默认安装。 创建网站目录在任意位置创建一个文件夹，作为网站目录，并通过cmd中cd命令进入文件夹（或者在文件夹按shift+右键，在此打开命令窗口）。 本地安装 Hexo国内通过npm安装速度较慢，可以先把安装源设置成taobao的镜像。 1npm config set registry http://registry.npm.taobao.org 12345$npm install -g hexo-cli$hexo init$npm install$hexo g$hexo serve 打开 http://localhost:4000 即可看到你的站点（当然还没有发布到网络）。 本地 Git 配置同样在cmd中进入该文件夹，之后执行 123$git init$git add .$git commit -m &quot;Initial commit&quot; 修改_config.yml在hexo文件夹下有配置文件_config.yml，找到[deploy]并修改 123deploy: type: git repo: git@your_IP:/home/git/repos/example.com/,master VPS连接VPS ，Windows 用户可以使用cmd和ssh root@ip连接你的服务器，也可以使用 Putty（网上下载， 优点是可以使用右键粘贴） 123456789$apt-get update &amp;&amp; apt-get upgrade -y$apt-get install git-core -y$curl -sL https://deb.nodesource.com/setup | bash$apt-get install nodejs -y$apt-get install nginx -y$cd /etc/nginx/sites-available$rm -rf default$touch example.com$vi example.com 在其中输入如下内容(点击i进行编辑）并保存退出（先按Esc，再输 :wq），注意 IP 和 example 需替换 1234567891011121314151617181920212223server &#123; listen your_IP:80 ; root /var/www/example.com; server_name example.com; access_log /var/log/nginx/example_access.log; error_log /var/log/nginx/example_error.log; location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ &#123; root /var/www/example.com; access_log off; expires 1d; &#125; location ~* ^.+\.(css|js|txt|xml|swf|wav)$ &#123; root /var/www/example.com; access_log off; expires 10m; &#125; location / &#123; root /var/www/example.com; if (-f $request_filename) &#123; rewrite ^/(.*)$ /$1 break; &#125; &#125; &#125; 之后执行 1$ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/example.com 创建git用户这一步可能不是必要的，因为vps主要是个人使用，有个root账户也够用。主要是要把本地电脑的ssh公钥添加到服务器上，以防止将来每次deploy都需要输入密码。 1$sudo adduser git -ingroup sudo 配置VPS端GIt1234567$cd ~$mkdir repos &amp;&amp; cd repos$mkdir example.com.git &amp;&amp; cd example.com.git$git init --bare$cd hooks$touch post-receive$vi post-receive 在其中输入如下内容并保存 12345678#!/bin/bash -lGIT_REPO=/home/git/repos/example.com.gitTMP_GIT_CLONE=/home/git/tmp/hexo_tmpPUBLIC_HEXO=/var/www/example.comrm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONErm -rf $&#123;PUBLIC_HEXO&#125;/*cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_HEXO&#125; 最后执行 123$chmod +x post-receive$cd ~$service nginx restart 如果restart失败，可能需要转回root账户再试一次。 在本地博客目录下运行 1hexo deploy 把本地的博客部署至服务器端。 至此，博客框架应该已经完成了，可以通过你的域名或者ip地址访问试试。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>DigitalOcean</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记：Matplotlib的用法记录]]></title>
    <url>%2F2016%2F06%2F03%2FPython_notes_matplotlib.html</url>
    <content type="text"><![CDATA[对于用过Matlab的人来说，Matplotlib上手可能不算难，但是要画出漂亮的可视化图形还是比较难的。 在网上找到一篇很不错的教程，英语原文，也有中文翻译版本 官方文档在matplotlib的官网上有不少的例子，另外在使用过程中，可以通过help来查询用法。 12import matplotlib.pyplot as plthelp(plt.plot) Figures, Subplots and Axes打开的一个GUI界面/窗口就是一个figure，其中可以包含几个小的subplots。 Figuresfigures主要有以下几个参数： 参数 默认值 描述 num 1 number of figure figsize figure.figsize figure size in inches (width, height) dpi figure.dpi resolution in dots per inch facecolor figure.facecolor color of the drawing background edgecolor figure.edgecolor color of edge around the drawing background frameon True drau figure frame or not Subplots在一个figure下可以分成几个小图，subplot(nrow,ncol,num)来创建。 也可以结合gridspec来创建更复杂的小图。 123456789101112131415161718192021222324252627282930313233import matplotlib.pyplot as pltimport matplotlib.gridspec as gridspecplt.figure(figsize=(6, 4))G = gridspec.GridSpec(3, 3)axes_1 = plt.subplot(G[0, :])plt.xticks(())plt.yticks(())plt.text(0.5, 0.5, 'Axes 1', ha='center', va='center', size=24, alpha=.5)axes_2 = plt.subplot(G[1, :-1])plt.xticks(())plt.yticks(())plt.text(0.5, 0.5, 'Axes 2', ha='center', va='center', size=24, alpha=.5)axes_3 = plt.subplot(G[1:, -1])plt.xticks(())plt.yticks(())plt.text(0.5, 0.5, 'Axes 3', ha='center', va='center', size=24, alpha=.5)axes_4 = plt.subplot(G[-1, 0])plt.xticks(())plt.yticks(())plt.text(0.5, 0.5, 'Axes 4', ha='center', va='center', size=24, alpha=.5)axes_5 = plt.subplot(G[-1, -2])plt.xticks(())plt.yticks(())plt.text(0.5, 0.5, 'Axes 5', ha='center', va='center', size=24, alpha=.5)plt.tight_layout()plt.show() Axes与subplots类似，但可以自定义坐标轴的位置大小。可以在大图中特定位置插入小图。位置通过参数列表[left, bottom, width, height]设定，取值[0,1]。 123456789101112131415161718192021222324252627import matplotlib.pyplot as pltplt.axes([.1, .1, .5, .5])plt.xticks(())plt.yticks(())plt.text(0.1, 0.1, 'axes([0.1, 0.1, .8, .8])', ha='left', va='center', size=16, alpha=.5)plt.axes([.2, .2, .5, .5])plt.xticks(())plt.yticks(())plt.text(0.1, 0.1, 'axes([0.2, 0.2, .5, .5])', ha='left', va='center', size=16, alpha=.5)plt.axes([0.3, 0.3, .5, .5])plt.xticks(())plt.yticks(())plt.text(0.1, 0.1, 'axes([0.3, 0.3, .5, .5])', ha='left', va='center', size=16, alpha=.5)plt.axes([.4, .4, .5, .5])plt.xticks(())plt.yticks(())plt.text(0.1, 0.1, 'axes([0.4, 0.4, .5, .5])', ha='left', va='center', size=16, alpha=.5)plt.show()]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记：基础]]></title>
    <url>%2F2016%2F05%2F24%2FPython_notes_basics.html</url>
    <content type="text"><![CDATA[python的基础用法和需要注意的地方 Python 赋值python中的赋值机制与其他语言有所区别，使用时需要注意。 1234567891011121314151617181920212223242526&gt;&gt;&gt;x = [1,2,3]&gt;&gt;&gt;y = x&gt;&gt;&gt;x[1] = 100&gt;&gt;&gt;y[1,100,3]&gt;&gt;&gt;x=500&gt;&gt;&gt;y=x&gt;&gt;&gt;y500&gt;&gt;&gt;y='foo'&gt;&gt;&gt;x500&gt;&gt;&gt;yfoo&gt;&gt;&gt;x = [500, 501, 502]&gt;&gt;&gt;y = x&gt;&gt;&gt;print('x = ',x,' y= ',y)x = [500, 501, 502] y= [500, 501, 502]&gt;&gt;&gt;y[1] = 700&gt;&gt;&gt;print('x = ',x,' y= ',y)x = [500, 700, 502] y= [500, 700, 502]&gt;&gt;&gt;y = [100,200]&gt;&gt;&gt;print('x = ',x,' y= ',y)x = [500, 700, 502] y= [100, 200] 条件控制在C++等语言中用{ }定义，Python中用:以及缩进控制代码块。 123456if condtion: statementelif condition2: statement2else: statement3 实用功能列表推导式12345#列表推导式，也适用于集合、字典values = [10,21,3,5,12]squares = [x**2 for x in values if x&lt;=10]square_set = &#123;x**2 for x in values if x&lt;=10&#125;square_dict = &#123;x: x**2 for x in values if x&lt;=10&#125; 函数用def开头，不需要指定返回值，return语句返回值，否则默认空值None。变量也不需要指定类型 12def func_name(pram1, param2 = default_value, ....): return x 文档注释用三重引号表示多行字符串。使用是可以通过$times.doc$来获取。 12345678910def times(a,b): '''a multiplies b. key arguments: a -- number b -- number returns: number ''' a*b 1234567891011121314151617181920#接受不定参数def add(x, *args): total = x for arg in args: total += arg return total&gt;&gt;&gt; add(1,2,3,5,)11#使用包含关键词的不定参数def add(x, **args): total = x for arg, value in args.items(): print('adding ', arg) total += value return total&gt;&gt;&gt;add(1,x=1,y=3,z=100)105 将函数fun应用到seq序列上的每个元素map(fun, seq) 模块和包可以通过import module，或者通过from module import part调用全部或部分模块 name属性一个.py文件，可能是模块，也可以当作脚本使用（测试用）。 1234567891011121314151617181920212223#文件名称 mymodule.pyPI = 3.1416def sum(lst): """ Sum the values in a list """ tot = 0 for value in lst: tot = tot + value return totdef add(x, y): " Add two values." a = x + y return adef test(): w = [0,1,2,3] assert(sum(w) == 6) print 'test passed.' if __name__ == '__main__': test() 这样的文件既可以当模块调用，也可以当脚本运行。 12345&gt;&gt;&gt;run mymodule.pytest passed&gt;&gt;&gt;import mymodule as my&gt;&gt;&gt;my.PI3.1416 包（package)假设我们有这样的一个文件夹： foo/ __init__.py bar.py (defines func) baz.py (defines zap) 这意味着 foo 是一个package，可以这样导入其中的内容： 12from foo.bar import funcfrom foo.baz import zap bar 和 baz 都是 foo 文件夹下的 .py 文件。 导入包要求： 文件夹 foo 在Python的搜索路径中 __init__.py 表示 foo 是一个包，它可以是个空文件。 异常exception通过try….except来避免系统报错 12345678910111213141516171819import mathwhile True: try: text = raw_input('&gt; ') if text[0] == 'q': break x = float(text) y = 1 / math.log10(x) print "1 / log10(&#123;0&#125;) = &#123;1&#125;".format(x, y) except ValueError as exc: if exc.message == "math domain error": print "the value must be greater than 0" else: print "could not convert '%s' to float" % text except ZeroDivisionError: print "the value must not be 1" except Exception as exc: print "unexpected error:", exc.message]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记：Data Types]]></title>
    <url>%2F2016%2F05%2F22%2FPython_notes_data_trypes..html</url>
    <content type="text"><![CDATA[Python中常用的数据类型 常用数据类型 类型 例子 int -100 float 3.1416 long 1000000000000L bool True, False string &#39;hello&#39; list [1, 1.2, &#39;hello&#39;] tuple (&#39;ring&#39;, 1000) set {1, 2, 3} dict {&#39;dogs&#39;: 5, &#39;pigs&#39;: 3} Numpy array array([1, 2, 3]) Pandas types DataFrame, Series 可以用type()来检测任何变量的类型。 1. BooleansTrue(=1)、False(=0) 12&gt;&gt;&gt;True + True 2 2. Numbers系统自动检测int、float，也可以通过int()，float()强制转换。int()是取整，不是四舍五入！ 当整数int超出范围时，Python会自动转换为long int。不过计算速度比int慢，在数字后以字母L结尾。 float精确到小数点后15位，print时会自动校准。 Python还支持复数，用j表示imaginary part 123&gt;&gt;&gt;a = 1+2j&gt;&gt;&gt;type(a)complex 3. Strings‘ ‘和” “都可以定义string，可以做简单的运算。用3个引号’’’ ‘’’定义多行字符串。 12&gt;&gt;&gt;('ch' + 'en') * 2'chenchen' 不能通过索引修改，可以用str.replace(‘from’, ‘to’)修改 4. Lists用[ ]定义列表，也通过list[i]取值，第一个i=0，倒数i=-1。 用[ ]定义列表，也通过list[i]取值，第一个i=0，倒数i=-1。 插入新增项 1234567891011121314151617&gt;&gt;&gt; a_list = ['a'] &gt;&gt;&gt; a_list = a_list + [2.0, 3] &gt;&gt;&gt; a_list ['a', 2.0, 3] &gt;&gt;&gt; a_list.append(True) &gt;&gt;&gt; a_list ['a', 2.0, 3, True] &gt;&gt;&gt; a_list.extend(['four', 'Ω']) &gt;&gt;&gt; a_list ['a', 2.0, 3, True, 'four', 'Ω'] &gt;&gt;&gt; a_list.insert(0, 'Ω') &gt;&gt;&gt; a_list ['Ω', 'a', 2.0, 3, True, 'four', 'Ω'] #append和extend有区别,append里的list被当做一个element&gt;&gt;&gt; a_list.append(['x','y','z'])&gt;&gt;&gt; a_list['Ω', 'a', 2.0, 3, True, 'four', 'Ω', ['x','y','z']] 列表中检索 1234567891011121314&gt;&gt;&gt; a_list = ['a', 'b', 'new', 'mpilgrim', 'new'] &gt;&gt;&gt; a_list.count('new') 2 &gt;&gt;&gt; 'new' in a_list True &gt;&gt;&gt; 'c' in a_list False &gt;&gt;&gt; a_list.index('mpilgrim') 3 &gt;&gt;&gt; a_list.index('new') 2Traceback (innermost last): File "&lt;interactive input&gt;", line 1, in ?ValueError: list.index(x): x not in list 5. Tuple用()定义元组，不可变。 元组与列表的区别： 元组的生成速度快一个数量级 迭代速度更快 不可变，更“安全” 可以通过tuple(alist)或者list(atuple)相互转换。 6. Dictionaries用{}定义字典，通过[‘key’]来查询和插入value。 通过get(‘key’)来获取value，如果key不存在，返回None， 不报错。 key-value存储，查找速度极快。 一个key只能对应一个value 不存在的key会报错，可用in判断或者get(key)。 dict内部存放顺序与写入顺序无关！ 7. Sets集合是装有独特值的无序“袋子”。可以执行像联合、交集以及集合求差等标准集合运算。 可以通过set(alist)创建，也可以{1,2,3}定义。但空集合只能用set()，{}表示dict。 add() 添加单个成员，但如果x已经在set里，则set不变。 update()只能使用list/set参数，可多个参数同时添加。 discard()和remove()删除值，如果参数不在set里， discard不操作，remove报错 a.union(b)返回a、b的并集（a|b) a.intersection(b)返回a、b的交集（a&amp;b） a.difference(b)返回a中出现、b中没用的（a-b） a.symmetric_difference(b)返回只在a或b出现的（a^b) a.issubset(b)返回a是不是b的子集(a&lt;=b) a.issuperset(b)返回a是不是b的超集 Frozen set用frozenset(list)创建，一旦创建就不可以改变。主要用作字典的key。 8. Enum123from enum import EnumMonth = Enum('Month', ('Jan', 'Feb', 'Mar')) 索引与分片通过[]来对有序序列索引，可正向（从0开始）、反向(-1开始)。 字典是没有顺序的（不按输入顺序排列）。 分片用法： var[lower:upper:step] 分片的范围包括lower，不包括upper！ Mutable数据类型分类： 可变数据类型 不可变数据类型 list, dictionary, set, numpy array, user defined objects integer, float, long, complex, string, tuple, frozenset]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sublime Text 3 Python]]></title>
    <url>%2F2016%2F05%2F13%2FPython_in_Sublime_Text.html</url>
    <content type="text"><![CDATA[用Sublime Text来编写Python时用到的一些插件和用法。 SublimeREPL通过这个插件就可以在Sublime中直接运行python代码了。要运行的时候选Tools-&gt;SublimeREPL-&gt;Python就可以看到了。每次都要点不方便，可以在Sublime中通过Preferences-&gt;Key Bindings - User设置快捷键 123456789101112131415161718[ //SublimeREPL &#123;"keys":["f5"], "caption": "SublimeREPL: Python - RUN current file", "command": "run_existing_window_command", "args": &#123; "id": "repl_python_run", "file": "config/Python/Main.sublime-menu" &#125;&#125;, &#123;"keys":["f4"], "caption": "SublimeREPL: Python - IPython", "command": "run_existing_window_command", "args": &#123; "id": "repl_python_ipython", "file": "config/Python/Main.sublime-menu" &#125;&#125; ,] 我喜欢用Ipython，可以选择运行单行或者一段代码，在开发的时候会方便很多。快捷键是ctrl加逗号，再按s、l、f、b。 ctrl + , , s 运行选中部分 ctrl + , , l 运行单行 ctrl + , , f 运行文件 ctrl + , , b 运行block SublimeCodeIntel 插件智能提示插件，据说这个插件的智能提示功能非常强大，可以自定义提示的内容库。 1234567891011&quot;Python&quot;: &#123; &quot;python&quot;:&quot;D:/Python34python.exe&quot;, &quot;pythonExtraPaths&quot;: [ &quot;D:/Python34&quot;, &quot;D:/Python34/DLLs&quot;, &quot;D:/Python34/Lib&quot;, &quot;D:/Python34/Lib/lib-tk&quot;, &quot;D:/Python34/Lib/site-packages&quot; ] &#125; 可能需要另外设置才能流畅使用，我暂时没有使用。 Python PEP8 Autoformat 插件这是用来按PEP8自动格式化代码的。快捷键 CTRL+SHIFT+R 自动格式化python代码 1234567891011121314151617&#123; "auto_complete": false, "caret_style": "solid", "ensure_newline_at_eof_on_save": true, "find_selected_text": true, "font_size": 11.0, "highlight_modified_tabs": true, "line_padding_bottom": 0, "line_padding_top": 0, "scroll_past_end": false, "show_minimap": false, "tab_size": 4, "translate_tabs_to_spaces": true, "trim_trailing_white_space_on_save": true, "wide_caret": true, "word_wrap": true,&#125; 之前一直使用这个插件，Anaconda中也带了类似的功能。 Anaconda这个Anaconda不是那个python的集成科学计算库，而是sublime的一个插件。是一款非常强大的python自动补全和语法提示插件，实现了不少IDE的功能。很多功能都可以直接通过右键的Anaconda选项下打开。 让Anaconda以dot为命令补全触发器需要在用户自定义设置中添加一句话： 1234&#123; "auto_complete_triggers": [&#123;"selector": "source.python - string - comment - constant.numeric", "characters": "."&#125;]&#125; 这个用户自定义设置有两个选择，你可以直接在Preferences - Settings - User里面添加这么一句，也可以在Preferences - Browse Packages…打开的文件夹里面新建一个叫做Python.sublime-settings的文件，并把上面的语句添加在里面。 让回车不再输错代码sublime在代码补全的时候默认会用tab和enter作为确认的按键，所以经常误输入一些东西（特别是添加了以dot作为命令补全的触发器之后），那么就得让enter不再作为代码补全的确认按键。 方法也很简单，首先在用户自定义设置（Preferences - Settings-User）里面添加一个配置： 1"auto_complete_commit_on_tab": true, 然后在Preferences - KeyBindings-User中添加如下配置： 12345&#123; "keys": ["enter"], "context": [ &#123; "key": "setting.auto_complete_commit_on_tab", "operand": true &#125; ]&#125;, 其实大家可以看到Preferences - KeyBindings-Default里面有这么一段，但是这个Default文件是无法更改的，所以就要放到User里面去。 123456&#123; "keys": ["enter"], "command": "commit_completion", "context": [ &#123; "key": "auto_complete_visible" &#125;, &#123; "key": "setting.auto_complete_commit_on_tab", "operand": false &#125; ]&#125;, PEP8自动格式化宏打开录制宏（Tools - Record Macro）之后，做两部操作，第一步全选（快捷键Ctrl + A），第二步PEP8格式化（默认快捷键Ctrl + Alt + R），然后结束录制宏（Tools - Stop Record Macro），并且把宏存储为一个文件PEE8Format.sublime-macro，然后绑定一个快捷键到这个宏文件上。在KeyBindings-User里面添加： 12345&#123; "keys": ["f1"], "command": "run_macro_file", "args":&#123;"file": "Packages/User/PEE8Format.sublime-macro"&#125;&#125; 另外，由于PEP8规定缩进是以4个空格为单位的，虽然tab运行起来没错，但是Anaconda会提醒你不符合PEP8标准，所以还是把tab直接替换为4个空格吧。我们需要在Setting-User里面添加两句话，含义显而易见的两句话。 12"tab_size": 4,"translate_tabs_to_spaces": true]]></content>
      <categories>
        <category>计算机相关</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Sublime Text</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[音乐会着火逃命的故事]]></title>
    <url>%2F2016%2F05%2F09%2FConcert_exit.html</url>
    <content type="text"><![CDATA[做了一段时间交易后，一直有个疑问：交易应该是顺势而为吗？还是逆势而上？ 老板给我讲了这么一个故事，值得反思： 如果你在一个音乐会上，知道东南角上的大门是一直开着的。突然间现场着火了需要紧急疏散。此时人群中有人大喊西北角有出口！这时候你应该怎么办？ 我的第一反应是既然东南角有出口，那就该往东南角走。 这可能与长时间的数学专业学习有关系吧。以前看到过一个关于数学家、物理学家等人对同一个事情的反应的段子，其中映像最深的就是问数学家如果着火了怎么办，数学家回答拿灭火器灭火。又问，如果没着火怎么办，数学家回答先把火点起来，再拿灭火器灭火。 虽然这个段子有点夸张，但也真实反应了学数学时常有的思维。已知B能推C，如果想证明A能推C，往往只会去想A如何推B。一旦证明A能推B，就很少再会去想A和C之间的其他解法了，哪怕B推C的过程非常复杂。 回到音乐会的问题上，如果我在着火的时候选择立即往东南角走，尽管理论上我是选择了一个正确的出口，但需要考虑到此时人群的方向是西北角。很有可能还没走到东南角，我已经死在了人群的踩踏中。 可能更好的办法是先随人流往西北角走上一段，再找合适的机会往东南角走。 在交易中可能也是如此。哪怕你99.99%确定市场错了，但大势如此，绝不可逆大市操作。往往在不停亏损的路上开始质疑自己之前的判断，最后死在了黎明前。 理论虽是如此，但在真实环境下要做出正确的决定还是非常有难度的。越是参与，越觉得自己还嫩的很。]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>交易心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于15天集EB的一些想法]]></title>
    <url>%2F2016%2F05%2F03%2FSH132002_note.html</url>
    <content type="text"><![CDATA[从天士力大股东的如意算盘角度，思考15天集EB可交换债及其正股天士力未来走势的个人观点。 看到集思路上关于雪球的分析，感觉挺有趣的。翻一下天士力的公司公告，第一感觉是这家公司是个“金融高手”。债券、交换债、定增、衍生品等各种金融工具都有参与。 背景2015年3月，天士力向6家公司（实际都为大股东控制）非公开增发16亿元A股，发行价格33.59元（47633224股），限售期36个月（2018年3月）。 2015年6月，天士力集团发行了12亿的可交换债，正好是在股灾前的最高点，57元的转股价（对应约2100万股股票）接近历史最高价57.85元。债券票面利率1%，2020年6月到期（5年）。其中条款包括： 回售：在最后两年（2018.06 - 2020.06）内20个交易日中的10个交易日收盘价低于转股价80%（45.6元），持有人可按107%回售。 下修：换股期（2016年6月起）内连续20个交易日中10个交易日收盘价低于转股价85%（48.45元），发行人有权下修。 赎回：换股期（2016年6月）前30个交易日，如果股票价格连续20个交易日中有10个交易日收盘价高于转股价130%（74.1元），发行人可107%赎回。转股期后，20个交易日中10个高于135%（76.95元），发行人可107%赎回。 个人推测我觉得可交换债与可转债最大的区别就在于发行人和持有人的利益关系不同。作为可交换债的持有人、大股东的交易对手方，最重要的是想明白大股东在想什么。 零成本融资。由于14、15年的债券牛市，以及转债市场的供给严重稀缺，使发行人发行含权债的成本非常低。从历史来看，天士力股票的分红平均有1-2%左右。所以其质押的股票完全可以覆盖融资成本。 借钱炒股。当初15天集EB上市时，转股期前赎回条款就使不少投资者对其发债目的有所质疑。在发行后的一年内，如果天士力股价大幅上涨，则投资者只能收回107%的本息；而按照大股东定增价计算，其收益超过100%。另外，考虑到大股东16亿定增，12亿可交换债融资，实际大股东资金占用仅4亿左右（对应收益率高达400%），可以变相看做大股东加杠杆博取超高收益。 大股东想赚钱。目前来看，大股东在一年内博取杠杆高收益不可能了。但作为公司的实际控制人，不可能希望自己的投资亏本，可以将股价分几个阶段讨论大股东的操作意愿： 股价&lt;定增价：如果股价低于增发价（除息除权后），大股东在定增上亏损，同时还需要偿还交换债的本息。发行人可以下修转股价以避免交换债回售，但下修至最新价附近（低于增发价）依然会使其亏损（=高买低卖）。所以2018年6月进入回售期时，大股东不会希望看到股价低于定增价。 股价&gt;强赎价：如果在到期前有牛市行情，大股东相当于在转股价减持了部分定增股份。而剩余的定增股份既可以维持控制人的持股比例、还能赚取更高的收益（二级市场减持、再发交换债）。 定增价&lt;股价&lt;强赎价：在2018年进入回售期时，如果股价低于回售触发价，发行人要么选择107回售还钱，则3年的融资利息约9%（1.08亿），增发股票获得的股息大概率超过4%（0.64亿），实际融资成本可能约0.4亿，那么届时只要以超过34.42元的价格卖出增发股份，发行人即可保本；要么发行人下修转股价避免回售，如果2020年到期还本付息（101元），则同上计算，股价只需要超过33元（股息收益大于交换债利息）。如果预期2018-2020年间有牛市行情触发强赎，则与前述“股价&gt;强赎价”的逻辑同理，但发行人的实际收益减少。 综上所述，未来两年后天士力股价跌破大股东增发价格的可能性很小。在回售期前如果股价在回售触发价以下，则可以博弈交换债的下修价值。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>套利</tag>
        <tag>策略</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[黄金交易市场比较]]></title>
    <url>%2F2016%2F03%2F17%2FGold_market_China.html</url>
    <content type="text"><![CDATA[黄金作为贵金属，由于其稳定的金属特性，在工业生产等领域广泛使用，具有商品属性；同时，由于全球的产量和储量有限，又常被用作金融储备、货币等金融用途。目前，中国主流的黄金交易市场有上海黄金交易所的黄金现货合约、上海期货交易所的期货合约，以及沪深交易所的黄金ETF，另外还有银行等机构推出的纸黄金业务。这篇文章主要总结各交易所的合约设计及交易规则。 国内黄金上海金交所2016年初，金交所上市的黄金现货合约品种共12种： 名称 黄金T+D 黄金T+N1 黄金T+N2 MINI黄金T+D 黄金100g 黄金50G 黄金995 黄金9995 黄金9999 国际版黄金100g 国际版黄金995 国际版黄金9999 品种 延期 延期 延期 延期 实物 实物 实物 实物 实物 实物 实物 实物 交易单位/手 1000g 100g 100g 100g 100g 50g 12.5kg 1000g 10g 100g 12.5kg 100g 保证金交易 是 是 是 是 否 否 否 否 否 否 否 否 尽管品种不少，但主要的交易量集中在延期合约黄金T+D（包括MINI）、现货合约黄金9999。 金交所的交易时间为9:00-11:30，13:30-15:30，20:00-02:30。 现货黄金在上海金交所交易现货实物黄金时，买方必须有全额资金，卖方必须由相应的实物，报价后资金货物冻结，成交后实时实物交割，钱货两讫。现货黄金由于资金占用量大，成交量小。迷你盘更适合散户，但成交不活跃。现货不能做空。 延期合约金交所的一大特色就是现货延期交收合约，T+D合约（trading+defer）。是以保证金支付的形式进行结算的交易（最低7%，平均15%左右）。交易者可以选择成交当日交割、也可以延期交割，同时引入延期补偿费机制。 $$延期费 = 持仓量当日结算价延期费率$$ 交货申报&gt;收货申报：多头持仓付给空头持仓交货申报&lt;收货申报，空头持仓付给多头持仓 T+D：延期费按自然日逐日收付，遇节假日按前一交易日确定的方向提前收付T+N1、T+N2：延期费定期收付，只在规定交易日的交割申报阶段发生延期费支付，其他交易日不发生收付。 T+D品种是上金所目前主要的成交品种。允许做空。 上期所上海期货交易所交易的黄金期货合约，简称沪金；市场上挂牌交易的合约有最近三个月份的合约以及最近13个月内的双月合约，实际交易量都集中在6月及12月的两个合约上。 交易品种 SHFE沪金 交易单位 1000g/手 报价单位 元/g 最小变动 0.05元/g 每日波动限制 上一交易日结算价的正负5% 交易时间 9:00-11:30，13:30-15:00，21:00-02:30 最低保证金 7% 交割方式 实物 最后交易日 合约交割月份的15日 交割的实物黄金品级为金含量不小于 99.95%的国产金锭以及经交易所认可的伦敦金银市场协会（LBMA）认定的合格供货商或精炼厂生产的标准金锭。实际交割过程中需要缴纳的费用较高，包括交割手续费、出入库、调运费、仓储费、增值税等。 沪深交易所股票黄金开采、生产的企业股票表现与黄金价格有一定正相关性，但还受股市、公司业务基本面、财务状况等多方面影响。 ETF随着2015年底至今的黄金价格反弹，国内市场黄金ETF规模大幅扩张。截至2016年中，在沪深交易所上市的黄金ETF有4个：华安518880，易方达159934，博时159937，国泰518800。其跟踪标的多为AU9999，与金价相关性极高。 名称 华安 国泰 博时 易方达 代码 518880 518800 159937 159934 规模/亿（2016-06） 45.66 4.32 9.04 9.62 管理费 % 0.6 0.6 0.6 0.6 申赎规模：3公斤（30万份额）的整数倍 交易规则： T日买入份额，T日可卖 T日买入份额，T+1日赎回实物申请，到账 T日买入份额， T日可赎回，现金到账T+2（券商效率决定） T实物申购，T日份额可卖/可赎 T日现金申购，T+1日份额到账 T实物赎回，T日实物可卖 银行“纸黄金”国内出现较早的个人可交易的黄金品种，属于凭证式交易，投资人并不持有黄金实物，与银行进行交易，买卖价格由银行根据国际金价波动实时提供，买卖价差较大，可24小时交易，只允许做多。 非标准化产品目前国内市场上还出现了不少与黄金价格挂钩的含权类理财产品，一般由银行、券商等场外发售的资管衍生品。交易的限制及收益更多样化，且可根据投资者需求定制方案。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>套利</tag>
        <tag>策略</tag>
        <tag>黄金</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习笔记：宏观经济]]></title>
    <url>%2F2016%2F02%2F24%2FMacro_economy_notes.html</url>
    <content type="text"><![CDATA[不论做的是量化交易还是基本面分析，宏观经济对金融市场的意义是至关重要的。尤其是在固收类、利率类资产的交易中，抛开宏观做交易是不可能的。 原文是光大证券徐高对宏观经济数据分析的介绍。 中国实体经济指标国内生产总值 GDP统计局定义：按市场价格计算的一个国家（或地区）所有常住单位在一定时期内生产的最终成果。国内生产总值有三种表现形态，对应三种GDP计算方法。 GDP统计方法 衡量方面 表现形态 定义 计算方法 大类子项 频率 生产法 产出 价值形态 所有常住单位在一定时期内生产的全部货物和服务价值与同期投入的全部非固定资产货物和服务价值的差额，即所有常住单位的增加值之和 总产品-中间投入 三大产业以及各细分行业 季度 支出法 需求 产品形态 所有常住单位再一定时期内创造并分配给常住单位和非常住单位的初次收入之和 最终消费+资本形成总额+出口-进口 消费、投资、净出口 对GDP增长拉动为季度，其余年度 收入法 收入 收入形态 所有常住单位在一定时期内最终使用的货物和服务价值与货物和服务净出口价格之和 劳动者报酬+生产税净额+固定资产折旧+企业盈余 劳动者报酬、生产税净额、企业盈余、固定资产折旧 年度 生产面生产法GDP从产出的角度衡量经济总量。按季度公布生产法GDP数据，公布指标包括GDP名义总量，实际增速以及分行业累计名义总量和实际增速。季度GDP公布行业包括三大产业，以及工业、建筑业、批发零售、交运、住宿餐饮、金融、房地产等部分子行业的累计名义总量和实际增速数据。 从生产角度看工业行业是我国经济主要行业，而房地产行业虽然在GDP中占比不高，但由于其为最终需求行业，决定上游产业链，包括建筑业以及部分工业行业的需求，所以房地产市场变化对我国经济依然至关重要。 工业增加值目前我国第二产业在经济中权重较高，同时第二产业自身增速波动较大，所以对短期经济增速的影响最显著。可以通过跟踪工业增加值等更高频的月度工业数据，来判断经济走势。 工业增加值是工业企业全部生产活动总成果扣除生产过程中消耗或转移的物质产品和劳务价值后的余额，对应工业行业的生产法GDP。需要注意，统计局公布的月度工业增加值覆盖范围为规模以上企业，并非全部企业。2007至2010年，规模以上工业企业为年主营业务收入500万以上企业，2011年开始，这一标准上调为2000万元。统计局结合经济普查数据和规模以上工业企业增加值估计全部工业行业增加值，即工业行业GDP，一般来看，规模以上工业行业增加值同比增速高于全部工业GDP增速，但趋势一致。由于工业在经济中的重要地位，工业增加值对短期经济波动具有显著的先导意义，这也是长期以来通过观察月度工业增加值数据判断经济走势的主要原因。 统计局现行公布的数据包括工业增加值同比、环比增长，分行业包括采矿业、制造业、电力、燃气及水的生产和供应业。另外还有按工业产品用途划分的数据，即出口交货值（工业企业由外贸部门收购的或交给出口代理商出口的用人民币结算的产品价值）。出口交货值与实际出口有很高的相关性。 采购经理人指数 PMI采购经理人指数是根据被调查者（采购经理人）对不同方面经济前景的看法，综合计算的扩散指数。采购经理人指数统计方法为通过询问样本企业采购经理人对生产、订单、库存、雇员、配送时间等看法，以上升、持平、下降分别赋予三类数值，再按各项目权重进行加总得到总体PMI。 反应预期的PMI是生产面重要的先导指标，本身是基于对未来看法综合的扩散指数，大于50显示经济处于扩张状态，小于50显示经济处于收缩状态。 中国物流与采购联合会与统计局从2005年开始共同发布中国制造业PMI数据（中采PMI），每月1日公布上月数据。中国PMI的另一来源是财新中国PMI（原名“汇丰中国PMI”），在下月初前一周公布当月PMI预览值，然后在下月1日左右公布当月PMI终值。与中采PMI相比，财新PMI调查样本更为偏向中小企业。 PMI分项指数各实体经济指标具有重要的先导意义。其中新订单指数反映需求面情况，是PMI子项中的领先指标，新出口订单是外需的先导指标，通过新订单与新出口订单指数之差可以估算国内订单指数变化情况。在库存指数方面，原材料库存指数反应企业主动调整库存意愿，上升显示对经济看法改善，指示意义比产成品库存指数更为重要，因为产成品库存指数反应被动调整库存意愿，上升反应对需求前景预期恶化导致库存上升。使用原材料库存与产成品库存指数差是更为有效的主动补库存先导指标。此指标往往与进口呈现较高的相关关系。另外需要关注的是原材料购进价格指数，该指数对PPI有显著的领先关系（图19），经济疲弱情况下购进价格指数也较低。总体来看，新订单与出口订单指数反映需求面，原材料库存与产成品库存指数反映厂商对生产的信心，而购进价格反映物价。另外，周期关系不明显的雇员指数，反映厂商用工意愿，是劳动力市场指标（图20）。 其他生产面指标月度行业指标包括发电量、钢产量、水泥产量、汽车产量等。发电量由于与工业增加值具有高度相关关系，同时具有如日度六大发电集团耗煤量，以及日度发电量等更为高频的数据，所以被用来在更高频率上观察经济运行。水泥由于保存期限短，可以剔除库存变化影响，一度用水泥产量来判断需求面发生的变化。而钢产量、汽车产量等则从不同行业观察经济运行。部分行业高频产能利用率数据也可以观察短期经济运行状况，如钢铁、平板玻璃、PTA等。 需求面支出法GDP从需求面观察经济运行的总量指标。支出法GDP及子项名义值数据按年公布，通过次年的《中国统计年鉴》发布，但并不公布支出法GDP实际同比增速数据。而支出法三大子项消费、投资和贸易顺差对GDP增长的贡献率按季度公布，同时公布各项贡献率乘以生产法GDP同比增速得到的对GDP增速的拉动数。 从支出法GDP的结构可以看出，国内经济对投资有很高的依赖性，消费增速相对稳定，对经济增速波动影响有限。 固定资产投资固定资产投资是统计局按月公布的投资面数据，相对按年度公布的GDP投资子项更为高频，其中1月和2月合并公布。固定资产投资内容包括城镇建设项目投资、农村非农户建设项目投资和国防、人防建设项目投资。覆盖范围包括计划总投资某一限额以上的建设项目投资和房地产开发投资，该限额2011年之前为50万元，2011年之后提高至500万元。受统计资料与统计能力限制，统计局公布固定资产投资月度累计名义值和月度累计同比数据，并未公布当月同比增速数据。统计局同时公布固定资产投资资金来源数据，这是分析固定资产投资获得资金情况的依据，对判断未来投资走势非常重要。 从行业分布看，固定资产投资主要包括制造业、基础设施建设和房地产三大行业。 制造业投资属于生产性投资，投资需求取决于下游行业需求变化。制造业投资波动相对较小，出口对制造业投资具有较为明显的拉动作用。 基础设施和房地产投资属于消费性投资，是最终需求行业，投资需求由自身需求决定。基础设施投资多由政府主导，投资增速也呈现出明显的逆周期性，政府对基建投资拥有很强的控制力，基础设施投资经常作为政府稳增长的工具。 房地产的资本属性使得以往货币扩张形成房地产市场泡沫，导致政府不断对房地产行业进行调控，包括对房地产投资的管控，房地产投资除受自身需求周期变动影响之外，很大程度上还受制于政策调控节奏。 注意：固定投资和GDP中的资本形成高度相关，但并不相同。 固定资产投资资金来源指标是固定资产投资的先行指标。主要分为以下几类： 国家预算内资金 国内贷款 债券 利用外资 外商直接投资 自筹资金 企事业单位自有资金 发行股票 其他资金 货物进出口海关发布的月度货物贸易系列数据是判断外贸走势的主要指标。其中出口增速主要体现外需的走势，进口则主要由国内需求决定。汇率变动同时影响进口与出口。我国对发达国家出口以最终消费品为主，而对新兴市场国家出口以中间加工品为主，新兴市场国家产生的最终需求有限。从贸易方式看，一般贸易主要由我国内需决定，而加工贸易由于需求在外，所以贸易量主要由外需决定。 注意：海关的进出口数据与GDP中的净出口也存在差异。 社会零售总额月度观察消费变化指标包括社会零售总额和消费者信心指数等。社会零售总额统计范围为企业（单位）通过交易售给个人、社会集团非生产、非经营用的食物商品金额，以及提供餐饮服务所取得的收入金额。 社会零售总额与GDP中居民消费并不相同，是居民消费的相近指标。2010年以来，社会零售额同比增速从上年末到下年初屡次出现较大的跌落，怀疑可能与统计误差调整有关。社会零售总额仅可以作为判断消费走势的参考。 消费者信心指数是消费的先导指标，在2011年之前与消费有较为一致的相关关系，但2011年之后波动大幅加剧，已不再具有先导意义。 收入面收入法GDP从收入面观察经济的总量指标，但实际是各类GDP指标中公布时间最为滞后，质量最差的。来源包括次年统计年鉴公布的分省收入法GDP（加总得到全国收入法GDP）。另一个来源是投入产出表，逢年末数字为0、2、5、7年份编制的投入产出表提供全国收入法GDP数据，但公布时间较为滞后，一般在两年以上。两个来源得到的全国收入法GDP相差很大。其中劳动者报酬和企业盈余是收入法GDP的主要组成部分。由于统计滞后、数据准确性等问题，对短期宏观意义不大。 工业企业利润规模以上工业企业是我国比较成熟的统计样本，在企业盈余层面工业企业利润数据提供了月度的跟踪指标。工业企业利润数据由统计局通过工业企业统计报表制度搜集，涵盖主营业务2000万以上的工业企业，按月公布国民经济分类两位数行业的经济效益指标，具体包括主营业务收入、利润总额、资产总额、负债总额、利润率等。由于工业企业利润数据对上市工业企业利润具有先导作用，所以工业企业利润与证券投资关系密切。 劳动力指标我国劳动市场数据质量较差，现有数据包括统计局按季发布的城镇单位就业人员数量及工资数据，以及人社保部按季发布的城市劳动力市场供求比例数据。城镇单位就业人员工资与就业数据较为滞后，一般在当季后三个月左右公布。人社保部发布的求人倍率数据是指职位空缺数与求职人数之比，反映劳动力市场整体供需状况，公布时间同样滞后一个季度左右。近年来该指标持续攀升，显示劳动力城镇劳动力市场供求关系持续趋紧。求人倍率指标并不全面，判断整体劳动力市场状况需要综合其他指标情况。 政府财政指标除劳动与资本之外，另一大收入获得方为政府，而财政收支数据是观测政府收支的主要依据。财政收支数据由财政部按月发布，数据质量好，其中财政盈余（赤字）的变化表现出财政政策立场，如果赤字扩大，则反映政府采取积极的财政政策，反之则是紧缩的政策。广义的财政应该包括政府基金收支，主要为土地出让金收支。土地出让收入对地方政府财力具有至关重要作用。 财政存款数据相比财政收支数据更精确的反映了财政状况。《财政总预算会计制度》规定“总预算会计核算以收付实现制为基础”，也就是说，财政部每月公布的收支数据即当期实际发生的财政收入和支出现金数额，这与“权责发生制”有所不同。而预算内财政收入以及政府基金收入等需要上交国库，形成财政存款，并采取收支两条线制度，所以财政盈余的变化应该与财政存款变动一致。然而由于个别事项可以按照权责发生制计入财政收支项目，包括中央向预算稳定调节基金调入资金，以及地方政府年终结转资金等。这些项目并未产生实际支出，但却以权责发生制计入当期财政支出，导致财政赤字和财政存款出现差异。因此，财政存款数据比财政收支数据更精确的反映了财政状况。另外，国债与地方债发行收入计入财政存款，但不影响当期财政赤字，这也会导致财政存款与财政赤字出现差异。 物价指标价格变动反应供求相对情况并形成调节达到平衡，不同资产间的相对价格调节促进各行业间的供需以及资源的配置。宏观经济关注总量指标，价格方面为反应总供给和总需求间相对变化的一般物价。 消费价格指数 CPICPI是反映一定时期内城乡居民所购买的生活消费品价格和服务项目价格变动趋势和程度，是衡量一般物价最为重要、最受市场关注的指标。CPI由统计局按月公布，同时公布一系列分项数据。CPI的篮子构成由统计局根据消费结构变化而调整分项权重，目前分为8大类，主要包括： 食品烟酒 衣着 居住 生活用品及服务 医疗保健 交通通讯 娱乐教育 其他用品 CPI作为衡量通胀和物价的指标对债券市场利率影响重大。我国CPI同比与利率走势高度正相关。新兴国家如中国的相关性更高，发达国家相对较低。 按照生产链传递理论，通胀可以分为： 成本推动型：中上游产品价格PPI率先上涨，通过生产链将成本压力向下游的流通环节转移，推动CPI上行。 需求拉动型：终端消费价格CPI率先上涨，拉动PPI上涨。 影响通胀的主要因素包括： 猪肉价格：历史来看春节前后达到高点 蔬菜价格：冬季寒潮、天气因素可能导致蔬菜价格上涨、或者供应充足 结构性商品，如地产房价：房价上涨本身在通胀因素中占比较高，同时房价快速上涨促进房地产开发等一系列经济加速。 大宗商品：对于中国这样的能源进口国家，大宗商品价格持续下跌，会造成输入性通缩压力。反之会形成通胀压力。 工业生产者出厂价格指数 PPIPPI是反映一定时期内全部工业产品出厂价格总水平的变动趋势和程度的相对数，包括工业企业售给本企业以外所有单位的各种产品和直接售给居民用于生活消费的产品。 按大类来分，可以分为： 生产资料价格（75%） 采掘工业 原材料工业 加工工业 生活资料价格（25%） 食品 衣着 一般日用品 耐用消费品 按历史规律，原油价格的企稳通常领先原油开采等PPI1个月。 CPI与PPI差不断扩大，对不同的企业利润变化不同： 中上游企业：PPI是收入的概念，PPI下降使企业利润下降 下游消费企业：PPI下降使生产成本下降，同时销售端价格整体保持不变（假设CPI稳定），企业利润可能有所改善。 M2中投证券： M2领先CPI 12-15个月 M2领先工业增加值增速3-6个月 经济增长的先行指标 PMI指数回升 发电量同比回升 货币供应量M1、M2回升 信贷增速回升 国内钢材市场量价回升 水泥价格 工业增加值同比增速回升 汽车销售回升]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[宏观经济数据分析基本概念]]></title>
    <url>%2F2016%2F02%2F22%2FMacro_Economy_Data_Basics_1.html</url>
    <content type="text"><![CDATA[总结在宏观数据分析中最基本的几个概念，当月vs累计、同比vs环比、季调。。。 当月值vs累计值一般来说，月度与季度指标是对当月或当季的经济活动的度量。但由于统计资料和技术的限制，获得当期数据较为困难，所以有了累计值这个指标。 中国使用的累计值一般是指”年初至今累计值”（year to date，ytd），是宏观数据从每年年初至当年各个月份的累计数值。通过累计值的方式发布数据的一大原因是该数据所涉及的经济过程持续时间较长、具体进程难以分割。 累计值与统计值是两个不同的统计体系，直接通过累计值计算当月值不准确。累计值与当月值的换算牵涉到如何将现有完成工作合理分配至各月、各季的问题。累计值是年初至当月的累加数，所以用累计值计算的增长率越到年末越接近全年平均增速。 同比vs环比环比和同比都是用来描述统计数据的变化情况的。 英语中好像没有单独的词来翻译，用Year on Year (YoY), Month on Month (MoM), Quater on Quater (QoQ)来表示。也可以用一些缩写，比如： 同比：vs. SPLY (Same Period Last Year) 环比：vs. LP (Last Period) 环比环比表示本次统计段与相连的上次统计段之间的比较。 比如2010年中国第一季度GDP为$G{10-1}$亿元，第二季度GDP为$G{10-2}$亿元，则第二季度GDP环比增长 $$\frac{G{10-2} - G{10-1}}{G_{10-1}} * 100\%$$ 多数情况下，用来比较相邻两个月之间的数据变化。 同比同比，即同期相比，表示某个特定统计段今年与去年之间的比较。 比如2009年中国第一季度GDP为$G{09-1}$亿元，则2010年第一季度的GDP同比增长为$$\frac{G{10-1} - G{09-1}}{G{09-1}} * 100\%$$ 异同季节性同比适用于观察某个指标在不同年度的变化，优势是可以去除大多数业务的季节因素：比如招聘，2月是淡季，3月是旺季，做3月的分析时用环比实际上体现出的是招聘市场的变化，而不是公司销售额的变化，用同比则可以看出今年的增长情况；劣势是灵活性较低，因为同比大多数以年为单位（否则就达不到去除季节因素的目标），不能反映出数据的短期大量变化。 环比适用于表示数据的连续变化趋势，优势是对于高速增长型业务，能非常好的体现出业务的增长趋势和事件的影响（典型如新开网站流量，UV第一周100，第二周300，第三周500，第四周做了个活动，2000，第五周1000，那么前三周网站的用户增长趋势很好，第四周数据有个突增，能看到活动带来的增长是很明显的）。劣势是光看数字难以排除季节性因素，且对于稳定波动型数据（例如部门人数，每月有进有出，一年内的走势不明确，但部门规模又逐年扩大）来说，趋势不明显，环比意义相对小。 滞后性同比数据虽然可以避免季节性因素的干扰，但同比指标普遍存在滞后性。 例子：假如2015年CPI正常波动，16年以后CPI指数绝对水平保持不变，CPI同比增幅在2016年将继续不为零，直到2017年1月才显示同比0增速。而环比数据则可以在2016年初就体现出0增长的特点。 季节性调整季节性因素在宏观数据中是非常普遍的，所以在观察判断短期经济走势时，用季节性调整的方法消除季节性因素很有必要。 季节性调整目的在于从实际变量中剔除由于季节性周期原因而导致的偏高和偏低。变量一般被分解为趋势项、季节项和随机扰动项，季节调整即将季节项剔除的过程。而分解方式主要包括加法与乘法两种，加法分解即将变量分解为趋势项、季节项和随机扰动项之和，而乘法季调则为三者之积。两类分解方式对应加法季调和乘法季调两种方法。季调方法选择一般依据指标性质而定，以指数级数增长的指标使用乘法季调，例如GDP，而绝对水平较为平稳的使用加法季调，例如每月的降雨天数。]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
        <tag>统计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中央银行：货币供应量]]></title>
    <url>%2F2016%2F02%2F16%2FMoney_supply.html</url>
    <content type="text"><![CDATA[在经济学上，货币主要有五大功能，分别是价值尺度、流通手段、支付手段、储藏手段和世界货币。货币可以衡量商品的价值、可以充当商品流通的媒介、可以用于商品交易的支付、可以当做财富的储藏手段、部分强势货币可以用于国际商品的交换等。 其中最主要的功能就是衡量商品的价值。人类经济本质是商品经济，伴随着商品的交换也就产生了货币，最初大家都选择黄金或者白银当做货币。但进入20世纪以后，由于科技的大幅进步，商品生产越来越多，而黄金数量有限不够用了，所以开始进入纸币时代。 概述货币供应量，是指一国在某一时期内为社会经济运转服务的货币存量，它由包括中央银行在内的金融机构供应的存款货币和现金货币两部分构成。 世界各国中央银行货币估计口径不完全一致，但划分的基础依据是一致的，即流动性大小。所谓流动性，是指一种资产随时可以变为现金或商品，而对持款人又不带来任何损失，货币的流动性程度不同，在流通中的周转次数就不同，形成的货币购买力及其对整个社会经济活动的影响也不一样。 一般说来，中央银行发行的钞票具有极强的流动性或货币性，随时都可以直接作为流通手段和支付手段进入流通过程，从而影响市场供求关系的变化。商业银行的活期存款，由于可以随时支取、随时签发支票而进入流通，因此其流动性也很强，也是影响市场供求变化的重要因素。有些资产，如定期存款、储蓄存款等，虽然也是购买力的组成部分，但必须转换为现金，或活期存款，或提前支取才能进入市场购买商品，因此其流动性相对较差，它们对市场的影响不如现金和活期存款来得迅速。 中国货币流通机制货币供应可以简单的划分为三个部门两个层次。三个部门分别是人民银行、商业银行以及实体经济。人民银行是货币的最终发行者和调控者，而发放和调控对象为商业银行，人民银行与商业银行之间构成货币供应的第一层次。过去由于经常项目持续大额顺差，人民银行通过外汇占款向商业银行提供货币。随着外部顺差收窄，人民银行更多的借助公开市场操作以及SLF、SLO、PSL等货币工具投放流动性，未来降准也可能成为流动性投放方式之一。 商业银行基于人民银行提供的基础货币，向实体经济供应货币，而实体经济利用货币进行交易，将结余回流金融体系，完成货币循环。商业银行通过银行贷款、结汇、购买债券等方式向实体经济提供流动性，实体经济再以存款的形势将货币回流金融体系，通过不断的循环形成货币创造，实现货币乘数扩张，这是货币供应的第二层次。 由于货币创造的多层次性，对货币总量的度量也存在多个层面。在央行与商业银行层面，货币总量的度量主要通过超额准备金和储备货币。如果超额准备金下降，则意味着银行间市场资金面可能趋紧，反之，则银行间市场资金面宽裕。这个层面的流动性主要来自央行的外汇占款发放、公开市场货币投放以及存款准备金率调整等。银行间市场利率状况反映央行与商业银行层面的资金价格状况，其中以回购利率最为重要，此外商业银行超储率等也具有参考作用。商业银行层面的货币量反映商业银行可以运用的资金总量。 而在商业银行与实体经济层面，货币总量的度量从实体部门资产和金融机构负债层面进行。其中常用指标包括M0、M1以及M2。实体经济层面的流动性主要来自商业银行贷款、商业银行结汇以及购买非商业银行发行债券等。在实体经济层面，资金价格较难观测。一方面，实体经济利率依据不同期限、不同风险主体形成利率光谱，难以用单一利率衡量，另一方面，资源配置有所扭曲，国有企业以及地方融资平台等利率不敏感部门过度占有资源，推高资金价格。即便如此，我们依然可以通过央行按季度公布的贷款平均利率、以及其他来源的票据利率、民间融资利率、信托收益率等不准确的间接观测实体经济层面资金价格状况。 理想的市场环境下，商业银行层面流动性与实体经济层面流动性具有通畅的传导作用。这也是危机前发达国家通过调节银行间市场利率影响实体经济融资成本的依据。然而危机后普遍出现金融系统传导不畅问题，即金融系统信贷创造能力受阻。在这种情况下，宽松的银行间流动性未必能传导至实体经济，降低实体经济融资利率。基于调节银行间市场资金供求的价格型工具往往成效不足，直接调节对实体经济的信贷供给成为更为有效的办法。 货币层次的划分按流动性标准划分货币供应量的层次，对中央银行而言，有两个方面的意义： 有利于为中央银行的宏观金融决策提供一个清晰的货币供应结构图，有助于掌握不同的货币运行态势，并据此采取不同的措施进行调控； 有助于中央银行分析整个经济的动态变化。每一层次的货币供应量，都有特定的经济活动和商品运动与之对应。通过对各层次货币供应量变动的观察，中央银行可以掌握经济活动的状况，并分析预测其变化的趋势。 基础货币银行间市场流动性总量由“储备货币”衡量，又称基础货币。 $$储备货币=现金+法定存款准备金+超额存款准备金$$ 但其中可供商业银行自由动用的流动性仅为超额存款准备金。新世纪初至2012年，储备货币供应主要由外汇占款推动，在贸易顺差与新增外汇占款较高时期，央行需要通过发行央票与提高存款准备金进行对冲。而对央行来说，存款准备金成本远低于央票，逐渐的存款准备金成为了央行负债端储备货币主体。2012年以后，随着外部失衡收窄和外汇占款下降，储备货币增速显著放缓。而之前为了回收流动性而提高的存款准备金率将来需要逐步调降，以实现基础货币投放。 货币总量实体经济层面货币总量度量主要通过对实体经济部门不同层次资产和商业银行不同层次负债进行。目前我国主要使用的货币量指标包括M0、M1（狭义货币）与M2（广义货币）。 我国从1994 年三季度起由中国人民银行按季向社会公布货币供应量统计监测指标。从2003年下半年起，在人民银行官网公布的月度金融统计数据报告中公布。 根据1994年10月《中国人民银行货币供应量统计和公布暂行办法》，对货币供应量指标的层次划分有： $$\begin{aligned}M0 &amp;= 流通中的现金\M1 &amp;= M0+企业活期存款+机关团体部队存款+农村存款+信用卡类存款（个人持有）\M2 &amp;= M1+城乡居居储蓄存款+企业存款中具有定期性质的存款+外币存款+信托类存款\M3 &amp;= M2+金融债券+商业票据+大额可转让存单等\end{aligned}$$ 其中，狭义货币M1未包含居民活期，这与国外普遍情况不同。广义货币M2是使用最为广泛的货币供应指标。M3出于金融创新不断出现的现状考虑而设，目前暂不编制这一层次货币供应量，官方也不公布此数据。 此后中国人民银行对M2进行了三次调整： 2001年7月起，将证券公司客户保证金计入广义货币供应量，含在其他存款项内。 2002年3月起，将中国的外资银行、合资银行、外国银行分行、外资财务公司及外资企业集团财务公司有关的人民币存款业务，分别计入不同层次的货币供应量。 2011年10月起，将住房公积金中心存款和非存款类金融机构在存款金融机构的存款纳入广义货币供应量的统计范畴。 实际统计数据发布中，将M1、M2定义为： $$M1（货币） = M0（流通中现金） + 单位活期存款M2（货币与准货币） = M1 + 单位定期存款 + 个人存款 + 其他存款$$ 其中，其他存款包括证券公司客户保证金（90%），信托存款、应解汇款及临时存款、保证金、财政预算外存款、租赁保证金、非存款类金融机构在存款类金融机构的存款及住房公积金存款等。 层次的解读M2与M1的差额即准货币，M1与M2的增速差曾被用来判断实体经济强弱，依据是如果实体经济活动变强，企业活期存款上升会推动M1增速超出M2增速。然而近年M1增速与M2增速差与实体经济指标相关性显著下降。 M2作为商业银行的负债端指标，在资产端主要来对应人民币贷款和银行结汇。近年随着同业存款的快速发展，M2新增量持续高于新增贷款与外汇占款，主要体现在其他存款性金融机构中计入广义货币的对非银行金融企业负债项。同时由于近年影子银行的发展，M2对实体流动性衡量的准确性有所下降，与实体经济指标相关性减弱。从M2存量看，我国货币总量已经处于相当高的水平，M2/GDP已经接近200%。其中次贷危机后的天量信贷是货币存量大幅走高的主要因素。因此，未来的货币政策应更多的转向盘活存量，而非依靠增量。 M1反映经济中的现实购买力；M2还反映了潜在的购买力。如果M1增速较快，则消费和终端市场活跃；如果M2增速较快，则投资和中间市场活跃。如果M2过高、M1过低，表明投资过热、需求不旺，有危机风险；如果M1过高、M2过低，表明需求强劲、投资不足，有涨价风险。 社会融资总量随着表外业务的发展，传统的货币度量指标已经越来越难以衡量实体经济流动性状况。理财产品、信托、债券等的金融产品规模的迅速扩大提出拓展货币度量范围的而要求。央行在2011编制并公布了2002年以来的月度社会融资总量指标。社会融资总量主要度量非金融企业获得的信用总额，包括新增人民币贷款、外币贷款、委托贷款、信托贷款、未承兑汇票、企业债券、股票发行以及其他项。央行月度公布的社会融资总量为流量指标，在2015年2月央行公布了社会融资总量存量。结合月度净增量指标，可以计算得到2002年以来社会融资存量指标。 2002年以来随着影子银行的发展，贷款在社会融资中占比持续下降，2013年最低时降至51.3%。委托贷款、信托贷款等表外业务融资对象主要是信贷受限的房地产、基础设施建设以及部分产能过剩制造业。从预测角度看，社会融资总额对短期经济指标的先导关系显著优于信贷以及货币供应量。 货币超发的后果产生泡沫如果货币超发，而经济又没能同步增长，那么一定会体现为价格的上涨，体现为各种泡沫。 物价上涨：70年代美国滞胀，10年内货币总量增加2.5倍，经济总量增加40%，物价也大致翻了一倍。 资产价格上涨：委内瑞拉2012-2015年股市涨了近150倍；日本80年代的泡沫经济。 历史上，所有的货币崩盘都与货币超发有关。 委内瑞拉：广义货币M3在14年初只有1万亿玻利瓦尔，而到15年末已经超过4万亿玻利瓦尔，过去两年翻了4倍。而在1976年委内瑞拉货币总量只有4000万玻利瓦尔，过去40年其货币供应量增加了10万倍。这也难怪其政府会在2008年发行新货币，强行规定1新玻利瓦尔等于1000旧玻利瓦尔，因为货币实在是印得太多了。 津巴布韦：津巴布韦的货币都是以亿甚至万亿来计价，看似大家都是亿万富豪，其实都是一文不值，因为在2009年以后，津巴布韦宣布所有货币全部作废，不再发行自己的货币，而以美元等作为法定货币。 一战后的德国：由于一战战败，德国需要支付大幅战争赔款，但是税收收入又不够，只得开动了印钞机，1919年马克发行量是500亿，到1921年上升到1220亿，1922年开始失控，当年货币发行量达到12950亿，而1923年高达496585000万亿，最终德国发行了新马克，以1新马克等于4.2万亿旧马克的比率回收了已经崩溃的旧货币，无数德国家庭数代累计的财富被洗劫一空。 在07年以前，中国过去30年的货币增速大约是每年16%，而同期GDP实际增速大约每年10%，算上物价以后的GDP名义增速大约16%，与货币增速基本相当，所以货币增速如实地反映了经济进步和物价上涨，在资本市场上并没有显著的泡沫出现。但是从08年开始，中国的货币增速依然维持在每年16%左右，而同期GDP实际增速下降到8%，GDP名义增速也只有11%左右，很显然货币增速明显超过了经济和物价上涨的需要，这个时候其实就产生了资产泡沫的温床。 货币泡沫带来贬值压力货币供应量M2来衡量，07年时美国M2是7.3万亿美金，中国是5.5万亿美金，当时美元兑人民币汇率是7.4，而目前美国的M2是12万亿美金，而中国的M2已经达到21万亿美金，而目前美元兑人民币汇率是6.6。 预期更重要货币政策对债市的影响主要是在预期形成之时。 2013年6月，FOMC会议上伯南克一改此前谨慎态度，明确表示将在今年开始收紧每月850亿美元的购债计划，随后美联储在2013年12月首次削减购债规模至750亿美元。而美国10年期国债收益率也达到高点。2015年12月美国正式宣布加息前同理。 格林斯潘难题解释“格林斯潘难题”有两条思路，一是从开放经济的角度来看，美国加息对应的是美国经济相对走强，新兴市场相对走弱，导致大量资金从新兴市场流入美元资产，其中收益稳健且流动性极强的美国长债备受追捧。因此全球热钱流动钝化了货币政策对美国长债收益率的影响；二是用长端利率与短端利率的期限利差隐含着对长期潜在经济增长前景的预期，而美国是一个服务业为主的国家，过去 30 年里，特别是在最近的 10 年里， 美国的潜在生产率增长十分缓慢， 且趋势性向下。更有甚者，美国前财长萨默斯认为，全球经济均处于“长期性停滞”，资本流动方向不再是更多地流向新兴市场，而是往发达国家流入，故而对长端利率构成了进一步的压制。]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
        <tag>货币</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[债券收益率影响因素：一级市场行情]]></title>
    <url>%2F2016%2F01%2F28%2FBond_primary_market.html</url>
    <content type="text"><![CDATA[影响债券市场收益率的主要因素有3个：基本面、资金面和政策面。一级市场的发行情况可以反应市场短期资金面的供给和对国家政策的理解，对未来短期内利率走势有较强的指导性。 基本概念债券发行市场主要由发行者、认购者和委托承销机构组成。只要具备发行资格，不管是国家、政府机构和金融机构，还是公司、企业和其他法人，都可以通过发行债券来借钱。认购者主要有社会公众团体、企事业法人、证券经营机构、非盈利性机构、外国企事业机构和家庭或个人。委托承销机构就是代发行人办理债券发行和销售业务的中介人，主要有投资银行、证券公司、商业银行和信托投资公司等等。债券的发行方式有公募发行、私募发行和承购包销三种。不管是什么方式在发行市场上认购国债都需要缴纳手续费。 国债发行按是否有金融中介机构参与出售的标准来看，有直接发行与间接发行之分，其中间接发行又包括代销、承购包销、招标发行和拍卖发行四种方式。 直接发行，一般指作为发行体的财政部直接将国债券定向发行给特定的机构投资者，也称定向私募发行，采取这种推销方式发行的国债数额一般不太大。而作为国家财政部每次国债发行额较大，如美国每星期仅中长期国债就发行100亿美元，我国每次发行的国债至少也达上百亿元人民币，仅靠发行主体直接推销巨额国债有一定难度，因此使用该种发行方式较为少见。 代销发行，指由国债发行体委托代销者代为向社会出售债券，可以充分利用代销者的网点，但因代销者只是按预定的发行条件，于约定日期内代为推销，代销期终止，若有未销出余额，全部退给发行主体，代销者不承担任何风险与责任，因此，代销方式也有不如人意的地方： 不能保证按当时的供求情况形成合理的发行条件； 推销效率难尽人意； 发行期较长，因为有预约推销期的限制。所以，代销发行仅适用于证券市场不发达、金融市场秩序不良、机构投资者缺乏承销条件和积极性的情况。 承购包销发行方式，指大宗机构投资者组成承购包销团，按一定条件向财政部承购包销国债，并由其负责在市场上转售，任何未能售出的余额均由承销者包购。这种发行方式的特征是： 承购包销的初衷是要求承销者向社会再出售，发行条件的确定，由作为发行体的财政部与承销团达成协议，一切承购手续完成后，国债方能与投资者见面，因而承销者是作为发行主体与投资者间的媒介而存在的； 承购包销是用经济手段发行国债的标志，并可用招标方式决定发行条件，是国债发行转向市场化的一种形式。 拍卖发行方式，指在拍卖市场上，按照例行的经常性的拍卖方式和程序，由发行主体主持，公开向投资者拍卖国债，完全由市场决定国债发行价格与利率。国债的拍卖发行实际是在公开招标发行基础上更加市场化的做法，是国债发行市场高度发展的标志。由于该种发行方式更加科学合理、高效，所以目前西方发达国家的国债发行多采用这种形式。 公开招标发行方式，指作为国债发行体的财政部直接向大宗机构投资者招标，投资者中标认购后，没有再向社会销售的义务，因而中标者即为国债认购者，当然中标者也可以按一定价格向社会再行出售。相对承购包销发行方式，公开招标发行不仅实现了发行者与投资者的直接见面，减少了中间环节，而且使竞争和其他市场机制通过投资者对发行条件的自主选择投标而得以充分体现，有利于形成公平合理的发行条件，也有利于缩短发行期限，提高市场效率，降低发行体的发行成本，是国债发行方式市场化的进一步加深。 目前，我国债券定价方式主要有两种，公开招标和簿记建档。相对而言，公开招标的方式市场化程度更高，比较适合认购者众多、信用等级搞、单次发行规模较大的国债、政策性银行债、大型企业发行的企业债等券种；簿记建档则更适合信用等级相对较低、发行量小、发行难度大的短期融资券、中期票据等。 无疑，中标利率等概念是公开招标这种定价方式中的术语。公开招标，又可以分为价格招标`和数量招标。 价格招标，按照中标价格的形成机制不同，又可以分为荷兰式招标、美国式招标和混合招标。其中，荷兰式招标又称统一价位中标或单一价位中标。在竞标结束后，发行系统将各承销商有效投标价位按照一定顺序进行排序，并将投标数额累加，直至满足预定发行额为止。此时的价位便是本次公开招标的中标价位，中标的承销商都以此价格或利率中标。该价格又称为中标价格或中标利率。此时实际投标量与计划发行量之比，即是全场倍数。边际倍数主要出现在美国式招标和混合式招标中。美国式中标又称多价位中标。在竞标结束后，发行系统将各承销商的有效投标价位按照一定顺序进行排列，直至募满预定发行额为止。在此价位以内的所有有效投标均以各承销商的各自出价中标。其中，所有中标价位按照中标量进行加权平均后的价格即是本期债券的票面价格或票面利率。中标价位中，最高的利率（或最低价格所对应的利率）即是边际利率。在边际利率上的投标量与中标量之比，即是边际倍数。 举个例子，比如计划发行量为200亿的债券，投标量为400亿，则全场倍数为2。在边际利率上，投标量为30亿，但是募满200亿只需要10亿，那么边际利率上的中标量就为10亿，这时的边际倍率就是3了。 全场倍数越大，说明大家的投资意愿越强，对该债券的认可度越高。边际倍数越大，说明认购者对边际利率的看法越一致。另外，边际利率与票面利率的利差则反映了市场对该债券未来的走势。利差较大，反映大家对该债券的走势分歧较大；利差越小，则市场的看法越趋于一致。]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>债券</tag>
        <tag>宏观</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[央行货币政策工具]]></title>
    <url>%2F2016%2F01%2F20%2FGov_monetory_policies_explain.html</url>
    <content type="text"><![CDATA[中央银行指定货币政策时需要考虑多重因素以及选取其中间目标。对我国目前来说，中国人民银行的政策目标为价格稳定、促进经济增长、促进就业、发展金融市场、保持国际收益大体平衡、金融改革和开放。 基于多个最终目标，央行设置的中间目标既包括了数量型目标（M2与社会融资总额），也包含了价格型目标（如利率）。换句话说，目前我国实行数量型调控和价格型调控相结合的宏观调控模式。明确了货币政策的目标后，央行需采用相关的货币政策工具以使宏观经济变量朝着合意的方向变动。货币政策工具就是央行的“工具箱”。 概述对于发达经济体，货币政策工具主要包括法定存款准备金率、公开市场操作（Open Market Operation, OMO）和再贴现三大类。而在我国，传统上最重要的三类货币政策工具为基准利率、法定存款准备金率以及公开市场操作。事实上，在1998年商业银行贷款额度限制被废除以来的18年里，央行在绝大部分时间里是以使用上述工具为主，直到2013年以来，中国人民银行先后推出了4种短期流动性调节工具并频繁使用，包括（Short-term Liquidity Operations, SLO）、常备借贷便利（StandingLending Facility, SLF，民间昵称“酸辣粉”）、中期借贷便利（Medium-term Lending Facility，MLF，民间昵称“麻辣粉”），以及抵押补充贷款（Pledged Supplementary Lending, PSL）。4种工具被创设极大丰富了中国央行的“工具箱”，也使得我国的货币政策和欧美的货币政策变得更加相似。 我国主要货币政策工具首先是传统的三大工具：基准利率、法定存款准备金和公开市场操作。2012年以前，中国央行主要盯住经济增长、通胀和就业等经济指标，所使用工具多为数量型工具，主要依靠改变基准利率和法定存款准备金率，并配合公开市场进行调节，聚焦于提供流动性及对冲双顺差带来的多余流动性。这样的数量调节长期以来非常有效。 2013年，由于商业银行大量配置非标资产，同时央行通过减少流动性投放、发行定向央票等方式收紧流动性，使得在当年经济不强、M2较为稳定、通胀不强的基础上，“钱荒”发生，货币市场利率和债券收益率显著上升。之后经济逐步进入去杠杆周期，但政府放弃了过去着重刺激经济的做法，更着重调结构。货币政策大规模“放水”开始滞后于经济数据（当经济下滑后才加大力度），并从倚重传统三大工具转向倚重定向工具（如SLF、MLF、PSL）或短期工具（如SLO）。比起传统的“降准降息”及期限相对较长的回购，新工具可更加精准地实现量价调控，将方便央行在利率市场化的环境中实现定向宽松或紧缩。中国的货币政策正在朝价格调控转型。 基准利率基准利率工具即对商业银行存贷款利率进行普遍性或定向（针对特定机构）调整，属于价格型工具，但最终影响的是货币数量。随着我国的利率市场化改革逐渐深化，2013年6月20日，全面放开贷款利率；2015年10月23日，取消存款利率浮动上限，基准利率的改变对银行更多是释放价格信号。不过考虑到商业银行普遍采用基准利率上浮/下浮的形式对存贷款报价，以及央行可能采用窗口指导的方式对报价异常的银行进行审慎监管，在“后利率市场化时代”，基准利率仍然将是央行手中强有力的价格型工具。 法定存款准备金率 法定存款准备金率属于数量型工具，用于吸收或释放商业银行在央行的存款准备金。同基准利率工具相似，法定存款准备金率也可以是普遍性或定向实施。 公开市场业务 对于公开市场操作，目前回购（包括SLO）是央行最主要实施的货币政策工具，因为回购数量及价格均为影响货币市场流动性的关键要素，该工具兼具数量型和价格型特征。从2016年1月29日起，央行将公开市场操作的频率从过去的周二、周四扩展至全部工作日，可见央行对该工具的重视。公开市场操作使央行控制货币市场预期的主要工具之一。过去每周二、周四，央行一般都会进行公开市场操作。2016年春节前，央行将OMO操作改为每日进行。目前最主要的是回购、现券交易和发行央票。 回购操作又分成两种，正回购和逆回购。正回购即中国人民银行向一级交易商卖出有价证券，并约定在未来特定日期买回有价证券的交易行为。正回购为央行从市场收回流动性的操作，正回购到期则为央行向市场投放流动性的操作。而逆回购即中国人民银行向一级交易商购买有价证券，并约定在未来特定日期将有价证券卖给一级交易商的交易行为，逆回购为央行向市场上投放流动性的操作，逆回购到期则为央行从市场收回流动性的操作。逆回购就是央行主动借钱给银行；正回购则是央行把钱从银行那里抽走。 目前公开市场操作以逆回购为主，期限主要是7天，遇到春节等节假日时也会使用14、28天期。 新型货币政策工具短期流动性调节工具 SLO公开市场短期流动性调节工具(Short-term Liquidity Operations，SLO)，作为公开市场操作的补充，以7天期以内超短期回购为主，用于资金紧张时主动投放流动性，以平抑特殊时期资金市场的短期波动。一般采用市场化利率招标方式开展操作。 和SLF相比，SLO仍然属于传统宏观调节，采用“全面漫灌”的流动性注入方式，非“一对一”。 其操作的时间窗口更具灵活性，弥补传统流动性干预以每周为周期，其操作方向和力度难以及时转换的缺陷。SLO旨在提高公开市场操作的灵活性和主动性，克服传统公开市场操作无法有效应对流动性短期波动的问题。 常用于年末、月末、节假日等时点，以平滑短期市场利率波动。操作结果一般滞后一个月公布。 2013年12月底针对年末货币市场利率大幅波动，央行连续三天通过SLO累计向市场注入超过3000亿元流动性，同时公告称银行体系超额备付已逾1.5万亿元，为历史同期相对较高水平。 在2016年初公开市场操作改为每日进行后，SLO的作用已不明显。 常备借贷便利 SLF2013年1月，人民银行创设“常备借贷便利”(Standing Lending Facility, SLF)试点，对金融机构开展操作，提供流动性支持。 主要满足金融机构期限较长的大额流动性需求，期限为1-3个月。 相比央行其他投放流动性的工具，SLF的一大特点就是由金融机构主动发起，换句话说，银行等存款类金融机构如果缺钱，就可以直接与央行进行一对一的交易，针对性强。地方法人银行向人民银行试点的中心支行提出申请，全国性股份制银行及五大行则需要向人民银行总行提交申请。人行再对自觉执行人民银行宏观审慎政策的金融机构提供流动性支持；由于SLF是为平抑短期利率水平，所以审批流程较快，期限较短的可以做到当天放款。 需要银行提供高质量的抵押品主要有国债、中央银行票据、国家开发银行及政策性金融债、高等级公司信用债，央行会有一定抵押率控制风险。 旨在创造短期利率走廊，防止利率巨幅波动。利率水平根据货币政策调控、引导市场利率等需要综合确定。传统公开市场操作，是央行市场化手段向一级交易商(primary dealer)注入流动性，属于宏观调节；而SLF指定交易对象，旨在解决特定金融机构的流动性需求，属于微观干预；且SLF潜在的交易对手范围大幅度扩大到试点地区所有金融机构和所有全国性金融机构。 13年下半年，央行操作以SLF为主，资金面压力是主要背景，也有探索利率走廊顶部的意思。但14年上半年，SLF利率过高限制了银行对其的使用意愿，SLF利率与资金价格之差在200bp以上。 中期借贷便利 MLF2014年9月，央行创设中期借贷便利工具(Mid-term Lending Facility, MLF)，期限多为3-6个月，也可能1年期，临近到期可能会重新约定利率并展期。 由银行主动发起的工具，允许银行以国债、央行票据、政策性金融债、高等级信用债等优质债券和优质信贷资产作为合格质押品，获取借贷便利工具的投放。银行首先对其流动性状况进行预判，再应对央行的MLF讯量，最终确定MLF的新作或回笼规模。 MLF是央行提供中期基础货币的货币政策工具，具有政策利率引导、引导商业银行向特定领域发放贷款的作用，通过调节金融机构中期融资成本对金融机构资产负债表与市场预期产生影响。 2014年9月MLF第一次被使用，主要针对5大国有银行，初始规模5000亿元，利率3.5%。10月央行再次使用，投放对象改为股份制银行、较大规模的城商行和农村商业银行等，规模2695亿元，利率3.5%。 抵押补充贷款 PSL2014年4月，央行创设PSL（Pledged Supplementary Lending），支持国开行“棚改”重点项目，旨在为开发性金融机构提供长期稳定、成本适当的资金来源，支持国民经济重点领域、社会事业发展提供期限较长的大额资金。作为一种新的储备政策工具主要是通过商业银行抵押资产从央行获得融资的利率，引导中期利率（中期政策利率）。 与再贷款相似，再贷款是一种无抵押的信用贷款，因为没有抵押物，风险容易被放大（市场往往将再贷款赋予金融稳定含义，即一家机构除了问题才会被投放再贷款）。 以实现央行在短期利率控制之外，对中长期利率水平的引导和掌控。 PSL引导中期政策利率水平，很大程度上是为了直接为商业银行提供一部分低成本资金，引导投入到实体领域。相比于SLF、MLF更容易控制资金流向。 期限一般3-5年，对象主要是政策性银行（国开行、进出口银行），稳增长、防风险含义明确。 2014年7月，国家开发银行从央行获得3年期的1万亿元抵押补充贷款（PSL），并将用之支持棚户区改造、保障房安居工程及三农和小微经济发展。央行选择国开行这一载体，无疑具有上述两个导向的意味。一方面，国开行是国内银行间市场最主要的资金拆出方，对市场资金利率走势具有举足轻重作用；另一方面，在棚改、基建、三农、小微企业甚至航空运输与石油领域建设的支持上，国开行体量非常巨大。国开行官方网站数据显示，2013年国开行实现了26万亿元的银行间市场人民币资金交易，并为上海银行间同业拆放利率（Shibor）报价基准建设提供了流动性支撑。同时，2013年国开行在北京、内蒙、甘肃、吉林等地重大棚改项目的新增贷款达1628亿元；在全国安居保障房工程中新增贷款超千亿元，同业占比为60%以上。据公开资料，截至2013年底，国开行为全国各地公共基础设施及新农村建设贷款的余额，分别达13248亿元和7258亿元。]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记]]></title>
    <url>%2F2016%2F01%2F15%2FPython_notes.html</url>
    <content type="text"><![CDATA[注意事项 Python中区分大小写！ Python用空格控制代码结构，不像C++等用括号。 “=”对象引用与其他语言有不同！ 函数Classprivate在变量前加__，外部不能直接访问。类似C++中的private/protected 有些时候，看到以一个下划线开头的实例变量名，比如_name，这样的实例变量外部是可以访问的，但是，按照约定俗成的规定，当你看到这样的变量时，意思就是，“虽然我可以被访问，但是，请把我视为私有变量，不要随意访问”。 获取对象信息 isinstance() dir()查看对象的所有属性和方法 getattr()，setattr()，hasattr()可以用来操作对象的状态。 动态绑定支持在程序中定义methods，绑定指定实例或者class，相比其他语言只能在class中定义更加灵活 定制类init(self,…)创建class实例时自动调用的初始化定义。 slots在class定义中定义的变量，用来限制实例中能添加的属性。 在继承的子类实例中不受影响，需要另外定义。 str12345678&gt;&gt;&gt; class Student(object): def __init__(self, name): self.name = name def __str__(self): return 'Student object (name: %s)' % self.name&gt;&gt;&gt; print(Student('Michael'))Student object (name: Michael) repr()调试中使用的，功能与str类似。 123456class Student(object): def __init__(self, name): self.name = name def __str__(self): return 'Student object (name=%s)' % self.name __repr__ = __str__ iter()如果一个类想被用于循环，就需要用到iter，不停调用next()，直到返回StopIteration()。 123456789101112class Fib(object): def __init__(self): self.a, self.b = 0, 1 # 初始化两个计数器a，b def __iter__(self): return self # 实例本身就是迭代对象，故返回自己 def __next__(self): self.a, self.b = self.b, self.a + self.b # 计算下一个值 if self.a &gt; 100000: # 退出循环的条件 raise StopIteration(); return self.a # 返回下一个值 其他 getitem() getattr() call() @property通过@property把方法变成属性调用，通过setter和getter定义限制。如果只定义getter，不定义setter，则是一个只读属性。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[汇率的影响]]></title>
    <url>%2F2016%2F01%2F15%2FRMB_exchange_rate.html</url>
    <content type="text"><![CDATA[2014年起，中国人民币汇率从过去持续升值转变成贬值压力积聚，2015年8月11日汇改后人民币兑美元汇率大幅下跌，2016年第一周再次大跌，对全球金融市场都有很大冲击。 不仅是中国，很多发达国家和发展中国家的货币兑美元都出现了大幅度的贬值。欧元、日元、英镑兑美元分别贬值21%，15%和8.5%，而俄罗斯卢布、巴西雷亚尔、印度贬值幅度达到53%，39%和7%。 贬值原因货币供求对于发达国家而言，如欧盟、日本、英国，多实行浮动汇率制，央行的货币政策主要关注通胀和就业。 2008年金融危机之后，各国都将基准利率降至0左右，并陆续实施了QE的宽松政策，向市场投放了大量基础货币。其中美国经济从14年起率先复苏，而其他几国依然处于放水阶段，所以货币供求的不平衡导致了它们兑美元的贬值。 央行干预央行干预本身也是对货币供求关系的变化。为了保证经济稳定，避免爆发国际收支危机，以及可能实行的固定汇率制度，央行都会用外汇储备干预汇率走势。 经常项目、资本与金融项目、外汇储备往往是相互作用的。以俄罗斯来说，由于近几年能源类大宗商品价格大幅走低，俄罗斯的经常项目转差，外汇储备减少，投资者对俄罗斯的国际支付、偿还外债的信心下降，导致恐慌性逃逸，资本和金融项目也转差。而俄罗斯央行的干预汇率又导致外汇储备进一步减少。 贬值效果改善贸易状况贬值有助于改善出口，抑制进口，缓解贸易逆差。如果是全球性的经济不景气，各国的货币都在贬值的话，那贬值对国家的出口改善作用有限，出口增速和份额占比等数据不会出现明显变化。但是，在全球各国都贬值的前提下，不贬值的国家就会处于相对弱势的地位。 缓解资本流出，改善资本项目投资者对汇率的预期是影响资本流动的重要因素。经济转差、贸易赤字、债务危机、货币超发都会导致贬值预期的产生。而贬值本身可以看做是打压贬值预期的好办法。在贬值到位后，国际资本因汇率而产生的损失已经发生，出逃的动机会减弱。 2014年俄罗斯 贬值影响高通胀货币短期内大幅贬值，意味着进口商品价格明显上涨，导致严重的输入性通胀。 2014年底，巴西俄罗斯 被迫紧缩严重的通货膨胀会导致央行货币政策被动紧缩、加息。而紧缩的环境不利于刺激国内经济]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观</tag>
        <tag>汇率</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记：操作Excel文件]]></title>
    <url>%2F2016%2F01%2F12%2FExcel_with_python.html</url>
    <content type="text"><![CDATA[目前子账户系统无法正常使用的情况下，不得不把每天自己的交易记录导出，计算持仓、净值、盈亏等等。目前用的是excel表格记录，想把每天重复的活交给python，需要用到python读取、修改excel文件。 由于证监会的新规定，目前子账户系统无法正常使用的情况下，不得不把每天自己的交易记录导出，计算持仓、净值、盈亏等等。目前用的是excel表格记录，想把每天重复的活交给python，需要用到python读取、修改excel文件。 在实现自动计算后，考虑将数据导入数据库中，再加上持仓监控分析，就可以变成一个简单的历史回测系统了。 几大插件对比看到别人博客里使用了4个python插件，在操作权限、速度等方面有所区别。 | | XLsxWriter | xlrd&amp;xlwt | OpenPyXL | Microsoft Excel API || 读 | No | Yes | Yes | Yes || 写 | Yes | Yes | Yes | Yes || 修改 | No | No | part | Yes || .xls | No | Yes | No | Yes || .xlsx | Yes | part | Yes | Yes || 大文件 | Yes | No | Yes | No || 速度 | 快 | 快 | 快 | 超慢 || 系统 | 无限制 | 无限制 | 无限制 | windows+excel | 决定暂时先选择OpenPyXL来操作我的文档。 OpenPyXL官方文档算是比较详细的。 安装在cmd里通过pip安装，pillow包不是必须的， 如果需要用到插入图片等功能就需要安装。 12pip install openpyxlpip install pillow]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python笔记：MySQL的调用]]></title>
    <url>%2F2015%2F12%2F30%2FMySQL_in_python.html</url>
    <content type="text"><![CDATA[Python 3.x版本不再支持MySQLdb，也可以选择pymysql、MySQL connector，或者用pandas自带的数据库读写功能。MySQL Connector/Python 是MySQL官方提供的Python连接MySQL数据库的驱动程序。这篇主要记录其基本用法。 安装可以直接使用下列命令安装： 1pip install mysql-connector-python 也可以从官方下载mysql-connector-python的安装包使用。 使用1. 建立连接123456789101112import mysql.connectorconfig=&#123;'host':'127.0.0.1',#默认127.0.0.1 'user':'root', 'password':'123456', 'port':3306 ,#默认即为3306 'database':'test', 'charset':'utf8'#默认即为utf8 &#125;try: cnn=mysql.connector.connect(**config)except mysql.connector.Error as e: print('connect fails!&#123;&#125;'.format(e)) 2. 执行语句123cur=conn.cursor()cur.execute("show databases")cur.fetchall() 3. 创建表格123456789101112sql_create_table='CREATE TABLE `student` \ (`id` int(10) NOT NULL AUTO_INCREMENT,\ `name` varchar(10) DEFAULT NULL,\ `age` int(3) DEFAULT NULL,\ PRIMARY KEY (`id`)) \ ENGINE=MyISAM DEFAULT CHARSET=utf8'cursor=cnn.cursor()try: cursor.execute(sql_create_table)except mysql.connector.Error as e: print('create table orange fails!&#123;&#125;'.format(e)) 4. 插入数据插入数据的语法上和MySQLdb上基本上是一样的： 1234567891011121314151617181920cursor=cnn.cursor()try: #第一种：直接字符串插入方式 sql_insert1="insert into student (name, age) values ('orange', 20)" cursor.execute(sql_insert1) #第二种：元组连接插入方式 sql_insert2="insert into student (name, age) values (%s, %s)" #此处的%s为占位符，而不是格式化字符串，所以age用%s data=('shiki',25) cursor.execute(sql_insert2,data) #第三种：字典连接插入方式 sql_insert3="insert into student (name, age) values (%(name)s, %(age)s)" data=&#123;'name':'mumu','age':30&#125; cursor.execute(sql_insert3,data) #如果数据库引擎为Innodb，执行完成后需执行cnn.commit()进行事务提交except mysql.connector.Error as e: print('insert datas error!&#123;&#125;'.format(e))finally: cursor.close() cnn.close() 同样，MySQL Connector也支持多次插入，同样其使用的也是cursor.executemany，示例如下： 123456stmt='insert into student (name, age) values (%s,%s)'data=[ ('Lucy',21), ('Tom',22), ('Lily',21)]cursor.executemany(stmt,data) 5. 查询操作1234567891011cursor=cnn.cursor()try: sql_query='select id,name from student where age &gt; %s' cursor.execute(sql_query,(21,)) for id,name in cursor: print('%s\'s age is older than 21,and her/his id is %d'%(name,id))except mysql.connector.Error as e: print('query error!&#123;&#125;'.format(e))finally: cursor.close() cnn.close() 6. 删除操作12345678910cursor=cnn.cursor()try: sql_delete='delete from student where name = %(name)s and age &lt; %(age)s' data=&#123;'name':'orange','age':24&#125; cursor.execute(sql_delete,data)except mysql.connector.Error as e: print('delete error!&#123;&#125;'.format(e))finally: cursor.close() cnn.close() 7. 关闭连接1conn.close()]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL基础(一)]]></title>
    <url>%2F2015%2F12%2F29%2FMySQL_notes1.html</url>
    <content type="text"><![CDATA[MySQL数据库可以分为definition, manipulation和control三个部分，这篇文章主要是关于DDL和DCL的学习笔记， SQL语句可以分为3类: Data Definition Languages (DDL) Data Manipulation Language (DML) Data Control Language (DCL) 启动MySQL1. 启动/结束MySQL服务(在cmd中启动，需要电脑管理员权限，否则报错5) 1net start/stop MySQL_name 2. 连接到MySQL服务器在cmd中运行以下代码： 1234mysql -uroot -p #访问远程数据库mysql -h 10.108.108.253 -u chenchensh -p -u 指定数据库用户-p 表示需要密码-h 表示要连接的数据库位置，本地可不加或者用localhost 3. 批量执行SQL语句假设SQL语句保存在mysql.sql文件中， 1source mysql.sql DDLData Definition Language(DDL)语句是用来控制数据库/表的定义、结构、索引的。 创建/删除数据库通过create命令创建数据库。 1create database db_name; drop命令用于删除数据库。 1mysql&gt; drop database db_name; 删除一个已经确定存在的数据库： 12mysql&gt; drop database drop_database;Query OK, 0 rows affected (0.00 sec) 删除一个不确定存在的数据库： 1234567891011121314mysql&gt; drop database drop_database;ERROR 1008 (HY000): Can&apos;t drop database &apos;drop_database&apos;; database doesn&apos;t existmysql&gt; drop database if exists drop_database;Query OK, 0 rows affected, 1 warning (0.00 sec)//产生一个警告说明此数据库不存在mysql&gt; create database drop_database; Query OK, 1 row affected (0.00 sec)// 创建一个数据库mysql&gt; drop database if exists drop_database; Query OK, 0 rows affected (0.00 sec)// if exists 判断数据库是否存在，不存在也不产生错误 创建表（删除drop) 12345create table tbname( column_name1 data_type1 constraints, column_name2 data_type2 constraints, …… ) 修改表1. 修改表类型1alter table tbname modify [column] column_definition [first|after col_name] 2. 增加表字段1alter table tbname add [column] column_definition [first|after col_name] 3. 删除表字段1alter table tbname drop [column] col_name 4. 修改字段名1alter table tbname change [column] old_name col_definition [first|after col_name] 5. 修改字段位置first和after用来定义位置，add默认在表最后，change/modify不改变位置。注意：change first after column属于MySQL，其他数据库可能不通用 6. 更改表名字1alter table tbname rename [to] new_tbname; DCLData Control Language(DCL)是用来管理系统中对象权限的，比如创建用户、用户授权等。 创建用户1CREATE USER &apos;username&apos;@&apos;host&apos; IDENTIFIED BY &apos;password&apos;; username - 你将创建的用户名，host – 指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以从任意远程主机登陆，可以使用通配符%。password - 该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器。 12345CREATE USER &apos;dog&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;; CREATE USER &apos;pig&apos;@&apos;192.168.1.101_&apos; IDENDIFIED BY &apos;123456&apos;; CREATE USER &apos;pig&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;; CREATE USER &apos;pig&apos;@&apos;%&apos; IDENTIFIED BY &apos;&apos;; CREATE USER &apos;pig&apos;@&apos;%&apos;; 授权1GRANT privileges ON databasename.tablename TO &apos;username&apos;@&apos;host&apos; privileges - 用户的操作权限，如SELECT , INSERT, UPDATE 等（详细列表见文章最后）。如果要授予所有的权限则使用ALL。databasename - 数据库名tablename - 表名，如果要授予该用户对所有数据库或表的相应操作权限则可用*表示。 123GRANT SELECT, INSERT ON test.user TO &apos;pig&apos;@&apos;%&apos;; GRANT ALL ON . TO &apos;pig&apos;@&apos;%&apos;; GRANT ALL ON test.* TO &apos;pig&apos; @&apos;%&apos;; 注意：用以上命令授权的用户登录时不能给其它用户授权。如果想让该用户可以授权，需要用： 1GRANT prvileges ON databasename.tablename TO &apos;username&apos;@&apos;host&apos; WITH GRANT OPTION； 设置与更改用户密码1SET PASSWORD FOR &apos;username&apos;@&apos;host&apos; = PASSWORD(&apos;newpassword&apos;); 对于当前登陆的用户，则可以用 1SET PASSWORD = PASSWORD(&quot;newpassword&quot;); 撤销用户权限12REVOKE privilege ON databasename.tablename FROM &apos;username&apos;@&apos;host&apos;; REVOKE SELECT ON *.* FROM &apos;pig&apos;@&apos;%&apos;; 注意：假如你在给用户’pig’@’%’授权的时候类似于这样，那在使用后面一条命令并不能撤销该用户对test数据库中user表的SELECT操作。 123GRANT SELECT ON test.user TO &apos;pig&apos;@&apos;%&apos;;REVOKE SELECT ON . FROM &apos;pig&apos;@&apos;%&apos;; 相反，如果授权使用的是下面的命令，则之后那条命令也不能撤销该用户对test数据库中user表的 Select权限。 12GRANT SELECT ON . TO ‘pig’@’%’;REVOKE SELECT ON test.user FROM ‘pig’@’%’; 具体信息可以用以下命令查看： 1SHOW GRANTS FOR ‘pig’@’%’; 删除用户1DROP USER ‘username’@&apos;host’; 例子：一个典型的数据库建表, 建用户过程: 12345678910111213141516171819202122#创建用于localhost连接的用户并指定密码 mysql&gt; create user &apos;pcom&apos;@&apos;localhost&apos; identified by &apos;aaa7B2249&apos;; Query OK, 0 rows affected (0.00 sec) #创建数据库 mysql&gt; create database pcom default character set utf8 collate utf8_bin; Query OK, 1 row affected (0.00 sec) #给本地用户授权, 这里不需要指定密码 mysql&gt; grant all on pcom.* to &apos;pcom&apos;@&apos;localhost&apos;; Query OK, 0 rows affected (0.00 sec) #给其他IP地址下的用户授权, 注意: 这里必须指定密码, 否则就可以无密码访问 mysql&gt; grant all on pcom.* to &apos;pcom&apos;@&apos;192.168.0.0/255.255.0.0&apos; identified by &apos;aaa7B2249&apos;; Query OK, 0 rows affected (0.00 sec) #同理 mysql&gt; grant all on pcom.* to &apos;pcom&apos;@&apos;172.20.0.0/255.255.0.0&apos; identified by &apos;aaa7B2249&apos;; Query OK, 0 rows affected (0.00 sec) #刷新数据库权限mysql&gt; flush privileges; 附表：在MySQL中的操作权限ALTERAllows use of ALTER TABLE. ALTER ROUTINEAlters or drops stored routines. CREATEAllows use of CREATE TABLE. CREATE ROUTINECreates stored routines. CREATE TEMPORARY TABLEAllows use of CREATE TEMPORARY TABLE. CREATE USERAllows use of CREATE USER, DROP USER, RENAME USER, and REVOKE ALL PRIVILEGES. CREATE VIEWAllows use of CREATE VIEW. DELETEAllows use of DELETE. DROPAllows use of DROP TABLE. EXECUTEAllows the user to run stored routines. FILEAllows use of SELECT… INTO OUTFILE and LOAD DATA INFILE. INDEXAllows use of CREATE INDEX and DROP INDEX. INSERTAllows use of INSERT. LOCK TABLESAllows use of LOCK TABLES on tables for which the user also has SELECT privileges. PROCESSAllows use of SHOW FULL PROCESSLIST. RELOADAllows use of FLUSH. REPLICATIONAllows the user to ask where slave or master CLIENTservers are. REPLICATION SLAVENeeded for replication slaves. SELECTAllows use of SELECT. SHOW DATABASESAllows use of SHOW DATABASES. SHOW VIEWAllows use of SHOW CREATE VIEW. SHUTDOWNAllows use of mysqladmin shutdown. SUPERAllows use of CHANGE MASTER, KILL, PURGE MASTER LOGS, and SET GLOBAL SQL statements. Allows mysqladmin debug command. Allows one extra connection to be made if maximum connections are reached. UPDATEAllows use of UPDATE. USAGEAllows connection without any specific privileges.]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL基础(二)]]></title>
    <url>%2F2015%2F12%2F29%2FMySQL_notes2.html</url>
    <content type="text"><![CDATA[MySQL数据库可以分为definition, manipulation和control三个部分，这篇文章主要是关于DML数据查询及修改的学习笔记， SQL语句可以分为3类: Data Definition Languages (DDL) Data Manipulation Language (DML) Data Control Language (DCL) DMLData Manipulation Language(DML)是对数据库中的表记录的操作。 1. 插入记录 insert1234INSERT INTO tbname(field1,field2, …) VALUES(value1, value2, …);#插入多行数据INSERT INTO tbname values(....), (....), .... 2. 更新记录 update123UPDATE tbname SET field1=value1, …, fieldn=valuen [WHERE CONDITION] UPDATE emp1 a, dept b set a.sal=a.sal*b.deptno, b.deptname=a.ename where a.deptno=b.deptno; 可以同时更新多个表中的数据，多用于根据一个表的字段来动态更新另外一个表的字段。 3. 删除记录 delete1234DELETE FROM tbname [WHERE CONDITION] DELETE t1, t2, … from t1, t1, … [WHERE CONDITION] DELETE a,b FROM emp1 a, dept b WHERE a.deptno=b.deptno AND a.deptno=3; 如果不加where condition，则会把表的所有记录删除！ 4. 查询记录 select123456789101112SELECT * FROM tbname [WHERE CONDITION] # * 表示所有字段，也可用,分隔需要的字段。SELECT DISTINCT …..# 去掉重复的记录SELECT * FROM tbname [WHERE CONDITION] [ORDER BY field1 [desc\asc], field2 [desc\asc], …..]# 排序，desc、asc是降序和升序 # 对field1,2依次排序，如果只有field1，则相同的field1内的记录无序排列。SELECT …. [LIMIT offset_start, row_count]#显示一部分记录 limit 和order by常一起用于分页显示 5. 聚合 group by1234SELECT [field1, field2, …] fun_name FROM tbname [WHERE CONDITION] [GROUP BY field1, field2, …. [WITH ROLLUP]] [HAVING CONDITION]; fun_name表示要做的聚合操作，如sum, count, max, mingroup by要聚合的字段，with rollup表明是否对分类聚合的结果进行再汇总，having表示对分类后的结果再进行条件过滤（where是聚合前的筛选，having是之后） 6. 表连接表连接可以分为内连接和外连接，内连接仅选出两张表中相互匹配的记录，外连接会选出其他不匹配的记录。其中，外连接还分为左连接和右连接（包含左/右表中的所有记录，即使另一边没有匹配的记录） 例子(内连接)select ename,deptname from emp1, dept where emp1.deptno=dept.deptno 7. 子查询1SELECT * FROM tbname WHERE CONDITION ( in/ not in / = / != / exists / not exists) 8. 记录联合123456SELECT * FROM tb1 UNION/UNION ALL SELECT * FROM tb2 …. UNION/UNION ALL SELECT * FROM tbm; union all是把结果集直接合并在一起，union是将union all的结果进行一次distinct。 9. 通配符% 可以匹配任意字符_ 能且只能匹配一个字符 10. 拼接字段concat() 123SELECT Concat(vend_name, ’ (‘, vend_country, ‘)’ ) FROM vendors ORDER BY vend_name； 显示name(location) 可以用Trim()、RTrim()或者LTrim()去掉左右的空格]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL常用数据类型]]></title>
    <url>%2F2015%2F12%2F28%2FMySQL_data_types.html</url>
    <content type="text"><![CDATA[MySQL数据库中常用的一些数据类型及注意事项” 数据类型是定义列中可以存储什么数据以及该数据实际怎么存储的基本规则。Mysql的常用数据类型主要有： 1. 串数据类型(String)最常用的数据类型，有两种基本的串类型：分别为定长串和不定长串。 定长串用于存储长度固定的字符，其长度是创建表时指定的，不允许多于指定字符数的数据，它们分配的存储空间与指定的一样多，CHAR属于定长串类型。 变长串存储长度可变的文本，TEXT属于变长串类型。 变长数据类型灵活，定长数据类型高效，MySQLl处理定长数据类型比变长列快很多，MySQL不允许对变长列（或一个列的可变部分）进行索引，这会极大影响性能。 具体类型描述如下表： 数据类型 说明 CHAR 1~255个字符的定长串，它的长度必须在创建时指定，否则MySQL假定为CHAR(1) VARCHAR 可变长度，最多不超过255字节，如在创建时指定VARCHAR(n)，则可存储0~n个字符的变长串 TINYTEXT 同TEXT，最大长度为255字节 MEDUIMTEXT 同TEXT，最大长度为16K TEXT 最大长度为64K的变长文本 LONGTEXT 同Text，最大长度为4GB（纯文本，一般不会到4G） ENUM 接受最多64K个串组成的预定义集合的某个串 SET 接受最多64K个串组成的预定义集合的零个或多个串 注意：不管任何形式的串数据类型，串值都必须在引号内（通常单引号）；如果数值是计算中使用的数值，则应存储在数值数据类型列中，如果作为字符串使用（如电话号码、邮政编码）则应保存在串数据类型列中。 2. 数值数据类型存储数值，每种类型具有不同的存储范围，支持取值范围越大，所需存储空间越多。所有数值类型（除BIT和Boolean外）都可以有符号或无符号，有符号数据列可存储正或负的数值，默认情况为有符号。 MySQL提供了5种整型：tinyint、smallint、mediumint、int和bigint(字节数1、2、3、4、8)，这些类型在可表示的取值范围上是不同的。整数列可定义为unsigned从而禁用负值；这使列的取值范围为0以上。 MySQL提供3种浮点类型：float、double和decimal。与整型不同，浮点类型不能是unsigned的，其取值范围也与整型不同，这种不同不仅在于这些类型有最大值，而且还有最小非零值。最小值提供了相应类型精度的一种度量，这对于记录科学数据来说是非常重要的（当然，也有负的最大和最小值）。 类型说明 存储需求 取值范围 tinyint(m) 1字节 有符号值：-128 到127（-2^7到2^7-1）无符号值：0到255（0到2^8-1） smallint[(m)] 2字节 有符号值：-32768 到32767（-2^15到2^15-1）无符号值：0到65535（0到2^16-1） mediumint[(m)] 3字节 有符号值：-8388608 到8388607（- 2^23 到2^23 – 1 ） 无符号值：0到16777215（0 到2^24 – 1） int[(m)] 4字节 有符号值：-2147683648 到2147683647（-2^31到2^31-1） 无符号值：0到4294967295（0到2^32-1） bigint[(m)] 8字节 有符号值：-9223372036854775808 到9223373036854775807（-2^63到2^63-1）无符号值：0到18446744073709551615（0到2^64-1） float[(m, d)] 4字节 最小非零值：±1.175494351e-38 double[(m, d)] 8字节 最小非零值：±2.2250738585072014e-308 decimal (m, d) 可变；其值的范围依赖于m和d 对于整型值，如果数据取值范围较小，如人员年龄或兄弟姐妹数，则tinyint最合适。mediumint能够表示数百万的值并且可用于更多类型的值，但存储代价较大。bigint在全部整型中取值范围最大，而且需要的存储空间是表示范围次大的整型int类型的两倍，因此只在确实需要时才用。 对于浮点值，double占用float的两倍空间。除非特别需要高精度或范围极大的值，一般应使用只用一半存储代价的float型来表示数据。 在定义整型列时，可以指定可选的显示尺寸m。如果这样，m应该是一个1到255的整数。它表示用来显示列中值的字符数。 例如，mediumint(4)指定了一个具有4个字符显示宽度的mediumint列。如果定义了一个没有明确宽度的整数列，将会自动分配给它一个缺省的宽度。缺省值为每种类型的”最长”值的长度。如果某个特定值的可打印表示需要不止m个字符，则显示完全的值；不会将值截断以适合m个字符。需要注意的是，使用一个宽度指示器不会影响字段的大小和它可以存储的值的范围。 对每种浮点类型，可指定一个最大的显示尺寸m和小数位数d。m的值应该取1到255，d的值可为0 到30，但是不应大于m–2。m和d对float和double都是可选的，但对于decimal是必须的。在选项m和d时，如果省略了它们，则使用缺省值。 3. 日期和时间数据类型MySQl中有多种表示日期和时间的数据类型。其中YEAR表示年份，DATE表示日期，TIME表示时间，DATETIME和TIMESTAMP表示日期和时间。具体如下表： 数据类型 存储字节数 取值范围 DATE 4 1000-01-01——9999-12-31 TIME 3 -838:59:59——838:59:59 DATETIME 8 1000-01-01 00:00:00——9999-12-31 23:59:59 TIMESTAMP 4 19700101080001——20380119111407 YEAR 1 1901——2155 当插入值超出有效取值范围时，系统会报错，并将零值插入到数据库中。 MySQL是以YYYY-MM-DD格式来显示DATE类型的值，插入数据时，数据可以保持这种格式。另外，MySQL还支持一些不严格的语法格式，分隔符”-“可以用”@”、”.”等符号来替代。 在插入数据时，也可以使用”YY-MM-DD”格式，YY转化成对应的年份的规则与YEAR类型类似。如果我们想插入当前系统的时间，则可以插入CURRENT_DATE或者NOW()。 TIME类型表示为”时：分：秒”，尽管小时范围一般是0~23，但是为了表示某些特殊时间间隔，MySQL将TIME的小时范围扩发了，而且支持负值。对TIME类型赋值，标准格式是’HH：MM：SS’，但不一定非要是这种格式。 如果插入的是’D HH：MM：SS’格式，则类似插入了’（D*24+HH）：MM：SS’。比如插入’2 23:50:50’，相当于插入了’71:50:50’。如果插入的是’HH：MM’或’SS’格式，则效果是其他未被表示位的值赋为零值。比如插入’30’，相当于插入了’00:00:30’；如果插入’11:25’，相当于插入了’11:25:00’。在MySQl中，对于’HHMMSS’格式，系统能够自动转化为标准格式。如果我们想插入当前系统的时间，则可以插入CURRENT_TIME或者NOW()。 DATETIME类型准格式为”YYYY-MM-DD HH：MM：SS”，具体赋值方法与上面的方法相似。 TIMESTAMP的取值范围比较小，没有DATETIME的取值范围大，因此输入值时一定要保证在TIMESTAMP的范围之内。它的插入也与插入其他日期和时间数据类型类似。那么TIMESTAMP类型如何插入当前时间？第一，可以使用CURRENT_TIMESTAMP；第二，输入NULL，系统自动输入当前的TIMESTAMP；第三，无任何输入，系统自动输入当前的TIMESTAMP。 另外有很特殊的一点：TIMESTAMP的数值是与时区相关。 给YEAR类型复制可以有三种方法： 第一种是直接插入4位字符串或者4位数字； 第二种是插入2位字符串，这种情况下如果插入’00’~’69’，则相当于插入2000~2069；如果插入’70’~’99’，则相当于插入1970~1999。第二种情况下插入的如果是’0’，则与插入’00’效果相同，都是表示2000年； 第三种是插入2位数字，它与第二种（插入两位字符串）不同之处仅在于：如果插入的是一位数字0，则表示的是0000，而不是2000年。所以在给YEAR类型赋值时，一定要分清0和’0’，虽然两者相差个引号，但实际效果确实相差了2000年。 4. 二进制数据类型二进制类型可存储任何数据，如文字、图像、多媒体等。具体类型描述如下： 数据类型 说明 TITYBLOB 最大长度为255字节 BLOB 最大长度为64KB MEDIUMBLOB 最大长度为16MB LONGBLOB 最大长度为4GB]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pip用法记录]]></title>
    <url>%2F2015%2F12%2F22%2Fpip_tutorial.html</url>
    <content type="text"><![CDATA[python pip安装工具的常用方法 修改pip国内镜像在user\pip文件夹内添加pip.ini文件： [global]index-url = http://mirrors.aliyun.com/pypi/simple/trusted-host=mirrors.aliyun.com 查找与安装：使用search、install这两个参数。 查看某个库的信息： 123456pip show Jinja2---Name: Jinja2Version: 2.7.3Location: /path/to/virtualenv/lib/python2.7/site-packagesRequires: markupsafe 查看已经安装的库：1pip list 获取并更新过期的库：12pip list --outdatedpip install --upgrade package_name pip升级自己：1python -m pip install --upgrade pip pip的参数解释：1234567891011121314151617181920212223242526272829pip --help Usage: pip &lt;command&gt; [options] Commands: install 安装包. uninstall 卸载包. freeze 按着一定格式输出已安装包列表 list 列出已安装包. show 显示包详细信息. search 搜索包，类似yum里的search. wheel Build wheels from your requirements. zip 不推荐. Zip individual packages. unzip 不推荐. Unzip individual packages. bundle 不推荐. Create pybundles. help 当前帮助. General Options: -h, --help 显示帮助. -v, --verbose 更多的输出，最多可以使用3次 -V, --version 现实版本信息然后退出. -q, --quiet 最少的输出. --log-file &lt;path&gt; 覆盖的方式记录verbose错误日志，默认文件：/root/.pip/pip.log --log &lt;path&gt; 不覆盖记录verbose输出的日志. --proxy &lt;proxy&gt; Specify a proxy in the form [user:passwd@]proxy.server:port. --timeout &lt;sec&gt; 连接超时时间 (默认15秒). --exists-action &lt;action&gt; Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup. --cert &lt;path&gt; 证书.]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何理解外汇占款]]></title>
    <url>%2F2015%2F12%2F09%2FFunds_outstanding_for_foreign_exchange.html</url>
    <content type="text"><![CDATA[外汇占款（Funds outstanding for foreign exchange）是指受资国中央银行收购外汇资产而相应投放的本国货币。 统计口径2016年之前，我国外汇占款有两个统计口径，金融机构外汇占款（金融机构信贷收支表，已停止）和央行外汇占款（货币当局资产负债表）。 两种统计口径的区别在于，金融机构外汇占款是一个更广义的概念，涵盖央行银行和银行类金融机构购买外汇形成的人民币投放总和： $$金融机构外汇占款 = 央行外汇占款 + 银行类机构外汇占款$$ 例如，企业和个人通过与商业银行的结售汇柜台操作，实现外汇和人民币之间的兑换，或者银行自身在银行间市场进行本外币兑换操作，均计入商业银行的信贷收支表，形成金融机构外汇占款。然而，只有商业银行与央行之间进行结售汇操作，实现外汇和人民币之间的兑换，才计入央行的资产负债表，形成货币当局的外汇资产，这样才会影响基础货币。 从历史走势来看，从2004年起，金融机构外汇占款余额开始高于央行外汇占款余额，并且差距有逐步增大的趋势。这是因为银行类金融机构会把外汇利润、外汇存款准备金、以及引入境外投资者或者境外上市而获得的外汇资金结汇而形成外汇占款。 2016年以后央行停止公布金融机构外汇占款，理由是避免市场误读。 外汇储备与外汇占款外汇占款是历史成本计价的，以人民币统计；而外汇储备是市值计价的，以美元统计。外汇占款只反映央行为取得外汇投放的基础货币数额（只有交易变动）。而央行公布的外汇储备虽然以美元计，但并非只有美元一种储备，欧元、日元兑美元的汇率波动，都会使外汇储备发生变化。 例子假设央行有3万亿美元，那么现在央行的外汇储备就是3万亿美元。而其中1万亿美元是用汇率8.3时买的，1万亿是7买的，1万亿是6.5买的，那么外汇占款就是21.8（8.3+7+6.5）万亿人民币。 重要性外汇占款与央行基础货币供给以及市场流动性状况直接挂钩。研究外汇占款的最终目的就是为了研究基础货币供给。 市场一般更关注外汇占款的环比变动。 参考资料：]]></content>
      <categories>
        <category>金融笔记</category>
      </categories>
      <tags>
        <tag>宏观 - 央行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2015中国债市]]></title>
    <url>%2F2015%2F12%2F04%2F2015_China_Bond.html</url>
    <content type="text"><![CDATA[2014-2015年随着宽松的货币政策不断出台，权益市场和债券固收市场都迎来了疯牛行情。之后的股灾行情又使市场的风险偏好大幅下降。同时，中国的汇率市场也发生了较大的改变。 宏观环境全球经济分化08年金融危机以来，世界各国纷纷采取了宽松的货币政策以刺激经济增速，发达国家的GDP增速基本上已经回到06、07年的水平。 美元指数从2014年5月的低位78.91，到近期的最高位100.5554，涨幅达25%，全球市场对美国启动加息的预期逐渐加强。2015年下半年起，各国金融市场对美联储议息会议的敏感度增强，受相关消息的影响波动增大。2015年12月16日美国宣布启动加息，未来几年退出宽松将会是各发达国家的主要方向，不同的只是退出的时点与节奏。 尽管美国进入加息周期，市场普遍预期这是有史以来最弱的加息周期，而从过去3轮加息经验看，通常美元加息前走强，加息后走弱可能性大。但受资本流出的影响，新兴市场货币将受到贬值压力。 反观新兴国家，经济还是在持续下行过程中，中国的GDP增速已经过了08年新低；俄罗斯和巴西可能面临着非常严重的负增长。2016年，预计新兴经济体将继续受制造业产能过剩、大宗商品价格持续萎靡、美元升值等因素影响，经济增速很难有改善。 国内经济自2001年中国加入WTO后，中国出口量大幅增长，中国经济增长与出口增长数据高度相关。 但是，过去的5年里，出口增长从之前的年增速20-30%降到5%以内，而今年更是出现负增长。随着出口需求的放缓，传统强项第二产业工业在GDP中的占比逐年下滑。 当外需不足时，中国政府推出了“4万亿”的内需投资顶上，但也带来了过剩和债务的问题。2015年我国的宏观经济依旧处于下行通道中，预计2016年压力依旧，出口、消费难看到增长点；房地产受制于库存仍高，制造业受制于企业利润增速下降，并且地方政府对基建投资积极性不高，使得投资方面也难有大的提升。另外，在工业去产能的背景下，工业增加值同比增长以及制造业投资增速下滑的大趋势未来一段时间内仍不会转好。 放眼全球，无论是 90 年代的日本、或是欧债危机后的欧洲、还是次贷危机后的美国，均是政府加杠杆对冲经济低迷，同时基准利率和国债利率一路下行。未来中国经济也将呈现企业部门去杠杆，政府部门加杠杆的过程，同时央行会维持宽松的货币政策，降低利率，一来刺激总需求，二来降低债务负担，防止系统性风险。 货币政策总结过去几年全球资本市场，货币政策是影响金融市场的最重要因素之一。2008年次贷危机以后，美联储推出了3轮QE，而资本市场均在QE期间持续上涨，在QE结束以后陷入低迷。当前美国的失业率近5%，经济处于金融危机以来的顶峰，但2015年的美国股市区间震荡，表现完全不及失业率高企的09年，区别在于当时QE明确，而2015年的市场充满加息紧缩预期。从全球来看，今年美股表现远不及日股欧股，也在于后两者仍在QE，货币更加宽松。 从国内来看，货币政策也是影响我国金融市场表现的最主要因素。比如13年股债双熊，与央行大幅提高了官方回购利率，收紧货币政策有关，甚至出现了“钱荒”。由于货币利率高企，投资者普遍偏向购买货币基金，才有了余额宝5000亿规模。而无论股票还是债券，都被市场抛弃，导致当年股市一度跌至1849点，而国债利率也升至近5%。 2014年起，央行的态度发生了巨大的变化。14年初，央行宣布通过SLF给货币利率封顶，其中R007封顶在7%，利率走廊的上限基本成形，此后又分别在15年3月2日和11月20日下调至5.5%和3.25%，可以解读为利率的上行空间封死，利率只能下降不能上升。而现在来看，14年1月中国10年期国债利率确实出现了下行的大拐点。14年7月，央行正式下调了官方的回购利率，也意味着央行开始放水的信号出现，股市也从14年7月起由熊转牛。到了14年11月，央行正式宣布存款利率降息，后面的股市开始出现加速上涨的疯牛行情。2015年，央行又实行了 5 次降准和 5 次降息，无论节奏还是力度均是近年来比较少见的，体现了监管层对经济增长的担忧和稳增长的决心。此外，央行在积极使用公开市场操作、MLF、PSL等常用工具的同时，也推出了信贷资产质押再贷款和专项金融债等创新型工具，丰富了定向调控的手段。 日期 央行政策 2014-11-22 下调金融机构一年期贷款基准利率下调0.4个百分点至5.6%；一年期存款基准利率下调0.25个百分点至2.75%。同时，将金融机构存款利率浮动区间的上限由存款基准利率的1.1倍调整为1.2倍；其他各档次贷款和存款基准利率相应调整，并对基准利率期限档次作适当简并。 2015-02-04 央行降低金融机构存准率0.5%；额外降低符合条件城商行农商行存准率0.5%；额外降低农发行存准率4%。 2015-02-28 一年期存贷款基准利率下调25bp至2.5%和5.35%； 2015-04-19 央行降低金融机构存准率1%；额外降低农村金融机构存准率1%；额外降低农发行存准率2%，额外降低符合农微贷比例机构存准率0.5% 2015-05-10 一年期贷款基准利率下调0.25%至5.1%；一年期存款基准利率下调0.25%至2.25% 2015-06-27 央行下调符合条件的金融机构存准率50bp；下调财务公司存准率3%；下调金融机构1年期存贷款基准利率25bp至2%和4.85%。 2015-08-26 央行下调金融机构存准率50bp；额外降低农村金融机构存准率50bp和金融租赁、汽车金融公司存准率3%；下调金融机构1年期存贷款基准利率25bp至1.75%和4.6% 2015-10-24 央行下调金融机构存准率50bp；下调金融机构1年期存贷款基准利率25bp至1. 5%和4.35% 目前国内存款利率已经降至1.5%的历史新低，虽然通缩压力下未来仍需降息，但空间相对有限。而当前法定存款准备金率依然高达17.5%，历史上最低值仅6%，意味着准备金率下调空间很大，取决于外汇占款变化和国内资金面情况。 人民币汇率“811”汇改2014年2月之前，人民币中间价和即期汇率的变化幅度、走势基本一致，但在2月之后人民币开始贬值，市场汇率的变动幅度明显高于中间价的波动。中间价对市场供求的反映较小，更多还是起到政策性指引的作用。换句话说，在日波幅偏小的情况下，央行对市场的干预主要通过中间价来实现。这导致人民币中间价对市场汇率的实际定价缺乏意义，境内人民币（CNY）贬值压力难以释放，带来较大的离岸（CNH）和在岸人民币差值，而套利盘也会进一步形成贬值压力。境内积聚的贬值压力也是迟早需要被释放的。所以提高人民币的市场化程度，适度的放大人民币的日内波幅限制，势在必行。 2015年8月11日，央行启动人民币中间价报价机制改革，做市商将参考上日收盘汇率报价。汇改当天，人民币贬值近1.8%。为了缓解市场对人民币将持续贬值的预期，央行在之后一段时间内通过在内地市场和香港离岸人民币市场进行了干预措施。突发性的贬值以及一直存在的贬值预期使央行在公开市场干预汇率的维稳成本巨大，在之后几个月的外汇占款数据中有所体现。 外汇占款2014年以来，新增外汇占款由长期的大幅正增长出现持续萎缩，这种情况进入2015年以来有所加剧，尤其在“811汇改“以后，外汇储备及外汇占款都出现了创纪录的下降。 外汇储备和汇率都反映了一段时间内人民币的供求关系。外汇管理局对近期不断下降的外汇储备的解释分为三个部分：藏汇于民、对外投资、以及非美元货币贬值。除了这三个原因外，更重要的因素在于央行在外汇市场对人民币汇率的干预，以稳定人民币汇率的贬值预期。不论出于哪种原因，外汇储备的减少往往与外汇占款减少同步，而外汇占款的降低直接影响国内基础货币的供给，所以未来央行通过降准等对冲手段的可能性非常大。 SDR入篮2015年12月1日，IMF宣布将人民币纳入SDR货币篮子，并将于2016年10月1日起生效。成为继美元、欧元、英镑、日元之后第五个SDR篮子成员，其中人民币的权重为10.92%，超过英镑和日元。短期内，市场普遍预计加入SDR意味着央行对人民币汇率的干预程度将会降低，因而人民币会继续贬值。但从长期来看，加入SDR对于人民币国际化进程具有历史意义，代表着国际金融体系对中国经济、金融市场的认可，有利于提高人民币及人民币资产在全球范围的需求，有利于人民币汇率。 中美国债利差2015年12月16日，美联储9年来首次宣布加息25BP，结束了长达7年的零利率宽松时代。随着美联储开始加息，美国收益率将会逐步提升，资本会从中国等新兴市场流向美国，因而对人民币汇率造成贬值压力。 美元兑人民币走势与中美利差存在着高度正相关。08年以后由于美国QE，尤其是2010年QE2开始，美国无风险利率大幅下降，美中利差下降，人民币兑美元持续强势。但从2014年开始中美利差缩窄，意味着人民币兑美元开始逐渐积累贬值压力。 从利差角度看，中国长期国债收益率的下降受美国长期国债利率约束。目前美国10年期国债收益率已经回升到2.25%左右，2016年美国继续加息步伐，长期国债收益率将持续上行，对中国长期国债利率下降形成一定约束，因此在人民币汇率不大幅贬值的假设基础上，未来我国利率下行幅度有限。 从2010年以来，世界主要经济体货币兑美元大都大幅贬值，而相对来说人民币却异常坚挺。下图中以2010年1月4日的汇率为基准，至今欧元及日元兑美元贬值超过30%。 2015年12月11日，中国外汇交易中心发布人民币指数，市场将其解读为人民币与美元的“脱钩”信号，从而进一步刺激了汇率的贬值压力。预计2016年人民币将继续小幅贬值。 债券市场2015年，中国债券市场规模增长至39.8万亿元，远高于十年前2005年的6万亿规模，在全球仅次于美国和日本，位列第三。 利率债今年以来，由于上述的宏观环境因素，经济下行压力不断增强，货币政策维持宽松，为市场注入大量流动性。虽然受美元加息预期的影响，人民币贬值和外资流出压力一直存在，但在基本面和资金面的轮番驱动下，利率债收益率整体呈现震荡下行。 期限利差方面，上半年，A股持续火爆，短端收益率受制于流动性波动较小，而长端收益率随市场风险偏好逐步反弹，3月财政部宣布一万亿地方债置换存量债务计划，巨量供给对利率债市场形成冲击，长期国债收益率开始盘整，同时市场资金面异常宽松，交易所回购利率持续低位，短期债券利率下行明显，期限利差扩大，国债10年期和1年期的利差一度超过200BP；下半年，随着股票市场快速回调，资金回流债市，长端收益率明显回落，国债10年期和1年期的利差回到60BP左右，利率曲线趋于平坦。 2016年，受制于财政收入增速下滑，稳增长依托财政发力，国务院、财政部之前多次对扩大财政赤字发声，预计未来会向3%的历史“赤字红线”突破，国债供给不会减少。同时，最新的消息称2017年前将完成近16万亿的地方债务置换工作，而2015年至今发行的规模近3.5万亿，预计2016年置换规模将达到6万亿左右。尽管供给压力较大，但地方债务置换的目的在于降低地方政府的财务负担，其发行及定价更偏向于行政任务指派。未来发行利率方面可能会因地区有所差别，但各地商业银行等机构为了维护与地方的关系等隐性收益，依旧会继续承接地方债，所以不会对整体利率债市场形成太大冲击。 2016年利率债的期限结构总体将保持牛平的状态，但空间比较有限。短端收益率将由央行的利率走廊所限制，过去几个月中，银行间和交易所短期资金利率都比较平稳，在没有央行政策性引导（如降息、创新工具等）的前提下，继续下行的可能及幅度不大。降准主要用于对冲外汇占款的减少及债市新供给，降准放水效果会远小于降息的作用。而长端收益率如之前所述，受制于中美国债利差等因素约束，在中央定调人民币汇率不大幅贬值的情况下，继续下行的难度会逐渐加大。 信用债过去两年中债券违约事件明显增多，虽然至今仍然有各种“刚性兑付”托底，但随着国内经济下行压力持续，以及调整过剩产能等因素影响，明年债券市场将会见到更多的企业信用违约风险事件。 以下总结了过去2年债市较有代表性的违约兑付事件。 时间 债券名称 具体违约内容 后续措施 主要影响 2014-03-04 11超日债 *ST超日2014年3月4日晚间公告称，本期利息将无法于原定付息日2014年3月7日按期全额支付，仅能够按期支付共计人民币400万元。（票面利率8.98%，10亿规模） 协鑫重组，全部偿付 市场首单公募债违约 2015-01-20 12东飞01 因未能按时兑付本息而发生实质性违约。然而，在其发行文件中提到的担保人东台市交通投资建设集团有限公司（下称“东台交投”）却声明，该私募债《担保函》非公司出具的真实文件，公司不对此《担保函》以及与之有关的合同、文件、资料等承担任何责任。东台交投表示，公司与东飞马佐里约定的担保事项是东飞马佐里发行的中小企业私募债券的信用评级，而非本期债券项下的本金和利息，因此拒绝向私募债投资者兑付本息。 未知 流程漏洞，担保反悔，市场无先例 2015-04-06 12湘鄂债 6日在向深圳证券交易提交的报告中指出，截至本公告日，公司通过大股东财务资助、处置资产、回收应收账款等方式已收到偿债资金16140.33万元，但尚有24063.10万元资金缺口，因此无法按时、足额筹集资金用于偿付本期债券应付利息及回售款项，构成对本期债券的实质违约。该公司在7日除了偿付利息外，还必须回购部分公司债券。评级公司鹏元资产评估4日将该公司的长期信用评价从BB下调至CC。 未定 第二单公募违约债 2015-04-21 11天威MTN2 保定天威集团有限公司发布公告称，由于公司发生巨额亏损，无法按期兑付2011年度第二期中期票据本年利息。（15亿规模，票面利率5.7%） 获得建行贷款援助，利息顺利偿付 首只国企债券违约 2015-05-28 12中富01 *ST中富披露，2012年公司债券（第一期）本期本金将无法于原定兑付日5月28日按期全额支付，仅能支付利息和35%本金，资金偿还缺口3.8亿元，债券发生实质违约。 10月27日全额兑付 2015-10-13 10英利MTN1 9月18日，保定天威发布公告称，集团及旗下三家子公司无力偿还到期债务，拟申请破产重整。10月13日，中国保定天威英利新能源有限公司公告，未能足额兑付今日到期的10亿元人民币中期票据本金，到期本息应为10.57亿元，但截至目前仅偿还共计7亿元的债券本息 未定 2015-10-19 10中钢债 中钢集团恳请“10中钢债”投资者保持一致行动，撤销回售登记。为了避免“10中钢债”违约，中钢股份不仅追加担保，还延长了回售登记期。中钢股份在10月20日回售期截止日前夕发布最新公告称，中钢股份将以所持上市公司中钢国际的股票为“10中钢债”本息追加质押担保，并且考虑到新增抵押担保可能会影响债券评级和投资者回售意愿，将回售登记时间延后到11月16日，同时将延期支付本期利息。 推迟回售 第二例央企债务违约 2015-11-12 15山水SCP001 香港上市的山水水泥11日在港交所发布公告称，集团将无法于11月12日或该日之前取得足够资金以偿付由旗下子公司山东山水发行的一笔20亿元，于11月12日到期的境内超短期融资券。公告还称，境内债务项下的违约将会触发集团所订立的其他财务贷款以及在中国订立的其他贷款或担保下的交叉违约，包括2020年到期的本金为5亿美元，息率为7.50%的海外优先票据。 未定 第一笔超短融违约 2015-12-07 12圣达债 四川圣达集团在中国货币网公告称，因公司资金流动性受到限制，未能于12月5日足额支付2018年到期、票面利率7.25%债券的2,175万元人民币(340万美元)利息。亦未能在同一天兑付3亿美元投资者决定提前回售的债券的本金。 未出 钢铁、煤炭等传统行业压力巨大 2016年，随着股市逐渐走稳，市场风险偏好可能会略有回升，但由于较宽松的货币政策环境，资产收益率将保持较低水平。因此，高评级的信用债券可能更受欢迎，其与国债收益率的利差将进一步缩小。但应该注意回避低评级高收益的债券品种，尤其是到期时间较近（短久期）的低评级债券，公司无法按时兑付本金利息的概率将显著增大。未来刚性兑付的预期必定会成为历史。短期可能会对信用债整体造成一定的波动，但长期而言有助于债券信用风险的合理定价，有利于金融市场的稳定。 转债市场可转债作为一种拥有股票看涨期权价值的债券，在股市熊市时有债性保底，在震荡市中有期权博弈价值，在牛市中又与正股同步上涨。在2014-2015年的2年里，可转债的这三个特性发挥得淋漓尽致。 2014年初，转债的到期收益率与同期限企业债类似，换句话说，转债隐含了免费的虚值期权；随着2014年下半年股市的牛市行情之后，转债的期权价值突显，涨幅远超上证指数。今年上半年随股市小幅调整后又随正股一同上涨。此后A股市场深度回调，转债指数也加速下滑，跌幅甚至超过了上证综指。一方面，14-15年市场大涨后，可转债的涨幅大幅超过正股，市场对其隐含期权价值定价过高，转股溢价率攀升较快，在正股进入调整期后，转债的估值压力增加；另一方面，大量可转债触发强制赎回条款后退市，市场规模从年初2000亿降至如今的不足120亿。由于市场的供给短缺，剩下的4只转债溢价率居高不下，交易活跃度大幅下降。 随着一级市场IPO的重启，转债的发行也逐渐恢复，目前已有蓝色光标上市申购，未来还有多家公司计划发行可转债。随着新转债的上市，市场规模逐渐扩大，现存转债溢价率将逐渐回归正常水平。 | 公司代码 | 公司名称 | 发行进度 | 发行规模（亿） || 002325.SZ | 洪涛股份 | 股东大会通过 | 12 || 600004.SH | 白云机场 | 股东大会通过 | 35 || 002245.SZ | 澳洋顺昌 | 证监会批准 | 5.1 || 601238.SH | 广汽集团 | 证监会批准 | 60 || 600415.SH | 小商品城 | 股东大会通过 | 11 || 601199.SH | 江南水务 | 股东大会通过 | 7.6 || 002496.SZ | 辉丰股份 | 股东大会通过 | 12 || 600578.SH | 京能电力 | 股东大会通过 | 20 || 600031.SH | 三一重工 | 证监会批准 | 45 || 002510.SZ | 天汽模 | 证监会批准 | 4.2 || 600755.SH | 厦门国贸 | 证监会批准 | 28 || 600496.SH | 精工钢构 | 证监会批准 | 7 || 600998.SH | 九州通 | 证监会批准 | 15 || 000861.SZ | 海印股份 | 股东大会通过 | 11.11 | 未来，转债市场可能存在的风险包括： 市场情绪“崩溃”，新一轮”股灾“（概率较小） 供给冲击（必然因素） 在股市调整，IPO暂停后，可交换债是第一个重新开启发行的品种。市场对于可交换债的估值与转债接近。发行可交换债可以看做质押式股权融资的一种手段。在当前利率下行的环境下，可交换债融资利息仅1%左右，而且因为市场的稀缺性，新发行的交换债条款也更为严苛。另外需要注意的是，投资者为传统可转债付出高溢价，一部分是对于未来转股的强烈预期，因为转债到期前发行人会有强烈的促进转股的意愿。而目前尚不清楚可交换债发行人的发行目的及转股意愿，因为国内还没有历史案例（退市、到期的可交换债）可以参考。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>债券</tag>
        <tag>宏观</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[量化投资相关的网站]]></title>
    <url>%2F2015%2F12%2F03%2FRecommend_sites.html</url>
    <content type="text"><![CDATA[很多网站在国内可能上不去，需要通过“科学上网”才能浏览。 Quantocracy集合了许多国外的quant blog，比自己收藏blog网址效率高很多。 Quantitative Trading Magmasystems Blog Asymmetrica HOXO-M QUANTIFIABLE EDGES Front-Run The Delta HUMBLE STUDENT OF THE MARKETS HACKING NASDAQ @ 500 FPS VIX AND MORE Timely Portfolio Falkenblog Xi (Rossi) LUO Trading with Python Implementing QuantLib The Physics of Finance The Practical Quant QUANTITATIVE RESEARCH AND TRADING Quantnet just another scala quant Quant Stack Exchange Bojan Nikolic QuantStart Keplerian Finance QUSMA Gekko Quant – Quantitative Trading FOSS TRADING MEB FABER Trading the odds The Park Paradigm Alpha Secure Capital Abnormal Returns Quants Portal 国内的网站推荐人大经济论坛]]></content>
      <categories>
        <category>Quant</category>
      </categories>
      <tags>
        <tag>Quant</tag>
        <tag>Reading List</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jekyll+Github+Markdown的个人博客]]></title>
    <url>%2F2015%2F12%2F01%2FJekyll%2BGithub%2BMarkdown.html</url>
    <content type="text"><![CDATA[利用Github Pages的免费静态网页功能，搭建个人博客，markdown编辑让你更专注于内容。 准备工作 Github 账号 Sublime Text 3 （或者其他编辑器） 网站域名（不是必须） 简单说，只需要三步，就可以在 Github 搭建起一个博客： 在 Github 上建一个名为 xxx.github.io 的库； 把看中了的 Jekyll 模板 clone 到本地； 把这个模板 push 到自己的库； 基础搭建1. 在 Github 创建名为 username.github.io 的库首先要创建一个新的库，把它命名为 username.github.io。所以如果你的用户名是 quant222（实际并不存在），库的名字就要 quant222.github.io。博客搭建成功后，就可以直接通过quant222.github.io来访问你的博客了。 其实这里的库并不一定需要用username.github.io来创建，也可以叫whateveriwant。这样的话需要在gh-pages的分支上push commits。将来访问博客则是通过quant222.github.io/whateveriwant/。 创建成功后，把已经创建的库 clone 到本地，或者在本地电脑保存网页的目录下用cmd输入以下命令： 123456echo &quot;# quant222.github.io&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin https://github.com/quant222/quant222.github.io.gitgit push -u origin master 2. 选择模板如果想从0开始学jekyll搭建网页，可以在本地创建一个空的文件夹，按照其他教程一步步创建空白博客。 更方便直观的办法就是在网上找别人已经创建完成的模版。现在 Jekyll 有很多好看的模板，可以到Jekyll Themes或者知乎上找自己喜欢的风格的博客。我使用的是Hux blog的模版。 3. 把博客托管到 Github Pages_config.yml里的个人信息，再把整个文件夹push到github上之前创建的库里就可以了。 模版下载非常简单可以clone或者直接下载，记得下载完把其中的.git文件给删了，是别人创建模版时历史commit等等记录，另外需要删除_post文档中别人的博客，再修改配置文件因模版不同而略有区别，一般需要改的有site url，github等网站账号等。 修改完成后，可以把所有文件放到之前一步在本地创建的库目录下。之后每次更新博客，我们就需要重复 git add 和 git commit 这两步： 123$ git add . $ git commit -m &apos;modified _config.yml&apos;$ git push -u origin master 现在，进入quant222.github.com/quant222.github.io，里面应该已经有刚上传的文件了。现在在浏览器输入网址 http://quant222.github.io，就可以看到博客的样子了（第一次上传完可能需要几分钟后才会显示）。 如果没有修改模板的需求，Jekyll+Github的个人博客就搭建完成了。 以后写文章，只需要在 _post/ 文件加中，加入带有 YAML 头信息（YAML front matter）的 markdown 文件，然后 push 到 Github，就会被自动渲染成 HTML。比如，增加一篇名为 My First Post 的博客，在本地创建一个文件名带有日期的 markdown 文件 2015-04-20-my-first-post.md（里面要写好头信息）： 123456---layout: posttitle: My First Post ---# 这是我的第一篇博客 需要特别注意yaml头信息里的标点，中文输入里的冒号：和双引号“”可能会使网页出错、无法正常显示等问题。 写完文章后，按上述方法(git add commit push的顺序)推送到Github就能在网站上看到写的文章了。至此，一个可以正常使用的个人博客搭建完成了。 进阶修改由于在建这个博客前，我对javascript、css等网站设计相关语言完全不懂，只是依靠其他编程语言的一点基础，照着别人的模版稍作修改。以下的“进阶”过程只是我个人建站的记录，可能会有误导，但至少在我的网站上启动了。 增加个人域名大概流程如下： 注册Godaddy账户（还有其他一些域名管理的网站，如Name，万网等，可以根据自己的需要及价格选择） 挑选自己心仪的域名，购买多少就看自己钱包了，Godaddy有不少promotion code，我的域名折扣之后10年60多美金。支持支付宝支付，人民币400元左右，相当于每年40几块钱，还是可以接受的。 接下来就是解析DNS到自己的github page上：Godaddy自己也有DNS manager，也可以绑定到github上。但据说国内对godaddy的访问效果不好，所以通过DNSpod设置。 首先需要在godaddy的域名设置里将nameservers修改成F1G1NS1.DNSPOD.NET和F1G1NS2.DNSPOD.NET 然后进入DNSpod，添加域名记录，可参考DNSPod的帮助文档 添加域名记录后，进入会有个加载配置啥的，不要保存，使用默认的两个解析就行 在DNSPod自己的域名下添加一条A记录，地址就是Github Pages的服务IP地址：103.245.222.133（最好自行ping获取最新的ip,因为ip可能改变。） 在Github项目目录下创建CNAME文件，添入刚注册的域名，push到Github上，静候DNS生效，差不多十几分钟就OK了 pygments语法高亮用markdown写东西的一个特色就是可以语法高亮。主要的两个插件有google code prittify和pygments。Hux的博客里默认使用的pygments，可以在_config.yml文件里设置：highlighter: pygments也可以自定义一些语法高亮的主题（Hux默认主题设置在_include文件夹的head.html），个人比较喜欢Monokai theme，在项目css目录下创建monokai-syntax.css文件，保存下面的代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465.highlight pre &#123; color: #fff; padding: 7px; background-color:#333&#125;.highlight .hll &#123; background-color: #49483e &#125;.highlight .c &#123; color: #75715e &#125; /* Comment */.highlight .err &#123; color: #960050; background-color: #1e0010 &#125; /* Error */.highlight .k &#123; color: #66d9ef &#125; /* Keyword */.highlight .l &#123; color: #ae81ff &#125; /* Literal */.highlight .n &#123; color: #f8f8f2 &#125; /* Name */.highlight .o &#123; color: #f92672 &#125; /* Operator */.highlight .p &#123; color: #f8f8f2 &#125; /* Punctuation */.highlight .cm &#123; color: #75715e &#125; /* Comment.Multiline */.highlight .cp &#123; color: #75715e &#125; /* Comment.Preproc */.highlight .c1 &#123; color: #75715e &#125; /* Comment.Single */.highlight .cs &#123; color: #75715e &#125; /* Comment.Special */.highlight .ge &#123; font-style: italic &#125; /* Generic.Emph */.highlight .gs &#123; font-weight: bold &#125; /* Generic.Strong */.highlight .kc &#123; color: #66d9ef &#125; /* Keyword.Constant */.highlight .kd &#123; color: #66d9ef &#125; /* Keyword.Declaration */.highlight .kn &#123; color: #f92672 &#125; /* Keyword.Namespace */.highlight .kp &#123; color: #66d9ef &#125; /* Keyword.Pseudo */.highlight .kr &#123; color: #66d9ef &#125; /* Keyword.Reserved */.highlight .kt &#123; color: #66d9ef &#125; /* Keyword.Type */.highlight .ld &#123; color: #e6db74 &#125; /* Literal.Date */.highlight .m &#123; color: #ae81ff &#125; /* Literal.Number */.highlight .s &#123; color: #e6db74 &#125; /* Literal.String */.highlight .na &#123; color: #a6e22e &#125; /* Name.Attribute */.highlight .nb &#123; color: #f8f8f2 &#125; /* Name.Builtin */.highlight .nc &#123; color: #a6e22e &#125; /* Name.Class */.highlight .no &#123; color: #66d9ef &#125; /* Name.Constant */.highlight .nd &#123; color: #a6e22e &#125; /* Name.Decorator */.highlight .ni &#123; color: #f8f8f2 &#125; /* Name.Entity */.highlight .ne &#123; color: #a6e22e &#125; /* Name.Exception */.highlight .nf &#123; color: #a6e22e &#125; /* Name.Function */.highlight .nl &#123; color: #f8f8f2 &#125; /* Name.Label */.highlight .nn &#123; color: #f8f8f2 &#125; /* Name.Namespace */.highlight .nx &#123; color: #a6e22e &#125; /* Name.Other */.highlight .py &#123; color: #f8f8f2 &#125; /* Name.Property */.highlight .nt &#123; color: #f92672 &#125; /* Name.Tag */.highlight .nv &#123; color: #f8f8f2 &#125; /* Name.Variable */.highlight .ow &#123; color: #f92672 &#125; /* Operator.Word */.highlight .w &#123; color: #f8f8f2 &#125; /* Text.Whitespace */.highlight .mf &#123; color: #ae81ff &#125; /* Literal.Number.Float */.highlight .mh &#123; color: #ae81ff &#125; /* Literal.Number.Hex */.highlight .mi &#123; color: #ae81ff &#125; /* Literal.Number.Integer */.highlight .mo &#123; color: #ae81ff &#125; /* Literal.Number.Oct */.highlight .sb &#123; color: #e6db74 &#125; /* Literal.String.Backtick */.highlight .sc &#123; color: #e6db74 &#125; /* Literal.String.Char */.highlight .sd &#123; color: #e6db74 &#125; /* Literal.String.Doc */.highlight .s2 &#123; color: #e6db74 &#125; /* Literal.String.Double */.highlight .se &#123; color: #ae81ff &#125; /* Literal.String.Escape */.highlight .sh &#123; color: #e6db74 &#125; /* Literal.String.Heredoc */.highlight .si &#123; color: #e6db74 &#125; /* Literal.String.Interpol */.highlight .sx &#123; color: #e6db74 &#125; /* Literal.String.Other */.highlight .sr &#123; color: #e6db74 &#125; /* Literal.String.Regex */.highlight .s1 &#123; color: #e6db74 &#125; /* Literal.String.Single */.highlight .ss &#123; color: #e6db74 &#125; /* Literal.String.Symbol */.highlight .bp &#123; color: #f8f8f2 &#125; /* Name.Builtin.Pseudo */.highlight .vc &#123; color: #f8f8f2 &#125; /* Name.Variable.Class */.highlight .vg &#123; color: #f8f8f2 &#125; /* Name.Variable.Global */.highlight .vi &#123; color: #f8f8f2 &#125; /* Name.Variable.Instance */.highlight .il &#123; color: #ae81ff &#125; /* Literal.Number.Integer.Long */.highlight .gh &#123; &#125; /* Generic Heading &amp; Diff Header */.highlight .gu &#123; color: #75715e; &#125; /* Generic.Subheading &amp; Diff Unified/Comment? */.highlight .gd &#123; color: #f92672; &#125; /* Generic.Deleted &amp; Diff Deleted */.highlight .gi &#123; color: #a6e22e; &#125; /* Generic.Inserted &amp; Diff Inserted */ 之后在_include文件夹下的footer.html里添加 123&lt;link rel="stylesheet" href="&#123;&#123; "/css/monokai-syntax.css" | prepend: site.baseurl &#125;&#125;"&gt;&lt;script type="text/javascript" src="http://cdn.bootcss.com/highlight.js/8.9.1/highlight.min.js"&gt;&lt;/script&gt;&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt; 添加back-to-top按钮在页面右下角添加一个返回页首的按钮，看上去挺实用的，所以就模仿了一个。 首先,网上找一张back-to-top的图片放在img文件夹下。在css文件夹下创建backtop.css（也可以放在其他的css文件里） 123456789101112131415161718192021222324252627#back-top &#123; position: fixed; bottom: 30px; margin-left: 1040px;&#125;#back-top a &#123; width: 54px; height: 54px; display: block; background: #ddd url(../img/back-to-top.png) no-repeat center center; background-color: #ddd; -webkit-border-radius: 7px; -moz-border-radius: 7px; border-radius: 7px; -webkit-transition: 1s; -moz-transition: 1s; transition: 1s;&#125;#back-top a:hover &#123; background-color: #777;&#125;@media (min-width: 768px) &#123;#back-top &#123; display: block;&#125;&#125; 在js文件夹下创建backtop.js 12345678910111213141516$("#back-top").hide();$(document).ready(function () &#123; $(window).scroll(function () &#123; if ($(this).scrollTop() &gt; 100) &#123; $('#back-top').fadeIn(); &#125; else &#123; $('#back-top').fadeOut(); &#125; &#125;); $('#back-top a').click(function () &#123; $('body,html').animate(&#123; scrollTop: 0 &#125;, 800); return false; &#125;);&#125;); 然后，在footer.html里加上 1&lt;script src="&#123;&#123; "/js/backtop.js " | prepend: site.baseurl &#125;&#125;"&gt;&lt;/script&gt; 最后，在想让它出现的位置，比如post.html里加入 123&lt;div id="back-top" class="hidden-print hidden-sm hidden-xs"&gt; &lt;a href="#top" title="Back to top"&gt;&lt;/a&gt;&lt;/div&gt; 添加table of content文章目录的sidebar目标是在页面足够的情况下，文章的右侧出现该文章的目录，并悬浮窗口。参考自 Thomas Zhao Studio 在css文件夹下创建toc.css（也可以放在其他的css文件里） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293/* By default it's not affixed in mobile views, so undo that */.bs-docs-sidebar.affix &#123; position: static;&#125;@media (min-width: 768px) &#123; .bs-docs-sidebar &#123; padding-left: 10px; &#125;&#125;/* First level of nav */.bs-docs-sidenav &#123; margin-top: 40px; margin-bottom: 20px;&#125;/* All levels of nav */.bs-docs-sidebar .nav &gt; li &gt; a &#123; display: block; padding: 4px 10px; font-size: 20px; font-weight: 300; color: #696969; /*no wrap*/ overflow:hidden; white-space:nowrap; text-overflow:ellipsis&#125;.bs-docs-sidebar .nav &gt; li &gt; a:hover,.bs-docs-sidebar .nav &gt; li &gt; a:focus &#123; padding-left: 10px; color: #563d7c; text-decoration: none; background-color: transparent; border-left: 1px solid #563d7c;&#125;.bs-docs-sidebar .nav &gt; .active &gt; a,.bs-docs-sidebar .nav &gt; .active:hover &gt; a,.bs-docs-sidebar .nav &gt; .active:focus &gt; a &#123; padding-left: 9px; font-weight: 300; color: red; background-color: transparent; border-left: 2px solid #563d7c;&#125;/* Nav: second level (shown on .active) */.bs-docs-sidebar .nav .nav &#123; /* display: none; Hide by default, but at &gt;768px, show it */ /* padding-bottom: 10px; */&#125;.bs-docs-sidebar .nav .nav &gt; li &gt; a &#123; padding-top: 1px; padding-bottom: 1px; padding-left: 20px; font-size: 18px; font-weight: bold;&#125;.bs-docs-sidebar .nav .nav &gt; li &gt; a:hover,.bs-docs-sidebar .nav .nav &gt; li &gt; a:focus &#123; padding-left: 19px;&#125;.bs-docs-sidebar .nav .nav &gt; .active &gt; a,.bs-docs-sidebar .nav .nav &gt; .active:hover &gt; a,.bs-docs-sidebar .nav .nav &gt; .active:focus &gt; a &#123; padding-left: 18px; font-weight: bold; color: red;&#125;/* Nav: 3rd level (shown on .active) */.bs-docs-sidebar .nav .nav .nav &#123; /*display: none; Hide by default, but at &gt;768px, show it */ /* padding-bottom: 10px;*/&#125;.bs-docs-sidebar .nav .nav .nav &gt; li &gt; a &#123; padding-top: 1px; padding-bottom: 1px; padding-left: 30px; font-size: 17px; font-weight: normal;&#125;.bs-docs-sidebar .nav .nav .nav &gt; li &gt; a:hover,.bs-docs-sidebar .nav .nav .nav &gt; li &gt; a:focus &#123; padding-left: 29px;&#125;.bs-docs-sidebar .nav .nav .nav &gt; .active &gt; a,.bs-docs-sidebar .nav .nav .nav &gt; .active:hover &gt; a,.bs-docs-sidebar .nav .nav .nav &gt; .active:focus &gt; a &#123; padding-left: 28px; font-weight: bold; color: red;&#125; 在js文件夹下创建toc.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143var BlogDirectory = &#123; /* * Side Nav Affixing * * reference to: * https://github.com/twbs/bootstrap/blob/master/docs/assets/js/src/application.js#L35 */ setSideNavAffixing:function() &#123; // Scrollspy var $window = $(window) var $body = $(document.body) $body.scrollspy(&#123; target: '.bs-docs-sidebar' &#125;) $window.on('load', function () &#123; $body.scrollspy('refresh') &#125;) // Kill links $('.bs-docs-container [href=#]').click(function (e) &#123; e.preventDefault() &#125;) // Sidenav affixing setTimeout(function () &#123; var $sideBar = $('.bs-docs-sidebar') $sideBar.affix(&#123; offset: &#123; top: function () &#123; var offsetTop = $sideBar.offset().top var sideBarMargin = parseInt($sideBar.children(0).css('margin-top'), 10) var navOuterHeight = $('.bs-docs-bar-top').height() return (this.top = offsetTop - navOuterHeight - sideBarMargin) &#125;, bottom: function () &#123; return (this.bottom = 0 - $('.bs-docs-container').outerHeight(true)) &#125; &#125; &#125;) &#125;, 100) setTimeout(function () &#123; $('.bs-top').affix() &#125;, 100) &#125;, // end of setSideNavAffixing:function() /* Generate directory tree * * side_nav_element: side navigation element * article_body_element: article body container. * * processing: search header elements(h1,h2,h3) in `article_body_element`, * generate directory tree list, and put them into side_nav_element. */ createBlogDirectory:function (side_nav_element, article_body_element)&#123; if(!article_body_element || article_body_element.length &lt; 1 || !side_nav_element) &#123; return false; &#125; var nodes = article_body_element.find("h1,h2,h3"); var ulSideNav = side_nav_element; $.each(nodes,function()&#123; var $this = $(this); var nodetext = $this.text(); // There maybe HTML tags in header inner text, use regex to erase them nodetext = nodetext.replace(/&lt;\/?[^&gt;]+&gt;/g,""); nodetext = nodetext.replace(/&amp;nbsp;/ig, ""); // btw: Jekyll generates id for each header. var nodeid = $this.attr("id"); if(!nodeid) &#123; nodeid = "top"; &#125; var item_a = $("&lt;a&gt;&lt;/a&gt;"); item_a.attr("href", "#" + nodeid); item_a.text(nodetext); var ret_li; // wrapper: ul ( in the template, outside this code ) // h1: layer 1: li - a // h2: layer 2: ul - li - a // h3: layer 3: ul - ul - li - a switch($this.get(0).tagName) &#123; case "H1": var li_a = $("&lt;li&gt;&lt;/li&gt;").append(item_a); ret_li = li_a; break; case "H2": var li_a = $("&lt;li&gt;&lt;/li&gt;").append(item_a); var nav_li_a = $("&lt;ul class=\"nav\"&gt;&lt;/ul&gt;").append(li_a); ret_li = nav_li_a; break; case "H3": var li_a = $("&lt;li&gt;&lt;/li&gt;").append(item_a); var nav_li_a = $("&lt;ul class=\"nav\"&gt;&lt;/ul&gt;").append(li_a); var nav_nav_li_a = $("&lt;ul class=\"nav\"&gt;&lt;/ul&gt;").append(nav_li_a); ret_li = nav_nav_li_a; break; &#125; if(!ret_li) &#123; // do nothing &#125; else &#123; ulSideNav.append(ret_li); &#125; &#125;) // end of each &#125; //end of createBlogDirectory:function()&#125;;jQuery(function($) &#123; $(document).ready( function() &#123; /* qrcode var opt = &#123; text : window.location.href, width:150, height:150 &#125;; try &#123; document.createElement("canvas").getContext("2d"); &#125; catch (e) &#123; $.extend(opt,&#123; render : "table" &#125;); &#125; $('.qrcode').html('').qrcode(opt); */ // Generate the side navigation `ul` elements// BlogDirectory.createBlogDirectory($("#sideNav"), $(".bs-docs-container")); BlogDirectory.createBlogDirectory($("#sideNav"), $(".post-container")); // caculate affixing BlogDirectory.setSideNavAffixing(); &#125;);&#125;); 然后，在footer.html里加上 12&lt;!-- TOC sidebar--&gt;&lt;script src="&#123;&#123; "/js/toc.js " | prepend: site.baseurl &#125;&#125;"&gt;&lt;/script&gt; 最后，在post.html里加入 123456789&#123;% unless page.fullwidth == true %&#125;&lt;nav class="bs-docs-sidebar "&gt;&lt;ul id="sideNav" class="nav bs-docs-sidenav"&gt;&lt;!-- code will be generated in application.js --&gt;&lt;/ul&gt;&lt;/nav&gt;&#123;% endunless %&#125; （可能需要对原来的post位置做一些调整）]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Jekyll</tag>
        <tag>Github</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国债期货交易策略]]></title>
    <url>%2F2015%2F11%2F27%2Ftreasury_futures_strategy.html</url>
    <content type="text"><![CDATA[国债期货与一般期货不同，因为其标的为虚拟债券，存在一篮子的可交割债券，所以国债期货的交易策略更为复杂。也因为其复杂性，只有做专业的投资者才能在国债期货市场分到一杯羹。 国债期货交易策略基本策略国债期货作为一种最基本的利率衍生品，最基本的可以分为投机、套期保值、套利交易。 1. 投机投机交易通过判断国债期货市场价格涨跌变化赚取利润。国债期货合约采用保证金交易（最低1%，每份合约仅1万元保证金），具有较大交易风险。方向性的投机策略基于对利率走势的判断，判断现券收益率的范围，可以计算出国债期货的理论价格范围。 2. 套期保值套期保值是一种基本的风险管理方法，在现货和期货市场同时进行方向相反的交易，从而降低利率波动的影响。套期保值又可以分为多头套保和空头套保。实际操作中需要考虑交易成本、对冲比例和时间价值等因素。$$理论套期保值比率(Hedge \ ratio) = \frac{\Delta 债券组合市值}{\Delta 期货合约市值}$$从不同因素出发，套保策略又可以分为久期中性、DV01套保、$\beta$比例套保等。 2.1 久期中性久期中性套保是通过卖空一定比例的国债期货，使投资组合的久期为0。$$套保比例HR = \frac{现券价格 现券久期}{期货价格期货久期}$$ 例子假设有1亿元的现券需要套期保值，套保期限暂定为到下个季月的交割日。现券为上月发行的 10 年期国债13附息国债18，按照2013年9月13日的数据，其全价（中债估值）为99.7791元，修正久期为7.9288。我们该选择怎样的套保比率对它进行套期保值呢？目前TF1312合约的CTD券为130015.IB，修正久期为5.9032，期货合约价格为93.764。实际套期保值比率=99.7791×7.9288/(93.764×5.9032)=1.4293。实际需要卖空TF1312合约143 份。 注意：期债久期=CTD久期 风险 对冲比例：实际操作中对冲比例必须为整数，使组合存在敞口。 收益率变化：当收益率变化时，久期也会发生变化，尤其在大幅波动时。 CTD券与国债期货走势不一致：计算国债期货久期时，需要考虑转换因子吗？？？ 久期不能完全反应价格变动：债券收益率曲线有下凸特性。 期限结构：债券市场收益率并非平行移动，比如持有10年期国债，用5年期国债对冲，期限利差存在变化。 2.2 基点价值套保基点价值（Basis Point Value, BPV）又称为DV01（Dollar value of 01），即收益率变动1BP，债券价格变化量。相比久期中性策略，基点价值套保有更高的准确性。 $$DV01{现货} \approx \frac{PV(y-1bp)- PV(y+1bp)}{2}$$$$DV01{期货} \approx \frac{DV01{CTD}}{CF{CTD}}$$$$HR = \frac{DV01{现货}}{DV01{期货}} = \frac{DV01{现货} * CF{CTD}}{DV01_{CTD}}$$ 例子之前的例子中，现货13国债18的DV01为0.080588，而TF1312合约的CTD券130015.IB的DV01为0.057013，则套期比例为$HR=0.080588*1.0270/0.57013=1.451667$，即卖空145份国债期货。 风险与久期的风险点类似。 2.3 $\beta$比例套保旨在解决久期中性和DV01策略中无法避免期限结构非平行移动的特点。通过使用被套保债券的收益率和国债期货CTD券收益率的历史数据构建回归方程：$$y_C = \alpha + \beta yCTD + \epsilon$$将回归估计的$\beta$作为修正项加入套保比例中，$$HR\beta = \beta \frac{DV01{现货}}{DV01{期货}}$$ 风险 历史数据与未来预测的不一致 市场活跃度不高，可能需要用到中债估值等数据，影响回归估计。 2.4 套保策略另类应用 传统久期中性及DV01策略可以对冲利率的平行移动，所以可以利用该策略把握期限利差变动的机会（平坦化或者陡峭化）。 金融债、信用债与国债间的信用、税收利差。通过买入信用债、卖空国债期货的策略，可以博取信用利差缩小的收益。 3. 套利对国债期货而言，最主要的策略包括期现套利、跨期套利和跨品种套利。 基差交易基差在国债期货交易中有重要的作用。期货套保空头在获得现券持有收益的同时，还可以选择哪种现券、何时交割的权利，所以$基差 = 持有收益 + 空头期权价值$ 其中，$持有收益 = 利息收入 + 利息再投资（期间付息） - 融资成本$。空头交割期权价值又分为转换期权，月末期权，时机期权。 持有收益是可以计算的，所以可以关注净基差（Basis net of carry），即空头交割期权价值。当净基差为正时，可以理解为空头在开仓时为其期权价值所支付的价格。 套利策略理论上基差存在收敛的特性。在交割月时，CTD券和期货的基差应该收敛为0。因此当二者出现较大偏离时，可以进行套利。 基差多头：买入国债现货、卖出国债期货（博弈期权价值将上升，持有收益增加（融资成本降低）） 基差空头：卖出国债现货、买入国债期货（期权价值高估（净基差&gt;&gt;0），持有收益减小） Payoff &amp; Loss如果持有的现货为CTD券， 基差多头：持有收益不变（融资成本不发生巨大变化）的假设下，以净基差价格买入空头期权。最大损失仅限于期权费。（IRR&gt;0，开仓最小收益=IRR） 基差空头：以净基差卖出一个空头期权，最大收益为期权费。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>债券</tag>
        <tag>国债期货</tag>
        <tag>套利</tag>
        <tag>策略</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用DigitalOcean和shadowsocks来科学上网]]></title>
    <url>%2F2015%2F11%2F26%2FShadowsocks_with_DigitalOcean.html</url>
    <content type="text"><![CDATA[没有google的日子实在是太痛苦了。只能用百度，工作学习效率大打折扣。陆陆续续用过不少科学上网的手段，但速度、稳定性和安全度都无法保障。于是出于爱折腾的精神，决定自己用vps架代理。通过海外vps构建科学上网，大大提升工作学习效率。 最初买完VPS想着搭建VPN（因为以前大学时用学校的VPN网速超快），但由于自己对服务器系统毫无基础，在尝试了多个教程后决定放弃。之后参照 Jerry的教程，不到10分钟就能连上google了。以下内容基于教程的个人操作步骤。 服务器选择：DigitalOcean现在云服务器公司有不少，网上推荐的主要有Linode, DigitalOcean, Bandwagon, AWS等。结合购买成本、网友推荐等因素，我选择了DigitalOcean。 首先注册账号（通过我的邀请链接可以收到\$10的奖励)，并充值。 然后就可以创建自己的云主机了。如果没有其他特殊需要，选择\$5/mon的足矣。节点方面，之前别人推荐的都是San Francisco，速度更稳定。但最近（2016年底）我的vps一直登不上，换了两次IP都只能连上一天。（猜测是美国的节点被墙了？）。于是换到了Singapore，目前使用2个月一切正常，网速似乎不如旧金山，但关键是能用。另外操作系统的话，我选择的是ubuntu 14.04 x64的。 创建SSH key接下来可以添加SSH key，这一步不是必须的，但是我觉得使用SSH key比使用Digital Ocean为你创建的随机密码好一点。如果不想做这一步，或者你之前已经创建过SSH key的话，可以跳过这一部分。 什么是SSH keySSH key是一个简单而又安全地连接到你的远端设备的方式，通过它你不需要在网络上传输你的密码。SSH key有public和private两部分，其中private部分存储在你的设备本地，而public部分则需要上传到远程设备上。当你通过ssh连接到远程设备上时，只有私钥和公钥匹配上才能登陆。 如何创建SSH key第一步，首先查看你本地设备上是否有SSH keys。你可以运行以下指令： 12cd ~/.sshls *.pub 如果没有任何输出，说明你需要创建一个新的SSH key： 1ssh-keygen -t rsa -C &quot;email@example.com&quot; 后面的email请替换成你自己的email。接着你就会看到类似下面的信息： 123456789Generating public/private rsa key pair.Enter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]Enter passphrase (empty for no passphrase): [Type a passphrase]Enter same passphrase again: [Type passphrase again]Now your SSH key will be generated.Your identification has been saved in /Users/your_username/.ssh/id_rsa.Your public key has been saved in /Users/your_username/.ssh/id_rsa.pub.The key fingerprint is:01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db email@example.com 比如我的公钥就生成于：/Users/Jerry/.ssh/id_rsa.pub，接下来就可以把公钥内容传到Digital Ocean上了。 Shadowsocks在shadowsocks的github主页上有很详细地说明。 在服务器端安装shadowsocks首先需要远程登录到Digital Ocean的主机上，因为之前已经建好了SSH Key，所以直接用root用户登录即可： 1ssh root@VPS IP address 在 Debian / Ubuntu 下 安装shadowsocks 12apt-get install python-pippip install shadowsocks 在实际安装下发现很多依赖缺失，需要先执行一下：apt-get update。 启动shadowsocks服务安装好shadowsocks以后，启动shadowsocks服务可以通过以下指令： 12345ssserver -p 8836 -k `password` -m rc4-md5#或者可以通过以下指令在后台启动shadowsocks的服务：ssserver -p 8836 -k `password` -m rc4-md5 -d startssserver -p 8836 -k `password` -m rc4-md5 -d stop 但上面的方法很不方便，推荐使用配置文件的方法。首先创建一个文件：/etc/shadowsocks.json，内容如下： 12345678910&#123; "server":"::", "server_port":8388, "local_address": "127.0.0.1", "local_port":1080, "password":"你设置的密码", "timeout":300, "method":"aes-256-cfb", "fast_open": false&#125; 接下来你就可以使用下面这个指令启动服务 12345ssserver -c /etc/shadowsocks.json#或者在后台运行ssserver -c /etc/shadowsocks.json -d startssserver -c /etc/shadowsocks.json -d stop 使用shadowsocks客户端shadowsocks的客户端支持各大主流平台，而且客户端的配置一般都很简单，只需要配置一下服务器的ip地址和之前设置好的连接密码即可。]]></content>
      <categories>
        <category>计算机相关</category>
      </categories>
      <tags>
        <tag>shadowsocks</tag>
        <tag>DigitalOcean</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国债ETF套利交易]]></title>
    <url>%2F2015%2F11%2F25%2Ftreasury_bond_ETF_strategy.html</url>
    <content type="text"><![CDATA[国债ETF通过一篮子债券组合跟踪相应国债指数，可以通过国债期货进行对冲交易。 国债ETF介绍基本情况国债ETF即国债交易型开放式指数证券投资基金，目前市场最活跃的品种是国泰上证5年期国债ETF(511010)，该国债ETF跟踪上证5年期国债净价指数(000140)。 项目 描述 债券品种 上交所挂牌的国债 剩余期限 4-7年可交割券 付息方式 固定利率付息 基准日 2007年12月31日，基点100 计算公式 以样本券的发行量为权重，采用派许加权综合价格指数公式计算。指数= \frac{样本债券总市值(= \sum{净价发行量})}{基期} *基期指数 取价规则 同中证指数公司已有债券指数 样本调整 原则上每一个季度调整一次，时间分别为国债期货交割月的第二个周五后首个交易日（若周五为非交易日，则顺延）。若样本券在两次定期调整间发生不满足选样条件的情况，将视具体情况处理 国泰上证5年ETF的投资目标是：紧密跟踪标的指数，追求跟踪偏离度和跟踪误差最小化。而其策略是根据历史数据和流动性分析，利用优化抽样复制法，选取相对流动性较好的国债构建组合，对标的指数的久期等指标进行跟踪。 特点 交易所上市竞价交易，且T+0回转交易 手续费部分券商为0。 可质押回购加杠杆，质押比率同国债。 理论上可以融券卖出，做空债市。 待确认 套利策略策略1 传统ETF申赎套利当ETF净值与市场交易价格出现偏差时，可以通过申赎机制赚取收益。 净值&gt;市价，市场买入，现金赎回？净值&lt;市价，现金申购，市场卖出？貌似申赎及交易都可以做到0手续费？没有实际操作过，不确定 策略2 套作CTD券当ETF中存在CTD券，且基差多头机会存在时，可以卖出国债期货，同时在二级市场买入或现金申购国债ETF，并赎回。获得一篮子国债，保留CTD券，将其余债券卖出。 实际操作过程中，ETF包含的CTD券数量有限，其余债券流动性不足，影响套利收益。 策略3 ETF-期货基差策略原理：将ETF看作非CTD券，与期债到期时基差应收敛于某一正值。最大的区别在于ETF价格中隐含了利息、基金运营成本等因素。ETF对应的债券净价，及其相应的转换因子和久期较难计算。现实操作有一定难度。 转换因子ETF组合中的债券为5年期左右的上交所债券，该组合的转换因子可以由组合中的债券转换因子加权平均计算。这种计算方法理论上并不准确。因为ETF组合中不只有债券，且根据申赎清单、季度报告等数据中只有排名靠前的持仓。但对转换因子计算的影响不会太大。 计算持有收益ETF价格受到多方面的影响，有债券的持有收益、市场摩擦成本、基金管理费等等。其中，应计利息可以通过申赎清单中的债券每日应计利息加权计算；管理费则是年化0.3%每日计提。市场交易产生的摩擦成本相对较低，且较难估算， $$ETF净价 = ETF市场价+\sum{历史分红}-\sum_{t=0}(应计利息- 管理费)$$ 策略4 统计价差套利因为ETF价格隐含利息收益，与国债期货合约的价差呈上升趋势，而当价差在较低位置时，则可以买入ETF，卖空国债期货开仓。可以通过ETF与当季、下季合约间的价差，基于统计回归的套利策略。 国泰国债ETF跟踪上证5年期国债指数，且跟踪误差较小。同时，指数与期债的基差可以看作为非CTD券与国债期货的基差，即期货到期收敛于某一正值，且基差波动范围有限（一篮子债券的IRR不应该出现太大波动），从图中可以看到上证5年期国债指数与国债期货的绝对价差保持在(9,12)的范围。 风险 ETF市场价格与上证5年期指数偏离较大。同时考虑ETF与指数间的价差关系，当ETF市场价格与净值偏离时，可以考虑申赎套利。 价差持续缩小：账面浮亏，时间成本。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>债券</tag>
        <tag>国债期货</tag>
        <tag>套利</tag>
        <tag>策略</tag>
        <tag>国债ETF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hello world!]]></title>
    <url>%2F2015%2F11%2F17%2FHello_World.html</url>
    <content type="text"><![CDATA[My blog is online now!!!]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国债期货]]></title>
    <url>%2F2015%2F11%2F17%2FTreasury_bond_futures.html</url>
    <content type="text"><![CDATA[国债期货作为国内市场为数不多的利率衍生品，在国内的发展一波三折。主要介绍国债期货的发展历程、以及其基本原理。 总体情况国际市场在以美国为代表的成熟市场上，国债期货是市场交易最为活跃的品种之一，是市场参与者管理利率风险最为常用的工具。世界上最早的国债期货于1976年由美国的芝加哥商品交易所（CME）推出，当时所推出的期货合约的标的是90天期的短期国库券。后来，芝加哥期货交易所（CBOT）推出了1年期短期国库券期货合约，并逐渐成为美国最主要的国债期货交易场所。为了满足投资者对短期利率风险和长期利率风险进行管理的需求，期限长短不等的各种国债期货合约被陆续推向市场：1977 年，芝加哥期货交易所推出30年国债期货合约；1982年，该所推出10年期国债期货合约；1988年该所推出5年期合约，1990年该所推出2年期合约。2011年，芝加哥期货交易所的10年期国债期货交易量达到 3.17 亿手，成为全球国债期货市场中最为活跃的交易品种之一。 日期 交易所 合约 1976 CME 90天短期国库券 1977 CBOT 30年国债期货 1982 CBOT 10年国债期货 1988 CBOT 5年国债期货 1990 CBOT 2年国债期货 目前，世界上推出国债期货的国家主要包括美国、英国、澳大利亚、日本、德国和韩国，国债期货的年限主要包括3年期、5年期和10年期。 其中，美国的10年期美元期货合约和德国的10年期欧元国债合约成交量大，是世界范围内管理美元和欧元利率风险的主要工具。 国家 交易所 合约 货币 美国 CME 10年期国债期货 美元 德国 EUREX 10年期国债期货 欧元 英国 LIFFE 10年期国债期货 英镑 日本 TSE 10年期国债期货 日元 澳大利亚 ASX 3年期国债期货 澳元 韩国 KRX 3年期国债期货 韩元 国内市场在中国，国债期货曾经于1992年试点运行。然而，由于当时中国国债市场本身所存在的一些不足以及国债期货交易制度设计和监管上所存在的缺陷（现货流动性不足，国债期货市场严重分割，监管部门缺乏有效的制度和方法对国债期货交易中的风险进行监控、防范），国债期货交易很快就失去了套期保值、防范风险的功能，沦落成为投机交易的工具。投机者在国债期货交易上不断上演“多逼空”等典型投机行为，违规操作层出不穷。在经历了著名的“327”、“319”等违规操作事情之后，中国的国债期货市场于1995年5月黯然谢幕。从此，一别十七年，直到2012年中国金融期货交易所重新开始国债期货的仿真交易。随着国债期货等合约的引入，固定收益证券的风险管理将进入一个更为广阔的空间，投资者和交易者有了更多的积极管理的自由。 合约设计目前上市交易的国债期货有2013年推出的5年期合约和2015年推出的10年期合约，10年期合约在上市后持仓量逐渐放大，T1512合约持仓量已经超过TF1512。 项目 5年期 10年期 合约标的 面额为100万人民币，票面利率3%的5年期名义标准国债 面额为100万人民币，票面利率3%的10年期名义标准国债 合约代码 TF T 报价方式 百元报价 最小变动价位 0.005元（每张合约50元） 合约月份 最近三个季月（3,6,9,12月） 交易时间 上午9:15-11:30，下午13:00-15:15 最大波幅 上一交易日结算价的1.2% 上一交易日结算价的2% 最低交易保证金 合约价值的1% 合约价值的2% 当日结算价 最后一小时成交的价格按成交量加权平均价 最后交易日 合约到期月份的第二个星期五 交割方式 实物交割 交割日期 最后交易日后连续三个工作日 可交割债券 在最后交割日剩余期限4—5.25年的固定利息国债 在最后交割日剩余期限6.5—10.25年的固定利息国债 交割结算价 最后交易日全天成交量加权平均价 转换因子国债期货合约交易标的是名义上的“标准券”，该标准券在市场上并不存在。市场上存在的期限不同、票面利率不同的各种国债。因为如果仅仅允许一种或者少量的债券进行交割，则国债期货的头寸将十分有限，将影响投资者的交易和交割行为（“327”事件）。交易所会在满足一定约束条件下希望尽可能多的债券能被用于交割。对于这些期限不同、票面利率各异的债券，交易所使用转换因子来实现来进行调整。 在交割时，不同的可交割债券所对应的调整期货价格（adjusted future price）是不同的。对于不同的可交割债券，其调整期货价格等于期货价格和转换因子的乘积：$$调整期货价格 = 期货价格 转换因子$$转换因子“抹平”国债期货合约的标的债券（标准券）和不同的可交割债券之间的差异，从而使得不同可交割债券之间的比较成为可能。在交割日，期货合约的空头将某支可交割债券支付给期货合约的多头。同时，期货合约的多头应支付该债券对应的调整期货价格以及该债券包含的应计利息给空头。多头支付的价格称之为发票价格（invoice price）。$$发票价格 = 期货价格 转换因子 + 应计利息$$ 交易所公布每个可交割债券的转换因子，不用自己计算。实际算法可以理解为1面值的可交割国债按标准券票面利率（3%）贴现至交割月的价值 不同债券、不同交割月份的转换因子不同。每个债券的转换因子在期货合约上市时确定，由债券本身的票面利率和交割日的剩余期限所决定，整个上市周期都不变。 转换因子随着可交割债券的票面利率单调变化。票面利率高，转换因子就大；如果票面利率大于标准券的票面利率（3%），则转换因子大于 1。相反，票面利率低，转换因子就小；如果票面利率低于期货标的的票面利率（3%），则转换因子小于 1。（相对3%债券的价值） 当可交割债券的票面利率高于标准券的票面利率（3%）时，期限越长，转换因子越大。相反，当可交割债券的票面利率低于标准券的票面利率时，期限越长，转换因子越小。 票面利率高于3%的同一债券，转换应子对应未来期货合约递减，to reflect the drift toward par of its price as it approaches maturity。 最便宜可交割债券在国债期货合约到期日，合约的卖方（空头）有选择具体可交割债券的权利。但是，在众多的可交割债券中，究竟选择哪个债券进行交割，才对于期货交易的卖方（空头）最有利呢？依据收益率的状况、收益率曲线的形状和其他因素，显然，一些债券将明显对期货合同的定价和未来走势有更大的影响。其中对于空头而言最有利的可交割债券被称之为“最便宜可交割债券。主要有两种确定方法：基差法（basis）和隐含回购利率（implied repo rate，IRR）。 基差法在交割日，不同交割债券的实际价格和调整期货价格之间的差值，差值最小的可交割债券就是CTD。或者说最便宜可交割债券的远期发票价格最便宜。 $$Bi = (P{i,T} + AI{i,T}) - (F{T} CFi + AI{i,T})$$ 其中，$Bi$表示可交割债券$i$的基差，$P{i,T}$表示在交割日T时的净价，$F_T$是期货在交割日的价格，$CFi$是该债券的转换因子，$AI{i,T}$是到交割日该债券的应计利息。所以可得 $$Bi = P{i,T} - F{T} CF{t}$$ 也就是等于可交割债券的净价和用转换因子调整后的期货价格的差值。基差越小，空头交割成本越低。 债券价格最便宜不等于最便宜交割券！ 隐含回购利率法考虑在期货合约成交日时，在卖出国债期货的同时借贷买入国债现货，在合约到期日使用买入的国债进行交割。隐含回购利率是指进行交割时所得到的调整期货价格和买入国债时所支出的现货价格计算出的收益率。可以看做银行间的代持。IRR最高的就是最便宜交割券。 $$IRRi = \frac{ F{t} CFi + AI^i{t,T} - P^it }{(P{i,t}+AI_{i,t})} * \frac{360}{n}$$ 其中，$F_t$是t时刻期货价格，$CF_i$是债券$i$的转换因子，$P^it$是债券在t时刻的净价，$AI^i{t,T}$是t-T的应计利息，$n$为t-T的天数。 另一种更好的方法是比较国债的隐含回购利率和对应期限的回购利率的差。对所有债券来说，这个差都为负值（否则有arbitrage），因为它反映了交割选择权的成本（期货空头的权利）。所以，利率差最接近0的就是最廉券。 两种方法的区别在于不同国债的质押回购利率可能不同，往往新的国债会发生这种情况。还有一种方法是比较净基差，净基差越小，越便宜。 比较净基差的缺点是没有考虑债券的市场价格。如果两个债券有相同净基差时，市场价高的那个用来交割更便宜。 合约定价持有成本模型对于国债期货合约的定价，其依据的是无套利原理。其中最常用的是持有成本（cost of carry）模型。假设期货合约价格为$F$，债券价格为$P$，票面利率为$c$。同时假设以$r$的利率进行借贷。假设在$t$时刻卖出期货，同时借贷买入债券，在交割日$T$时刻以该债券进行交割，并以接收的资金偿还负债。由一价定律可以推出期货的价格：$$F=P+P(T-t)(r-c)$$其中$(r-c)$是持有成本，它衡量了所赚取的票面利率和所支出的成本之间的区别。所以取决于持有成本的正负，期货理论价格可能高于现货、也可能低于现货价格。 对于国债期货而言，持有成本取决于收益率曲线的形状。当收益率曲线向上倾斜时，通常短期融资利率会小于债券收益率，持有成本为正；当收益率曲线向下倾斜时，则相反。持有成本模型所决定的期货价格没有考虑期间现金流，也没有考虑借贷成本和投资成本的区别。更重要的是它没有考虑可交割债券和交割日的不确定性。由于存在一系列的可交割债券，每只可交割债券的价格都可能会影响到期货的价格，同时期货合约赋予了空头选择交割债券的权利，因此，期货价格必然和空头所能选择的最便宜可交割债券紧密相关。]]></content>
      <categories>
        <category>金融市场</category>
      </categories>
      <tags>
        <tag>债券</tag>
        <tag>国债期货</tag>
        <tag>套利</tag>
      </tags>
  </entry>
</search>
